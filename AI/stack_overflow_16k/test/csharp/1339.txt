"<method> is not supported by the language i am writing an orchestration (restful web) service that will broker the calls to multiple dependent services and package up the results into a single comprehensive result object...part of this is mapping the inputs and outputs of the various services into the inputs to the other services...for example, orchestrationservice takes in an input.  it calls depservicea to retrieve a result.   it then takes the output of depservicea, combines it with the input to orchestrationservice to produce the input to depserviceb.  depserviceb returns a result that is then combined with the result of depservicea and the input to orchestrationservice to create the inputs to depservicec and depserviced.  all of this mapping is done via a cohesive mapper class - mapper...now for the rub.  there are two similar, but distinct endpoints in orchestrationservice that take in two similar, but distinct inputs, and call two similar, but distinct calls to depserviceb.  the rest of the workflow is identical.  the only difference is the inputs to depserviceb...so, i abstracted out the common parts of mapper into mapperbase, an abstract class, and two subclasses mapper1 and mapper2...the basic idea is this...public abstract class mapperbase {.    protected servicecinput maptoservicecinput(serviceboutput output, [some other fields passed in from subclass state]){.        //map to service c input.    }..    protected servicedinput maptoservicedinput(serviceboutput output, [some other fields passed in from subclass state]){.        //map to service d input.    }..    public abstract servicecinput maptoservicecinput(serviceboutput output);.    public abstract servicedinput maptoservicedinput(serviceboutput output);.}..public class mapper1 : mapperbase {.    public servicecinput maptoservicecinput(serviceboutput output){.        return maptoservicecinput(output, [state based params]);.    }.    public servicedinput maptoservicedinput(serviceboutput output){.        return maptoservicedinput(output, [state based params]);.    }..    public servicebinput1 maptoservicebinput(serviceaoutput serviceaoutput){.        //map to service b input 1.    }.}..public class mapper2 : mapperbase {.    public servicecinput maptoservicecinput(serviceboutput output){.        return maptoservicecinput(output, [state based params]);.    }.    public servicedinput maptoservicedinput(serviceboutput output){.        return maptoservicedinput(output, [state based params]);.    }..    public servicebinput2 maptoservicebinput(serviceaoutput serviceaoutput){.        //map to service b input 2.    }.}...now, these mappers are used in the actual endpoints, no problem...however, because i'm a good developer, i want to ensure that these mappers conform to my specifications, and have unit tests to cover that...mapper1 has zero problems.  the unit tests compile and run...mapper2 has a similar set of unit tests.  however, mapper2's set generates the following compile error:..'maptoservicebinput' is not supported by the language...this occurs only in the unit tests project, and only for mapper2.  it doesn't matter what i name the method.  it always generates this error (with whatever name the method currently has).  no other method on either class has an issue.  just this one...i've tried the following:...removing the reference to the endpoint project and readding it.cleaning the solution (and manually deleting the bin/obj directories across the entire solution.renaming the method..removing the inheritance to the base class.rebooting my machine.placing the call in a different file in the unit tests project.all combinations of the above....i always get this compiler error, but only for mapper2 and only for the unit tests project.  ..i'm at a loss."
