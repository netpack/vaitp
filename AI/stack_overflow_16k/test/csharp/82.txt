"blank object from powershell object i'm currently working on a powershell project and i've been working with powershell v5 classes to create custom types for the output objects. however, due to various failings in the current implementation of these classes i've decided to try out creating the classes in blank instead...i've run into a problem that i can't quite figure out when creating the class constructors. i'm working with powershell's invoke-restmethod and this returns objects of type pscustomobject. i need to use those objects' properties to instantiate objects from blank classes, as well as calculate some additional properties. an example powershell constructor looked like this:..class user.{.    [string].    $username..    [string].    $userprincipalname..    [hashtable].    $custom_attributes..    static [string] getstatus ([int]$status).    {.        { return [userstatus]([int]$status).    }..    static [hashtable] getcustom_attributes ([psobject]$custom_attributes).    {.        $output = @{}.        $custom_attributes.psobject.properties | foreach-object {.            if ($_.value) {$output[$_.name] = $_.value}.        }.        return $output.    }..    user ([pscustomobject]$inputobject).    {.        $this.username          = $inputobject.username.        $this.userprincipalname = $inputobject.userprincipalname.        $this.custom_attributes = [user]::getcustom_attributes($inputobject.custom_attributes).    }.}...now i've tried something similar in blank, but it doesn't appear that you can reference the constructor parameter properties inside the constructor:..using system;.using system.management.automation;.namespace test.{    .    public class user .    {.        public string username {get; set;}.        public string userprincipalname {get; set;}.        public object[] custom_attributes {get; set;}..        static string getstatus (int status).        {.            return enum.getname(typeof(test.userstatus), status);.        }..        user (pscustomobject inputobject).        {.            this.username          = inputobject.username;.            this.userprincipalname = inputobject.userprincipalname;.            this.custom_attribute  = test.user.getcustom_attributes(inputobject.custom_attributes);.        }.    }..    public enum userstatus.    {.        active,.        inactive.    }.}...when i import this with add-type i get an error:..'system.management.automation.pscustomobject' does not contain a definition for 'username' and no extensionmethod 'username' accepting a first argument of type 'system.management.automation.pscustomobject' could be found (are you missing a using directive or an assemblyreference?)..am i going about this entirely wrong? how can i create blank objects from the pscustomobjects while also having the capability to calculate some additional or replacement properties?.thanks!"
