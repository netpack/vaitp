"should i create one list or several? basic console-interface app that allows user to add/search information based on the following classes:..college.cs (program.cs) .person.cs .student.cs.staff.cs.lecturer.cs...staff and studentboth inherit functionality from person..first step was to define properties, constructors for person as follows:..using system;.using system.collections.generic;.using system.linq;.using system.text;.using system.threading.tasks;..namespace studentapp.{.    class person.    {..        //auto-implemented properties.        public int ppsnno { get; set; }..        public string firstname { get; set; }..        public string lastname { get; set; }..        public string address { get; set; }..        public string phone { get; set; }..        public string email { get; set; }...        //constructors .        public person() { }.        public person(int ppsn, string first, string last, string address, string phone, string email).        {..            ppsnno = ppsn;.            firstname = first;.            lastname = last;.            address = address;.            phone = phone;.            email = email;..        }..        //method.        public override string tostring().        {..        }..    }.}...next, i have started by creating a list in the student class, as follows (i know there are unnecessary/redundant methods, it's really just a question of where to store the list) :..using system;.using system.collections.generic;.using system.collections;.using system.linq;.using system.text;.using system.threading.tasks;..namespace icollection_example.{.    class student :icollection&lt;person&gt;.    {.        //property.        private list&lt;person&gt; studentlist;..        //constructor.        public person().        {.            studentlist = new list&lt;person&gt;();.        }..        #region interface properties.        public int count { get; }..        public bool isreadonly.        {.            get { return false; }.        }.        #endregion..        #region interface methods.        public void add(person book).        {.            studentlist.add(book);.        }..        public void clear().        {.            studentlist.clear();.        }..        public bool contains(person book).        {.            return studentlist.contains(book);.        }.        public bool remove(book book).        {.            return studentlist.remove(book);.        }.        public void copyto(person[] array, int index).        {.            studentlist.copyto(array, index);.        }.        public ienumerator&lt;person&gt; getenumerator().        {.            return studentlist.getenumerator();.        }..       ienumerator ienumerable.getenumerator().        {.            return studentlist.getenumerator();.        }..        #endregion..        #region student methods.        public bool remove(string ppsno).        {.            bool flag = false;.            for(int i = 0; i &lt; studentlist.count &amp;&amp; flag==false; i++).            {.                if(studentlist[i].ppsno == ppsno).                {.                    studentlist.remove(studentlist[i]);.                    flag = true;.                }.            }.            return flag;.        }..        #endregion.    }.}...is it necessary to create such a list again for the staff class or does it make more sense to create a single list to be stored elsewhere (possibly in person?) and then referenced in the classes that inherit another class' functionality - in this case, would student and staff reference a list stored in person?"
