"getting the best record from a file i have a file with the following text inside...mimi,m,70.tata,f,60.bobo,m,100.soso,f,30...i did the reading from file thing and many many other methods and functions, but how i can get the best male name and his grade according to the grade...here is the code i wrote. hope it's not so long..using system;.using system.collections.generic;.using system.text;.using system.io;..namespace practice_ex.{.    class program.    {.        public static int[] readfile(string filename, out string[] name, out char[] gender).        {.            name = new string[1];.            int[] mark = new int[1];.            gender = new char[1];.            if (file.exists(filename)).            {.                filestream input = new filestream(filename, filemode.open, fileaccess.read);.                streamreader sr = new streamreader(input);.                string[] current;.                int counter = 0;.                string str = sr.readline();.                while (str != null).                {.                    current = str.split(',');.                    name[counter] = current[0];.                    mark[counter] = int.parse(current[2]);.                    gender[counter] = char.parse(current[1].toupper());.                    counter++;.                    array.resize(ref name, counter + 1);.                    array.resize(ref mark, counter + 1);.                    array.resize(ref gender, counter + 1);.                    str = sr.readline();.                }.            }.            return mark;.        }..        public static int mostfreq(int[] m, out int frequency).        {.            int counter = 0;.            int frequent = 0;.            frequency = 0;.            for (int i = 0; i &lt; m.length; i++).            {.                counter = 0;.                for (int j = 0; j &lt; m.length; j++).                    if (m[i] == m[j]).                        counter++;.                if (counter &gt; frequency).                {.                    frequency = counter;.                    frequent = m[i];.                }.            }.            return frequent;.        }..        public static int avg(int[] m).        {.            int total = 0;.            for (int i = 0; i &lt; m.length; i++).                total += m[i];.            return total / m.length;.        }..        public static int avgcond(char[] g, int[] m, char s).        {.            int total = 0;.            int counter = 0;.            for (int i = 0; i &lt; g.length; i++).                if (g[i] == s).                {.                    total += m[i];.                    counter++;.                }.            return total / counter;.        }..        public static int belowavg(int[] m, out int aboveavg).        {.            int bcounter = 0;.            aboveavg = 0;.            for (int i = 0; i &lt; m.length; i++).            {.                if (m[i] &lt; avg(m)).                    bcounter++;.                else.                    aboveavg++;.            }.            return bcounter;.        }..        public static int checknames(string[] name, char c).        {.            c = char.parse(c.tostring().tolower());.            int counter = 0;.            string str;.            for (int i = 0; i &lt; name.length - 1; i++).            {.                str = name[i].tolower();.                if (str[0] == c || str[str.length - 1] == c).                    counter++;.            }.            return counter;.        }..        public static void writefile(string filename, string[] output).        {.            filestream fs = new filestream(filename, filemode.openorcreate, fileaccess.write);.            streamwriter sw = new streamwriter(fs);.            for (int i = 0; i &lt; output.length; i++).                sw.writeline(output[i]);.        }..        static void main(string[] args).        {.            int[] mark;.            char[] gender;.            string[] name;.            string[] output = new string[8];.            int frequent, frequency, avgall, maleavg, femaleavg, belowaverage, aboveaverage, namescheck;.            mark = readfile(""c:\iust1.txt"", out name, out gender);.            frequent = mostfreq(mark, out frequency);.            avgall = avg(mark);.            maleavg = avgcond(gender, mark, 'm');.            femaleavg = avgcond(gender, mark, 'f');.            belowaverage = belowavg(mark, out aboveaverage);.            namescheck = checknames(name, 't');.            output [0]= ""frequent mark = "" + frequent.tostring();.            output [1]= ""frequency = "" + frequency.tostring();.            output [2]= ""average of all = "" + avgall.tostring();.            output [3]= ""average of males = "" + maleavg.tostring();.            output [4]= ""average of females = "" + femaleavg.tostring();.            output [5]= ""below average = "" + belowaverage.tostring();.            output [6]= ""above average = "" + aboveaverage.tostring();.            output [7]= ""names with ""t"" = "" + namescheck.tostring();.            writefile(""c:\output.txt"", output);.        }.    }.}"
