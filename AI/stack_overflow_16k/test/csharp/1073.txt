"why can i only call getresponsestream() once i've just noticed some behavior in blank that's thrown me off a little. i'm using blank 5 and .net 4.5. when i call getresponsestream() on a httpresponse object i am able to get the response stream, but if i call it again on the same object the response is blank...// works! body of the response is in the source variable..httpresponse response = (httpwebresponse)request.getresponse();.string source = new streamreader(response.getresponsestream()).readtoend();..// does not work. source is empty;.string source2 = new streamreader(response.getresponsestream()).readtoend();...the above is just an example to demonstrate the problem...edit..this is what i'm trying to do. basically if  an event is attached to the http object it will pass a response back to the callback method...httpwebresponse public get(string url).{.    // httpwebrequest .....    httpwebresponse response = (httpwebresponse)request.getresponse();..    // postrequest is an event handler. the response is passed to the.    // callback to do whatever it needs to do..    if (this.postrequest != null).    {.        requesteventargs requestargs = new requesteventargs();.        requestargs.source = response;.        postrequest.invoke(this, requestargs);.    }..    return response;.}...in the callback method i may want to check the body of the response. if i do, i lose the the data from the response when get() returns the response."
