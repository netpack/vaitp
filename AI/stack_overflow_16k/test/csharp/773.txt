"does the culture of the stringcomparison type of string.equals matter? in blank, you can compare two strings with string.equals and supply a stringcomparison...i've recently been looking to update my archaic method of comparing tolower() because i read that it doesn't work on all languages/cultures...from what i can tell, the comparison types are used to determine order when confronted with a list containing a√© and ae as to which should appear first (some cultures order things differently)...with string.equals, ordering is not important. therefore is it safe to assume that many of the options are irrelevent, and only [ordinal] and [ordinal]ignorecase are important?..the msdn article for string.equals says ...  the comparisontype parameter indicates whether the comparison should.  use the current or invariant culture, honor or ignore the case of the.  two strings being compared, or use word or ordinal sort rules....string.equals(mystring, theirstring, stringcomparison.ordinalignorecase)..i'd also be interested to know how the sort method works internally, does it use string.compare to work out the relative positioning of two strings?"
