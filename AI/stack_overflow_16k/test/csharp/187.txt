"is it possible to create new keyword for your own type (like `double` for `system.double`)? i wonder if anyone can explain how the system.double is different from system.double and how these differences are constructed in code...if one looks at the class:..public struct double : icomparable, iformattable, iconvertible, icomparable&lt;double&gt;, iequatable&lt;double&gt;...from: https://referencesource.microsoft.com/#mscorlib/system/double.cs,1a65cbdb09544ba1..there is no clarity between the double and double types...using visual studio 2015, it is recommended that one uses the double key word instead of double as the conversion is less...if i were to write a custom data type and derive from double, for example, would constructing it by dynamic be enough to get the ball rolling...it baffles me at how .net has derived the base data types...edit:.a search on the net shows there is a lot of confusion on this topic. for example:..using system;..public class qbit : icomparable, iformattable, iconvertible.{..internal _qbit..public string value { get { return _qbit; }..public qbit().{._qbit = ""1978"";.}..}...in another class:..using system;..using qbit = qbit;..public class spinstate.{..internal _state..public string value { get { return _state; }..public qbit().{.qbit = new qbit ();._state = qbit.value;.}..}...is not the same as a keyword, this is an alias. how to declare a keyword?..edit: a keyword is defined as:...  keywords are predefined reserved identifiers that have special meanings to the compiler. they cannot be used as identifiers in your program unless they include @ as a prefix. for example, @if is a legal identifier but if is not because it is a keyword....the keyword 'double' is defined as follows:...  the double keyword signifies a simple type that stores 64-bit floating-point values. the following table shows the precision and approximate range for the double type....the type is as specified by the ieee 754 standard, which is a binary64 double precision floating-point format - still, we are no closer to defining a keyword in code and more importantly ""and how they are constructed"""
