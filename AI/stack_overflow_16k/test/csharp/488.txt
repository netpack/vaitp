"stack implementation that a class contains an object of the same class i've read a code of stack implementation in blank...the code is working but i don't understand whether it is illegal (i am sure it is legal as i can compile it) to have a object of a class inside the same class. the code is as follows...public class stack{..    entry top;..    public void push(object data){.        top = new entry(top, data);    .    }..    public object pop(){.        if(top==null) throw new invalidoperationexception();    ..        object result = top.data;   .        top = top.next;  ..        return result;   .    }..    class entry{..        public entry next;//?.        public object data;..        public entry(entry next, object data){.            this.next = next;.            this.data = data;.        }..    }.}...the code is compiled and running ok...i am confused that inside of the entry class, it has a field next of entry class. ..furthermore, when stack is calling push method, it calls the entry constructor, which set this.next to next, but i don't understand how this works, this.next will point to object next, but where and how the object ""next"" being created...i am very appreciated if someone could help me to understand the above code."
