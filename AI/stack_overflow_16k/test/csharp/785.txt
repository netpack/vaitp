".net return value optimization will the .net compiler optimize this:..public myobject getnewobject().{.    var newcurrentobject = myobjectfactory.createnew(.                                 datetime.now, .                                 ""frank"", .                                 41, .                                 secretpassword);..    return newcurrentobject;.}...to execute with the same number of instructions/memory as this:..public myobject getnewobject().{.    return myobjectfactory.createnew(.                        datetime.now, .                        ""frank"", .                        41, .                        secretpassword);.}...or will the local variable result in extra time and memory being spent to create a reference (newobject) to the myobject only destroy it the next line once it's out of scope...i ask because, performance all the same, i find the first to be more readable as a local variable name can often give the next developer some context as to what we're doing here."
