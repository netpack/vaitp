"blank password doesn't encrypted correctly i tried to use crypt32.dll to encrypt password in .rdp file as below :..internal static class cryptpassword.{.#region keytype enum..public enum keytype.{.userkey = 1,.machinekey.} ;..#endregion..private const int cryptprotect_local_machine = 0x4;.private const int cryptprotect_ui_forbidden = 0x1;.private static readonly intptr nullptr = ((intptr)((0)));.private static keytype defaultkeytype = keytype.userkey;..public static byte[] dorawencryption(string strtoencrypt).{.byte[] cryptbytes = encrypt(keytype.userkey, encoding.utf8.getbytes(strtoencrypt), null, null);..return cryptbytes;.}..// wrapper for dpapi cryptprotectdata function..[dllimport(""crypt32.dll"", setlasterror = true, charset = charset.auto)].private static extern bool cryptprotectdata(ref data_blob pplaintext, string szdescription, ref data_blob pentropy, intptr preserved, ref cryptprotect_promptstruct pprompt, int dwflags, ref data_blob pciphertext);..// wrapper for dpapi cryptunprotectdata function..[dllimport(""crypt32.dll"", setlasterror = true, charset = charset.auto)].private static extern bool cryptunprotectdata(ref data_blob pciphertext, ref string pszdescription, ref data_blob pentropy, intptr preserved, ref cryptprotect_promptstruct pprompt, int dwflags, ref data_blob pplaintext);..// blob structure used to pass data to dpapi functions...private static void initprompt(ref cryptprotect_promptstruct ps).{.ps.cbsize = marshal.sizeof(typeof(cryptprotect_promptstruct));.ps.dwpromptflags = 0;.ps.hwndapp = nullptr;.ps.szprompt = null;.}..private static void initblob(byte[] data, ref data_blob blob).{.// use empty array for null parameter..if (data == null).data = new byte[0];..// allocate memory for the blob data..blob.pbdata = marshal.allochglobal(data.length);..// make sure that memory allocation was successful..if (blob.pbdata == intptr.zero).throw new exception(""unable to allocate data buffer for blob structure."");..// specify number of bytes in the blob..blob.cbdata = data.length;..// copy data from original source to the blob structure..marshal.copy(data, 0, blob.pbdata, data.length);.}..public static string encrypt(string plaintext).{.return encrypt(defaultkeytype, plaintext, string.empty, string.empty);.}..public static string encrypt(keytype keytype, string plaintext).{.return encrypt(keytype, plaintext, string.empty, string.empty);.}..public static string encrypt(keytype keytype, string plaintext, string entropy).{.return encrypt(keytype, plaintext, entropy, string.empty);.}..public static string encrypt(keytype keytype, string plaintext, string entropy, string description).{.// make sure that parameters are valid..if (plaintext == null) plaintext = string.empty;.if (entropy == null) entropy = string.empty;..// call encryption routine and convert returned bytes into a base64-encoded value..return convert.tobase64string(encrypt(keytype, encoding.utf8.getbytes(plaintext), encoding.utf8.getbytes(entropy), description));.}..public static byte[] encrypt(keytype keytype, byte[] plaintextbytes, byte[] entropybytes, string description).{.// make sure that parameters are valid..if (plaintextbytes == null) plaintextbytes = new byte[0];.if (entropybytes == null) entropybytes = new byte[0];.if (description == null) description = string.empty;..// create blobs to hold data..data_blob plaintextblob = new data_blob();.data_blob ciphertextblob = new data_blob();.data_blob entropyblob = new data_blob();..// we only need prompt structure because it is a required.// parameter..cryptprotect_promptstruct prompt = new cryptprotect_promptstruct();.initprompt(ref prompt);..try.{.// convert plaintext bytes into a blob structure..try.{.initblob(plaintextbytes, ref plaintextblob);.}.catch (exception ex).{.throw new exception(""cannot initialize plaintext blob."", ex);.}..// convert entropy bytes into a blob structure..try.{.initblob(entropybytes, ref entropyblob);.}.catch (exception ex).{.throw new exception(""cannot initialize entropy blob."", ex);.}..// disable any types of ui..int flags = cryptprotect_ui_forbidden;..// when using machine-specific key, set up machine flag..if (keytype == keytype.machinekey).flags |= cryptprotect_local_machine;..// call dpapi to encrypt data..bool success = cryptprotectdata(ref plaintextblob, description, ref entropyblob, intptr.zero, ref prompt, flags, ref ciphertextblob);.// check the result..if (!success).{.// if operation failed, retrieve last win32 error..int errcode = marshal.getlastwin32error();..// win32exception will contain error message corresponding to the windows error code..throw new exception(""cryptprotectdata failed."");.}..// allocate memory to hold ciphertext..byte[] ciphertextbytes = new byte[ciphertextblob.cbdata];..// copy ciphertext from the blob to a byte array..marshal.copy(ciphertextblob.pbdata, ciphertextbytes, 0, ciphertextblob.cbdata);..// return the result..return ciphertextbytes;.}.catch (exception ex).{.throw new exception(""dpapi was unable to encrypt data."", ex);.}.// free all memory allocated for blobs..finally.{.if (plaintextblob.pbdata != intptr.zero).marshal.freehglobal(plaintextblob.pbdata);..if (ciphertextblob.pbdata != intptr.zero).marshal.freehglobal(ciphertextblob.pbdata);..if (entropyblob.pbdata != intptr.zero).marshal.freehglobal(entropyblob.pbdata);.}.}..#region nested type: cryptprotect_promptstruct..[structlayout(layoutkind.sequential, charset = charset.unicode)].internal struct cryptprotect_promptstruct.{.public int cbsize;.public int dwpromptflags;.public intptr hwndapp;.public string szprompt;.}.#endregion..#region nested type: data_blob..[structlayout(layoutkind.sequential, charset = charset.unicode)].internal struct data_blob.{.public int cbdata;.public intptr pbdata;.}.#endregion.}...and call it as below:..class program.{.    public static string encryptedpassword;.    static void main(string[] args).    {.        byte[] cryptbytes = cryptpassword.dorawencryption(""t"");.        encryptedpassword = encoding.utf8.getstring(cryptbytes);.        encryptedpassword = bitconverter.tostring(cryptbytes).replace(""-"", """");..    }.}...the problem is that the result doesn't match with the the .rdp encryption:..code encryption result :..01000000d08c9ddf0115d1118c7a00c04fc297eb01000000085a862ec951114caedc00a80522cc48000000000.2000000000003660000a800000010000000d20eddd67ec1bb9f0b1e996ca4a1930a0000000004800000a00000.00100000003b458bc56d4d6c81cfd7ce797d31353c08000000a523707ec1c6963a14000000f1918840b926cf4.887085b0fcfa5a1ad8e929d30...encryption using http://www.remkoweijnen.nl/blog/2007/10/18/how-rdp-passwords-are-encrypted/ ..demo converter application was :..01000000d08c9ddf0115d1118c7a00c04fc297eb010000002d0779e40801fb4984e12a8a519d599904000.00008000000700073007700000003660000a800000010000000a9abedb349d432ecb0cc8ccf337ecb0f00.00000004800000a00000001000000015f29360976a00ea2e85e9a1bbd9e123080000006c8b090a9cd09b7.5140000003c77984dad4134987d16113af4ff0df8bbbd392c...please help!"
