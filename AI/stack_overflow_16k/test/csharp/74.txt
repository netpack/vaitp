"project euler 18 hey, been working at project euler, and this one is giving me some problems...  by starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23..  .  3.  .  7 4.  .  2 4 6.  .  8 5 9 3.  .  that is, 3 + 7 + 4 + 9 = 23..  .  find the maximum total from top to bottom of the triangle below:.  .  ....  .  note: as there are only 16384 routes, it is possible to solve this problem by trying every route. however, problem 67, is the same challenge with a triangle containing one-hundred rows; it cannot be solved by brute force, and requires a clever method! ;o)...here's the algorithm i've used to solve it..using system;.using system.collections.generic;.using system.linq;.using system.text;..namespace problem18.{.    class program.    {.        static void main(string[] args).        {.            string triangle = @""75.95 64.17 47 82.18 35 87 10.20 04 82 47 65.19 01 23 75 03 34.88 02 77 73 07 63 67.99 65 04 28 06 16 70 92.41 41 26 56 83 40 80 70 33.41 48 72 33 47 32 37 16 94 29.53 71 44 65 25 43 91 52 97 51 14.70 11 33 28 77 73 17 78 39 68 17 57.91 71 52 38 17 14 91 43 58 50 27 29 48.63 66 04 68 89 53 67 30 73 16 69 87 40 31.04 62 98 27 23 09 70 98 73 93 38 53 60 04 23"";.            string[] rows = triangle.split('n');.            int currindex = 1;.            int total = int.parse(rows[0]);.            console.writeline(rows[0]);.            for (int i = 1; i &lt; rows.length; i++).            {.                string[] array1 = rows[i].split(' ');.                if (array1.length &gt; 1).                {.                    if (int.parse(array1[currindex - 1]) &gt; int.parse(array1[currindex])).                    {.                        console.writeline(array1[currindex - 1]);.                        total += int.parse(array1[currindex - 1]);.                    }.                    else.                    {.                        console.writeline(array1[currindex]);.                        total += int.parse(array1[currindex]);.                        currindex++;.                    }.                }.            }.            console.writeline(""total: "" + total);.            console.readkey();.        }.    }.}...now whenever i run it, it comes up with 1064, only 10 less then the solution -- 1074..i haven't found any problems with the algorithm and i did the problem by hand and also came up with 1064, anyone know if the solution is wrong, i'm interpreting the question wrong, or if there's just a flaw in the algorithm?"
