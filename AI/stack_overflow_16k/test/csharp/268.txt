"blank weird encryption issue i've made my own encryption system for in my framework and i've been using it for a while now and it works fine however, i just found a serious issue: if the string that needs to be encrypted is exactly 4 characters long, the second character becomes the last character like so:..1234 > 1434..2408 > 2808..24082408 > 24082408..123  > 123..12   > 12..12345 > 12345..it really only happens when the string is exactly 4 characters, anything less/more and it works absolutely fine!..i have no idea if it's the encryption causing it or the decryption... ..the code to encrypt:.. public static string doencrypt(string toencrypt, [optional, defaultparametervalue(true)] bool usehashing).    {.        memory.hasinitializedcheck();.        int intlenght = toencrypt.length - 1;.        string newstring = null;.        for (int intcount = intlenght; intcount &gt;= 0; intcount--).        {..            if (intcount == 2).            {.                newstring += toencrypt.substring(intlenght, 1);.            }.            else if (intcount == 1).            {.                newstring += toencrypt.substring(intlenght - 1, 1);.            }.            else if (intcount == intlenght - 1).            {.                newstring += toencrypt.substring(1, 1);.            }.            else if (intcount == intlenght).            {.                newstring += toencrypt.substring(2, 1);.            }.            else.            {.                newstring += toencrypt.substring(intcount, 1);.            }..        }.        char[] array = application.productname.tochararray();.        array.reverse(array);.        newstring += ""#"" + new string(array) + ""#"";...        byte[] keyarray;.        byte[] toencryptarray = utf8encoding.utf8.getbytes(newstring);.        if (usehashing).        {.            md5cryptoserviceprovider hashmd5 = new md5cryptoserviceprovider();.            keyarray = hashmd5.computehash(utf8encoding.utf8.getbytes(mechakey));.            hashmd5.clear();.        }.        else.        {.            keyarray = utf8encoding.utf8.getbytes(mechakey);.        }.        tripledescryptoserviceprovider tdes = new tripledescryptoserviceprovider();.        tdes.key = keyarray;.        tdes.mode = ciphermode.ecb;.        tdes.padding = paddingmode.pkcs7;.        icryptotransform ctransform = tdes.createencryptor();.        byte[] resultarray = ctransform.transformfinalblock(toencryptarray, 0, toencryptarray.length);.        tdes.clear();.        string finalenc = convert.tobase64string(resultarray, 0, resultarray.length);.        return finalenc;..    }...and the code to decrypt.. public static string dodecrypt(string todecrypt, [optional, defaultparametervalue(true)] bool usehashing).    {.        memory.hasinitializedcheck();.        byte[] keyarray;.        byte[] toencryptarray = convert.frombase64string(todecrypt);.        if (usehashing).        {.            md5cryptoserviceprovider hashmd5 = new md5cryptoserviceprovider();.            keyarray = hashmd5.computehash(utf8encoding.utf8.getbytes(mechakey));.            hashmd5.clear();.        }.        else.            keyarray = utf8encoding.utf8.getbytes(mechakey);..        tripledescryptoserviceprovider tdes = new tripledescryptoserviceprovider();.        tdes.key = keyarray;.        tdes.mode = ciphermode.ecb;.        tdes.padding = paddingmode.pkcs7;.        icryptotransform ctransform = tdes.createdecryptor();.        byte[] resultarray = ctransform.transformfinalblock(toencryptarray, 0, toencryptarray.length);.        array.reverse(resultarray);.        string utf = utf8encoding.utf8.getstring(resultarray);.        int lenght = application.productname.length + 2;.        bool start = false;.        string appname = null;.        try.        {.            if (utf.substring(0, lenght) != ""#"" + application.productname + ""#"").            {..                for (int appchecker = 0; appchecker &lt; utf.length; appchecker++).                {.                    if (utf.substring(appchecker, 1) == ""#"" &amp;&amp; start == false).                    {.                        appchecker = appchecker + 1;.                        start = true;.                    }.                    if (start).                    {.                        appname += utf.substring(appchecker, 1);.                    }.                    if (utf.substring(appchecker + 1, 1) == ""#"" &amp;&amp; start == true).                    {.                        break;.                    }.                }..                return ""idmismatch key belongs to "" + appname + "" %e01"";.            }.        }.        catch.        {..            return ""idmismatch key lenght incorrect %e02"";.        }...        utf = utf.replace(""#"" + application.productname + ""#"", """");.        char[] utfchar = utf.tochararray();.        array.reverse(utfchar);.        int intlengt = utfchar.length - 1;.        string newstring = null;.        for (int intcount = 0; intcount &lt;= intlengt; intcount++).        {..            if (intcount == 2).            {.                newstring += utf.substring(intlengt, 1);.            }.            else if (intcount == 1).            {.                newstring += utf.substring(intlengt - 1, 1);.            }.            else if (intcount == intlengt - 1).            {.                newstring += utf.substring(1, 1);.            }.            else if (intcount == intlengt).            {.                newstring += utf.substring(2, 1);.            }.            else.            {.                newstring += utf.substring(intcount, 1);.            }..        }.        tdes.clear();.        return newstring;.    }...}...i have tried different encryption keys but it didn't change anything...can anyone tell me what's wrong?..thanks"
