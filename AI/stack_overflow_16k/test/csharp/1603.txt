"indexer with multiple return types i'm using indexers in my class to make searching through a list easier. however, i want to be able to return both a bool and an int. not at the same time but determine whether it's a bool or an int and then return it...public class upermissions.{..    private list&lt;upermission&gt; permissions = new list&lt;upermission&gt; ().    {.        new upermission (""canbuild"", false),.        new upermission (""canclaim"", false),.        new upermission (""canunclaim"", false),.        new upermission (""caninvite"", false),.        new upermission (""cankick"", false),.        new upermission (""cansethome"", false).    };.    private list&lt;uconstraint&gt; constraints = new list&lt;uconstraint&gt; ();..    public bool this[string index].    {.        get.        {.            return permissions.where (p =&gt; p.name == index).first ().allowed;.        }.        set.        {.            permissions.where (p =&gt; p.name == index).first ().allowed = value;.        }.    }.    public int this[string index].    {.        get.        {.            return constraints.where (c =&gt; c.name == index).first ().count;.        }.        set.        {.            constraints.where (c =&gt; c.name == index).first ().count = value;.        }.    }..    public bool exists (string permission).    {.        var perm = permissions.where (p =&gt; p.name.tolower () == permission.tolower ()).first ();.        return (perm != null) ? true : false;.    }..    public void setalltrue ().    {.        foreach (upermission p in permissions).        {.            p.allowed = true;.        }.    }.    public void setallfalse ().    {.        foreach (upermission p in permissions).        {.            p.allowed = false;.        }.    }.}..public class uconstraint.{.    public string name;.    public int count;..    public uconstraint () { }.    public uconstraint (string name, int count).    {.        this.name = name;.        this.count = count;.    } .}..public class upermission.{.    public string name;.    public bool allowed;..    public upermission () { }.    public upermission (string name, bool allowed).    {.        this.name = name;.        this.allowed = allowed;.    }.}...that's my code. i saw something about templates while searching but i don't understand how it works or if it's even the right solution. if anyone can give some insight it would be greatly appreciated"
