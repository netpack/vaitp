"processing large bitmap images in wpf i need to process (change brightness, contrast etc) very large high-quality bitmaps (often over 10mpx) several times per second and need to update it on screen every time ( on image control in wpf). currently i'm using aforge.net library for unmanaged image processing, but there are some problems i cannot solve. first of all, one operation takes ~300ms (without updating the screen) which is not acceptable for me. here's sample code:..unmanagedimage _img;.brightnesscorrection _brightness = new brightnesscorrection();..void load().{.   _img = unmanagedimage.frommanagedimage((bitmap)bitmap.fromfile(""image.jpg""));.}..void changebrightness(int val) // this method is invoked by changing slider value - several times per second.{.   _brightness.adjustvalue = val;.   _brightness.applyinplace(_img); // it takes ~300ms for image 22mpx, no screen update - just change brightness ""in background"".} ...i have no experience in image processing, but i think it cannot be much faster since it is very high resolution. am i right?..another problem - how to efficiently update the screen? at the moment i have the following (ofc very bad) solution:..void changebrightness(int val).{.   _brightness.adjustvalue = val;.   _brightness.applyinplace(_img);..    using (memorystream ms = new memorystream()).    {.        using (bitmap b = _img.tomanagedimage()).        {.            b.save(ms, imageformat.bmp);.            ms.seek(0, seekorigin.begin);..            var bmp = new bitmapimage();.            bmp.begininit();.            bmp.streamsource = ms;.            bmp.cacheoption = bitmapcacheoption.onload;.            bmp.endinit();..            myimagecontrol.source = new writeablebitmap(bmp); // !!!.        }.    }.}...as you can see, every time new writeablebitmap is created (you can imagine what is happenin). instead of these ""usings"" i tried that way:..    writeablebitmapsource.lock(); // this object (of type writeablebitmap) is just mvvm viewmodel's property which is binded to myimagecontrol.source.    writeablebitmapsource.source.writepixels(new int32rect(0, 0, _img.width, _img.height), _img.imagedata, _img.stride * _img.height * 3, _img.stride, 0, 0); // image's pixelformat is 24bpprgb...... but writepixels method throws ""value does not fall within the expected range.""  any ideas why?.any help will be much appreciated :)..p.s..is aforge.net a good choice at all? maybe there is better image processing lib?..sorry for my english ;p"
