"how to compare nested properties between lists so, i'm basically creating a version control-like system. i have the following class form:..public class form.{.    public long id {get; private set;}.    /* among other things */.}...then, another class like so:..public class conflict.{.    list&lt;form&gt; localforms;.    list&lt;form&gt; remoteforms;.    /* among other things */.}...and then a main class that maintains a list of conflicts...public class main.{.    list&lt;conflict&gt; conflicts;..    /*.     * more stuff....    */..    public void addformconflict(list&lt;form&gt; locals, list&lt;form&gt; remotes).    {.        ...what goes here?.    }.}...i want to make sure that when a new conflict object is about to be added, it doesn't contain duplicate data; in other words, i want to compare ids of the list&lt;form&gt; locals argument with ids contained by the localforms member of the conflicts list. and same for the remotes as well. furthermore, i not only want to find out whether or not such a match exists, but i also want to get a reference to it...basically long story short, i want to compare the properties in a list of objects with corresponding properties in another similarly-structured list of objects... which are contained by another class which is in a list...i'm pretty sure there's gotta be some relatively simple way to do something like this with linq in about 2-3 lines, right? i just can't for the life of me wrap my head around all the layers! ugh. help please?"
