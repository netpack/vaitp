"search by name instead of id, blank for my products controller i have ..namespace product2.controllers.{.public class productscontroller : apicontroller.{.    product[] products = new product[].    {.        new product { id = 1, name = ""tomato soup"", category = ""groceries"", price = 1 },.        new product { id = 2, name = ""yo-yo"", category = ""toys"", price = 3.75m },.        new product { id = 3, name = ""hammer"", category = ""hardware"", price = 16.99m }.    };..    public ienumerable&lt;product&gt; getallproducts().    {.        return products;.    }..    public ihttpactionresult getproduct(int id).    {.        var product = products.firstordefault((p) =&gt; p.id == id);.        if (product == null).        {.            return notfound();.        }.        return ok(product);.    }.}.}...and in my index i have..var uri = 'api/products';..$(document).ready(function () {.  // send an ajax request.  $.getjson(uri).      .done(function (data) {.        // on success, 'data' contains a list of products..        $.each(data, function (key, item) {.          // add a list item for the product..          $('&lt;li&gt;', { text: formatitem(item) }).appendto($('#products'));.        });.      });.});..function formatitem(item) {.  return item.name + ': $' + item.price;.}..function find() {.    var id = $('#prodid').val();..  $.getjson(uri + '/' + id).      .done(function (data) {.        $('#product').text(formatitem(data));.      }).      .fail(function (jqxhr, textstatus, err) {.        $('#product').text('error: ' + err);.      });.}...but i want to search by name instead of id, ..public ihttpactionresult getproduct(string name).    {.        var product = products.firstordefault((p) =&gt; p.name == name);.        if (product == null).        {.            return notfound();.        }.        return ok(product);.    }. }...does not work, i suspect products.firstordefault is part of the issue, but i have tried  products.any, but when i click just shows undefined $undefined ( function formatitem(item) {.      return item.name + ': $' + item.price;.    })"
