"the name 'methodname' does not exist in the current context in my localplayer class i have 4 properties that looks like this:..        public class localplayer : player.{.    #region methods..    public override string tostring().    {.        return string.format(""[cslocalplayer m_icrosshairidx={1}, m_ishotsfired={2}, m_vecpunch={0}]n{3}"",.            vecpunch, crosshairidx, shotsfired, base.tostring());.    }..    #endregion..    #region fields.    public vector3 vecviewoffset =&gt; readfieldproxy&lt;vector3&gt;(""cslocalplayer.m_vecviewoffset"");.    public vector3 vecpunch =&gt; readfieldproxy&lt;vector3&gt;(""cslocalplayer.m_vecpunch"");.    public int shotsfired =&gt; readfieldproxy&lt;int&gt;(""cslocalplayer.m_ishotsfired"");.    public int crosshairidx =&gt; readfieldproxy&lt;int&gt;(""cslocalplayer.m_icrosshairidx"");.    #endregion..    #region constructors..    public localplayer(int address) : base(address).    {.        addfield&lt;vector3&gt;(""cslocalplayer.m_vecviewoffset"", offsets.netvars.localplayer.vecviewoffset);.        addfield&lt;vector3&gt;(""cslocalplayer.m_vecpunch"", offsets.netvars.localplayer.vecpunch);.        addfield&lt;int&gt;(""cslocalplayer.m_ishotsfired"", offsets.netvars.localplayer.shotsfired);.        addfield&lt;int&gt;(""cslocalplayer.m_icrosshairidx"", offsets.netvars.localplayer.crosshairidx);.    }..    public localplayer(player player) : base(player).    {.        copyfieldsfrom(player);.        addfield&lt;vector3&gt;(""cslocalplayer.m_vecviewoffset"", offsets.netvars.localplayer.vecviewoffset);.        addfield&lt;vector3&gt;(""cslocalplayer.m_vecpunch"", offsets.netvars.localplayer.vecpunch);.        addfield&lt;int&gt;(""cslocalplayer.m_ishotsfired"", offsets.netvars.localplayer.shotsfired);.        addfield&lt;int&gt;(""cslocalplayer.m_icrosshairidx"", offsets.netvars.localplayer.crosshairidx);.    }..    #endregion.}...they should use my readfieldproxy from my entity class that is here:..namespace simplecsgoapplication.csgo.{.    /// &lt;summary&gt;.    ///     an abstract class meant for managing entities.    ///     utilizes a hashtable to manage reading data and cache data.    /// &lt;/summary&gt;.    public abstract class entity.    {.    #region methods..    public override string tostring().    {.        return $""[entity address={address.tostring(""x"")}]"";.    }..    #endregion..    #region properties..    protected hashtable fields { get; }.    public int address { get; protected set; }..    #endregion..    #region constructors..    public entity(int address).    {.        address = address;.        fields = new hashtable();.        setupfields();.    }..    public entity() : this(0).    {.    }..    #endregion..    #region helpers..    protected void addfield&lt;t&gt;(string fieldname, int offset, t value = default(t)) where t : struct.    {.        fields[fieldname] = new field&lt;t&gt;(offset, value);.    }..    /// &lt;summary&gt;.    ///     returns the value of the given field if the field has read its value before.    ///     makes the field read its value if it did not do so before.    /// &lt;/summary&gt;.    /// &lt;typeparam name=""t""&gt;&lt;/typeparam&gt;.    /// &lt;param name=""fieldname""&gt;&lt;/param&gt;.    /// &lt;returns&gt;&lt;/returns&gt;.    public t readfieldproxy&lt;t&gt;(string fieldname) where t : struct.    {.        var field = (field&lt;t&gt;)fields[fieldname];.        if (!field.valueread).            field.readvalue(address);.        return field.value;.    }..    /// &lt;summary&gt;.    ///     copies the fields of one entity to another one;.    ///     used for copy-constructors.    /// &lt;/summary&gt;.    /// &lt;typeparam name=""t""&gt;&lt;/typeparam&gt;.    /// &lt;param name=""other""&gt;&lt;/param&gt;.    protected void copyfieldsfrom&lt;t&gt;(t other) where t : entity.    {.        foreach (string key in other.fields.keys).            fields[key] = other.fields[key];.    }..    protected virtual void setupfields().    {.    }..    #endregion.}...but for some reason i can't find readfieldproxy from my localplayer class? they are both in the same namespace, and my readfieldproxy is public, so why can't i use it?"
