"blank show possible combinations i have 20 pots that are used to create a schedule of 2 pot groupings.  i need to find all possible schedules that can be created...// create range of pots. ienumerable&lt;int&gt; pots = enumerable.range(1, 20);...get all the possible 2 pot groups:..    public datatable createcombinations(ienumerable&lt;int&gt; pots).    {..        datatable testtable = new datatable();.        testtable.columns.add(""pot1"");.        testtable.columns.add(""pot2"");.        for (int i = 0; i &lt; pots.count(); i++).        {.            for (int j = i + 1; j &lt; pots.count(); j++).            {.                var row = testtable.newrow();.                row[""pot1""] = pots.elementat(i);.                row[""pot2""] = pots.elementat(j);.                testtable.rows.add(row);.            }.        }..        return testtable;.    }...list of all the possible schedules that can be created from the 1,n combinations:..public datatable createpossibleschedules(datatable dt).        {.            datatable testtable = new datatable();.            testtable.columns.add(""pot1"");.            testtable.columns.add(""pot2"");.            testtable.columns.add(""schedule"");.            for (var i = 0; i &lt; dt.rows.count; i++).            {.                if(dt.rows[i][""pot1""].tostring() == ""1"").                {.                    for (var x = i; x &lt; dt.rows.count; x++).                    {.                        string pot1 = dt.rows[x][""pot1""].tostring();.                        string pot2 = dt.rows[x][""pot2""].tostring();.                        string schedule = (i + 1).tostring();.                        bool exists = testtable.asenumerable().any(row =&gt; .(pot1 == row.field&lt;string&gt;(""pot1"") || pot1 == row.field&lt;string&gt;(""pot2"") || .pot2 == row.field&lt;string&gt;(""pot1"") || pot2 == row.field&lt;string&gt;(""pot2"")) &amp;&amp; .schedule == row.field&lt;string&gt;(""schedule""));.                        if (!exists).                        {.                            var row = testtable.newrow();.                            row[""pot1""] = dt.rows[x][""pot1""];.                            row[""pot2""] = dt.rows[x][""pot2""];.                            row[""schedule""] = i + 1;.                            testtable.rows.add(row);.                        }.                    }.                }                .            }..            return testtable;.        }...this gives me the possible schedules for 1,2 through 1,20:..schedule 1:..1,2..3,4.......19,20..down to schedule 20:..1, 20..2, 3..18, 19...what i don't know how to do is start over to start getting the rest of the possible schedules:..schedule 21:..1, 2..3, 5..4, 6...hope this makes sense, not sure if i've explained the problem very well."
