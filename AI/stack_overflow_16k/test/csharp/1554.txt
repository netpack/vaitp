"why are there default accessibility levels in blank? lately, i've been doing some work in java and blank. in java, not specifying the accessibility of a class or a class member makes it package private (for which no explicit modifier exists). in blank, this is different as the accessibility always defaults to a level that can also be explicitly specified with the corresponding modifier (e.g., internal for a top-level class)...blank is such a well designed language, so why does it even contain this feature of defaulting to different levels depending on type and nesting of the types instead of just forcing the user to be explicit? is there any benefit i don't know about?"
