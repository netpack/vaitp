"template class for nullables on primitive types i would like to achieve the following:..int? a = 1;.int? b = 2;.int? smallerint = nullableops&lt;int&gt;.min(a, b);..float? c = 1;.float? d = 2;.float? smallerfloat = nullableops&lt;float&gt;.min(a, b);...currently the nullableops is:..public class nullableops&lt;t&gt;.{.    public static nullable&lt;t&gt; min(nullable&lt;t&gt; a, nullable&lt;t&gt; b).    {.        // do some stuff.        var x = a.value &lt; b.value ? a : b; // error here: '&lt;' can't be applied to operand t and t.    }.}...but it's got errors like t must not be a nullable type..so i have to duplicate the same code for different types using function overloading:..public class nullableops.{.    public static int? min(int? a, int? b).    {.        // do stuff.    }..    public static float? min(float? a, float? b).    {.        // do stuff.    }.}...but i don't wanna do that because every time when i add a new type, i need to duplicate the code again. can anyone please help?"
