"response.end() vs httpcontext.current.applicationinstance.completerequest() the users of our application download an attachment at least once in two seconds during the day. ..previous scenario: ..we were using response.end() to abort the connection to the client after the user downloads an attachment. as we were having performance issues, we started logging exceptions and one of the most repeated one was the thread abort exception. since we are getting the attachment from a web service, we have to do some clean up and we had the clean up in try-catch-finally block. after some research, i have understood that any code after response.end() will not be executed even if it is in finally block. is that right?..current scenario:..i've read the thread in stack overflow about response.end() being harmful and it needs to be used only when it is really needed, so i decided to use httpcontext....completerequest() instead. with this code, the clean up needed is done, but the html that is rendered is being appended to the attachment downloaded. i tried overriding the render and raisepostbackevent suggested in the same article but the problem still persists. any idea on how to resolve this issue would be helpful. ..code: ..httpcontext.current.response.clear();..response.clearcontent();..response.clearheaders();..response.addheader(""content-disposition"", ""attachment; filename="" +   .filename);.response.addheader(""content-length"", filecontent.length.tostring());.response.contenttype = ""application/octet-stream"";.response.binarywrite(filecontent);.response.flush();"
