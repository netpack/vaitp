"blank exporting sql to excel templates i'm building a page to extract sql data into excel template sheets. i'm running into a ""the given key was not present in the dictionary"" exception. when debugging, it points to the..public void addfield(string column, dynamic value).{.    addfield(_keylist[column.toupper()], value);.}...part of the ""excelexport.cs""..here is my ""excelexport.cs"" code..using system;.using system.collections.generic;.using system.linq;.using system.web;.using officeopenxml;.using system.io;.using system.reflection;..namespace scanportal.{.    public class excelexport.    {.        private fileinfo _templatefile;.        private int _startrow;.        private int _currentrow;.        private dictionary&lt;int, dictionary&lt;int, string&gt;&gt; _valuegrid;.        private dictionary&lt;string, int&gt; _keylist;.        private dictionary&lt;int, int&gt; _insertlist;..        public excelexport(string template = """", int startrowindex = 1, int keyrow = 0).        {.            if (template != """").            {.                _templatefile = new fileinfo(template);.            }..            _insertlist = new dictionary&lt;int, int&gt;();..            if (keyrow &gt; 0).            {.                using (var package = new excelpackage(_templatefile)).                {.                    _keylist = new dictionary&lt;string, int&gt;();.                    excelworksheet worksheet = package.workbook.worksheets.first();.                    int colindex = 1;.                    int numblank = 0;.                    do.                    {.                        object value = worksheet.cells[keyrow, colindex].value;.                        if (value == null) { numblank++; colindex++; continue; }.                        numblank = 0;.                        _keylist.add(value.tostring().toupper(), colindex);.                        colindex++;.                    } while (numblank &lt; 5);.                }.            }..            _startrow = startrowindex;.            _currentrow = _startrow;..            _valuegrid = new dictionary&lt;int, dictionary&lt;int, string&gt;&gt;();.            _valuegrid.add(_startrow, new dictionary&lt;int, string&gt;());.        }..        public void addfield(int row, int column, dynamic value).        {.            if (column &lt; 1 || row &lt; 1) throw new indexoutofrangeexception();.            if (value == null) value = """";..            if (!_valuegrid.containskey(_currentrow)).            {.                _valuegrid.add(row, new dictionary&lt;int, string&gt;());.            }..            _valuegrid[row].add(column, value.tostring());.        }..        public void addfield(string column, dynamic value).        {.          addfield(_keylist[column.toupper()], value);.        }..        public void addfield(int column, dynamic value).        {.            if (column &lt; 1) throw new system.indexoutofrangeexception();.            if (value == null) value = """";..            _valuegrid[_currentrow].add(column, value.tostring());.        }..        public void nextrow().        {.            _currentrow++;.            _valuegrid.add(_currentrow, new dictionary&lt;int, string&gt;());.        }..        public void insertrow(int count = 1).        {.            _currentrow++;.            _valuegrid.add(_currentrow, new dictionary&lt;int, string&gt;());.            _insertlist.add(_currentrow, count);.        }..        public bool generateworkbook(string filename, bool downloadsheet = true).        {.            if (!filename.toupper().contains("".xlsx"")).            {.                filename += "".xlsx"";.            }.            using (excelpackage pck = (_templatefile != null ? new excelpackage(_templatefile, true) : new excelpackage())).            {.                excelworksheet ws = pck.workbook.worksheets[1];..                foreach (var dictrow in _valuegrid).                {.                    int rowindex = dictrow.key;.                    if (_insertlist.containskey(rowindex)).                    {.                        ws.insertrow(rowindex, _insertlist[rowindex]);.                    }.                    foreach (var dictcolumn in dictrow.value).                    {.                        int columnindex = dictcolumn.key;.                        string columnvalue = dictcolumn.value;..                        ws.cells[rowindex, columnindex].loadfromtext(columnvalue);.                    }.                }..                if (downloadsheet).                {.                    httpresponse response = system.web.httpcontext.current.response;.                    response.clear();.                    response.contenttype = ""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"";.                    response.addheader(""content-disposition"", ""attachment; filename="" + filename);.                    response.binarywrite(pck.getasbytearray());.                    response.end();.                }.            }..            return true;.        }.    }.}...here is my ""exportreports.aspx.cs"" code..using system;.using system.collections.generic;.using system.linq;.using system.web;.using officeopenxml;.using system.web.ui;.using system.web.ui.webcontrols;..namespace scanportal.{.    public partial class exportreports : system.web.ui.page.    {.        dictionary&lt;int, string&gt; dropdowns;.. protected void btnvisitation_click(object sender, eventargs e).        {.            excelexport excel = new excelexport(server.mappath(""jsprc visit summary data template.xlsx""), 3, 2);..            using (var db = new formsdatacontext()).            {...                excel.addfield(""agency"", ""scan"");.            }.            excel.generateworkbook(""visit summary data"");.        }.    }.}"
