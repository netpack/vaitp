"wrap an object and alter the wrapped object through the wrapper i want to wrap some objects in order to give them additional properties. however, when i interact with the properties which are defined on the base class, have the original unwrapped object change...i a class hierarchy such:..public class somebase.{.    public someobj source { get; set; }.    public someobj target { get; set; }..    public somebase(someobj source, someobj target).    {.        source = source;.        target = target;.    }.}..public class somederrived : somebase.{.    public somederrived(somebase s) : base(s.source, s.target) {}.}..public class someobj {}...if i have a program thus:..somebase s = new somebase(new someobj(), new someobj());.somederrived sd = new somederrived(s);.writeline(s.source.gethashcode());.writeline(sd.source.gethashcode());  //the two hash codes are identical as i'd have expected..sd.source = new someobj();.writeline(s.source.gethashcode());  //why does this not have the hash code of `sd`?.writeline(sd.source.gethashcode());...is there a way to achieve this?..as somederrived isa somebase i'd have thought the properties would be one and the same?"
