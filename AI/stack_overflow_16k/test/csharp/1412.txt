"how to avoid creating unneeded object in an elegant way? the root of my question is that the blank compiler is too smart. it detects a path via which an object could be undefined, so demands that i fill it. in the code, i look at the tables in a dataset to see if there is one that i want. if not, i create a new one. i know that dtout will always be assigned a value, but the the compiler is not happy unless it's assigned a value when declared. this is inelegant...how do i rewrite this in a more elegant way? ..             system.data.datatable dtout = new system.data.datatable();.            ..            ..            // find table with tablename = grp.            // if none, create new table.            bool btablefound = false;.            foreach (system.data.datatable d1 in dsout.tables).            {.                string d1_name = d1.tablename;.                if (d1_name.equals(grp)).                {.                    dtout = d1;.                    btablefound = true;.                    break;.                }.            }..            if (!btablefound) dtout = rpttable(grp);"
