"problem with idictionary<complex key, complex value>.remove() implementation hi i don't understand why this code doesn't work - it don't remove key; i still get ""2"" on output...bencode.bencodedict d = new mytorrent.bencode.bencodedict();.d.dict.add(new bencode.bencodestring(""info""), new bencode.bencodestring(""1""));.d.dict.add(new bencode.bencodestring(""info2""), new bencode.bencodestring(""2""));.d.dict.add(new bencode.bencodestring(""info3""), new bencode.bencodestring(""3""));..d.remove(new bencode.bencodestring(""info2""));.bencode.bencodevariable s1;.s1 = d[new bencode.bencodestring(""info2"")];.if (s1 != null).   console.writeline(system.text.utf8encoding.utf8.getstring(s1.encode()));...my bencodedict and bencodestring..namespace mytorrent.bencode.{.   class bencodedict : bencodevariable, idictionary&lt;bencodestring, bencodevariable&gt;.   {.      private dictionary&lt;bencodestring, bencodevariable&gt; dict;..      public bencodedict() {.         this.dict = new dictionary&lt;bencodestring,bencodevariable&gt;();.      }..      protected override void internaldecode(binaryreader data) { /*...*/ }.      public override long bytelength() { /*...*/ }    .      public override byte[] encode() { /*...*/ }..      //#region overridden methods.        public override bool equals(object ob).        {.            if (ob == null).               return false;..            bencodedict y = ob as bencodedict;.            if (this.dict.count != y.dict.count).                return false;..            bencodevariable val;.            foreach (keyvaluepair&lt;bencodestring, bencodevariable&gt; keypair in this.dict).            {.                if (!y.trygetvalue(keypair.key, out val)).                    return false;..                if (!keypair.value.equals(val)).                    return false;.            }..            return true;.        }..        public override int gethashcode().        {.            int result = 0;.            foreach (keyvaluepair&lt;bencodestring, bencodevariable&gt; keypair in this.dict).            {.                result ^= keypair.key.gethashcode();.                result ^= keypair.value.gethashcode();.            }.            return result;.        }..        #region idictionary and ilist methods.        public void add(bencodestring key, bencodevariable value).        {.            this.dict.add(key, value);.        }..        public void add(keyvaluepair&lt;bencodestring, bencodevariable&gt; item).        {.            this.dict.add(item.key, item.value);.        }.        public void clear().        {.            this.dict.clear();.        }..        public bool contains(keyvaluepair&lt;bencodestring, bencodevariable&gt; item).        {  .            if (!this.dict.containskey(item.key)).                return false;..            return this.dict[item.key].equals(item.value);.        }..        public bool containskey(bencodestring key).        {.            foreach(keyvaluepair&lt;bencodestring, bencodevariable&gt; pair in this.dict) {.               if (pair.key.equals(key)).                  return true;.            }.            return false;.        }..        public void copyto(keyvaluepair&lt;bencodestring, bencodevariable&gt;[] array, int arrayindex) { /*...*/ }.        public int count.        {.            get { return this.dict.count; }.        }..        public bool isreadonly.        {.            get { return false; }.        }..        public bool remove(bencodestring key).        {..            return this.dict.remove(key);.        }..        public bool remove(keyvaluepair&lt;bencodestring, bencodevariable&gt; item).        {.            return this.dict.remove(item.key);.        }..        public bool trygetvalue(bencodestring key, out bencodevariable value).        {.           foreach(keyvaluepair&lt;bencodestring, bencodevariable&gt; pair in this.dict).              if ( pair.key.equals(key) ) {.                 value = pair.value;.                 return true;.              }.           value = null;.           return false;.        }..        public bencodevariable this[bencodestring key].        {  .            get {.                foreach(keyvaluepair&lt;bencodestring, bencodevariable&gt; pair in this.dict).                     if ( pair.key.equals(key) ).                     return pair.value;.                return null;.            }.            set { this.dict[key] = value; }.        }..        public icollection&lt;bencodestring&gt; keys.        {.            get { return this.dict.keys; }.        }..        public icollection&lt;bencodevariable&gt; values.        {.            get { return this.dict.values; }.        }..        public ienumerator&lt;keyvaluepair&lt;bencodestring, bencodevariable&gt;&gt; getenumerator().        {.            return this.dict.getenumerator();.        }..        system.collections.ienumerator system.collections.ienumerable.getenumerator().        {.            return this.dict.getenumerator();.        }.        #endregion.   }.}...   class bencodestring : bencodevariable.      {.         private byte[] str;..         public bencodestring() {.            this.str = null;.         }..         public bencodestring(string str) {.            this.str = encoding.getbytes(str);.         }..         public override bool equals(object ob).         {.            if (ob == null).               return false;..            bencodestring y = ob as bencodestring;..            return (encoding.getstring(this.str) == encoding.getstring(y.str));.         }..         public override int gethashcode().         {..            return this.str.gethashcode();.         }.      }"
