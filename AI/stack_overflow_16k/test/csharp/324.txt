"is a checkbox vulnerable to sql injection? i'm developing an application in blank that has some checkboxes. basically, a list of users is on the screen and a check box by each user name is used to indicate whether an action is to be done for that user. ..protected void btnmovetoassigned_click(object sender, eventargs e).    {.        list&lt;int&gt; idstoassign = new list&lt;int&gt;();.        foreach (gridviewrow row in gvunassigned.rows).        {.            if (row.rowtype == datacontrolrowtype.datarow).            {.                checkbox checkbox = row.findcontrol(""cbtoassign"") as checkbox;.                if (checkbox.checked).                {.                    int id;.                    if (int32.tryparse(gvunassigned.datakeys[row.rowindex].value.tostring(), out id)).                    {.                        idstoassign.add(id);.                    }.                }.            }.        }...i build a list of userids, which is passed to this method:..  public static bool addapplicationcommandusers(ormportaldatacontext dc, applicationcommand applicationcommand, list&lt;int&gt; userids).    {.        list&lt;security_command_xref_linq&gt; userapplicationcommandlist = new list&lt;security_command_xref_linq&gt;();..        foreach (int userid in userids).        {.            security_command_xref_linq scxl = new security_command_xref_linq();.            scxl.userid = userid;.            scxl.command = applicationcommand.commandabbr;.           // scxl.creator = applicationuser.getcurrentuser().id;.           // scxl.created = datetime.now;..            userapplicationcommandlist.add(scxl);.        }..        dc.security_command_xref_linqs.insertallonsubmit(userapplicationcommandlist);..        try.        {.            dc.submitchanges();.            return true;.        }...i had it scanned by the burp suite and it gave me these results:...  the.  ctl00%24maincontent%24ctrlmanagecommandusers%24ctrlapplicationcommandusersassignment%24gvunassigned%24ctl32%24cbtoassign.  parameter appears to be vulnerable to sql injection attacks. the.  payload ,(select * from (select(sleep(20)))a) was submitted in the.  ctl00%24maincontent%24ctrlmanagecommandusers%24ctrlapplicationcommandusersassignment%24gvunassigned%24ctl32%24cbtoassign.  parameter. the application took more than 22062 milliseconds to.  respond to the request, compared with 62 milliseconds for the original.  request, indicating that the injected sql command caused a time delay....i don't see how the cbtoassign could be vulnerable. thanks for any answers."
