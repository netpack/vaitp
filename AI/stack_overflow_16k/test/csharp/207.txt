"raising events from another class - workaround i need to raise an event from another class - i know that this is not possible - but i need a workaround for this...for now im doing the following..this is the class, which have to raise the event..internal class datatransfer.{.  public delegate void eventhandler(object sender, onreadercommoneventargs e);.  public event eventhandler _onserialnumber;.  public event eventhandler _onreadertype..task datahandler().{. //recieving-data and stuff._onserialnumber(this, new onreadercommoneventargs { serialnumber = rfidparser.parseserialnumber(data) });._onreadertype(this, new onreadercommoneventargs { readertype = rfidparser.parsereadertype(data) });.}.}...and in the main-class, which will be used by the user. so the user can only subscribe to the event from this class-object:..public partial class pur_100u.{.        public delegate void eventhandler(object sender, onreadercommoneventargs e);.        public event eventhandler onserialnumber;.        public event eventhandler onreadertype;..        public pur_100u(int portnumber).        {.            datatransfer = new datatransfer(portnumber, getidentifierlist());..            datatransfer._onserialnumber += datatransfer__onserialnumber;.            datatransfer._onreadertype += datatransfer__onreadertype;.        }.        void datatransfer__onserialnumber(object sender, onreadercommoneventargs e).        {.            if (onserialnumber != null) { onserialnumber(this, new onreadercommoneventargs { serialnumber = e.serialnumber }); }.        }..        void datatransfer__onreadertype(object sender, onreadercommoneventargs e).        {.           if (onreadertype != null) { onreadertype(this, new onreadercommoneventargs { readertype = e.readertype }); }.        }.}...example of user-usage:..rfid = new pur_100u(20);.rfid.onserialnumber += rfid_onserialnumber;.rfid.onreadertype += rfid_onreadertype;...is there a better way of doing this?"
