"how to find indices for all contiguous elements in an array that appear more than threshold i'm trying to find indices for all contiguous elements that occurrence more than threshold in one dimensional integer array using blank..double[] x = new double[20]{1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,1,1};...i want to get indices for this x[] vector as the following for 0 values ..threshold=4..start-index[0] =2.  end-index[0] =5..start-index[1] =8.  end-index[1] =11...i try to use this code, but there is many problems in it..public void myfunc(double[] x, ref list&lt;int&gt; start, ref list&lt;int&gt; end,int matchingval,int threshold).    {.        int count = 0;.        for (int i = 0; i &lt; x.length; i++).        {.            for (int j = i+1; j &lt; threshold; j++).            {.                if (x[i] == x[j] &amp;&amp; x[i] == matchingval).                {.                    count++;.                }.                else.                {.                    break;//no contiguous element.                }.                if (count &gt;= threshold).                {.                    start.add(i);.                    end.add(i + count);.                    count = 0;.                }.                else.                    continue;.            }.        }.    }"
