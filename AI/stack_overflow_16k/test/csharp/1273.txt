"process sometimes hangs while waiting for exit what may be the reason of my process hanging while waiting for exit?..this code has to start powershell script which inside performs many action e.g start recompiling code via msbuild, but probably the problem is that it generates too much output and this code gets stuck while waiting to exit even after power shell script executed correctly..it's kinda ""weird"" because sometimes this code works fine and sometimes it just gets stuck...code hangs at:...  process.waitforexit(processtimeoutmiliseconds);...powershell script executes in like 1-2sec meanwhile timeout is 19sec...public static (bool success, string logs) executescript(string path, int processtimeoutmiliseconds, params string[] args).{.    stringbuilder output = new stringbuilder();.    stringbuilder error = new stringbuilder();..    using (var outputwaithandle = new autoresetevent(false)).    using (var errorwaithandle = new autoresetevent(false)).    {.        try.        {.            using (var process = new process()).            {.                process.startinfo = new processstartinfo.                {.                    windowstyle = processwindowstyle.hidden,.                    filename = ""powershell.exe"",.                    redirectstandardoutput = true,.                    redirectstandarderror = true,.                    useshellexecute = false,.                    arguments = $""-executionpolicy bypass -file ""{path}"""",.                    workingdirectory = path.getdirectoryname(path).                };..                if (args.length &gt; 0).                {.                    var arguments = string.join("" "", args.select(x =&gt; $""""{x}""""));.                    process.startinfo.arguments += $"" {arguments}"";.                }..                output.appendline($""args:'{process.startinfo.arguments}'"");..                process.outputdatareceived += (sender, e) =&gt;.                {.                    if (e.data == null).                    {.                        outputwaithandle.set();.                    }.                    else.                    {.                        output.appendline(e.data);.                    }.                };.                process.errordatareceived += (sender, e) =&gt;.                {.                    if (e.data == null).                    {.                        errorwaithandle.set();.                    }.                    else.                    {.                        error.appendline(e.data);.                    }.                };..                process.start();..                process.beginoutputreadline();.                process.beginerrorreadline();..                process.waitforexit(processtimeoutmiliseconds);..                var logs = output + environment.newline + error;..                return process.exitcode == 0 ? (true, logs) : (false, logs);.            }.        }.        finally.        {.            outputwaithandle.waitone(processtimeoutmiliseconds);.            errorwaithandle.waitone(processtimeoutmiliseconds);.        }.    }.}...script:..start-process $args[0] app.csproj -wait -nonewwindow..[string]$sourcedirectory  = ""bindebug*"".[int]$count = (dir $sourcedirectory | measure).count;..if ($count -eq 0).{.    exit 1;.}.else.{.    exit 0;.}...where ..$args[0] = ""c:program files (x86)microsoft visual studio2019professionalmsbuildcurrentbinmsbuild.exe""..edit..to @ingen's solution i added small wrapper which retries to execute hanged up ms build..public static void executescriptrx(string path, int processtimeoutmilliseconds, out string logs, out bool success, params string[] args).{.    var current = 0;.    int attempts_count = 5;.    bool _local_success = false;.    string _local_logs = """";..    while (attempts_count &gt; 0 &amp;&amp; _local_success == false).    {.        console.writeline($""attempt: {++current}"");.        internalexecutescript(path, processtimeoutmilliseconds, out _local_logs, out _local_success, args);.        attempts_count--;.    }..    success = _local_success;.    logs = _local_logs;.}...where internalexecutescript is ingen's code"
