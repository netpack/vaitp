"why state in a structs in a list cannot be change? i know this sounded stupid. but i gotta be doing something wrong here...say,..struct lala.{.    private bool state1;..    public lala(bool state1).    {.        this.state1 = state1;.    }..    public void setstate1totrue().    {.        this.state1 = true;.    }..    public bool getstate1().    {.        return this.state1;.    }.}...then somewhere.....list&lt;lala&gt; lalas = new list&lt;lala&gt;();..lalas.add(new lala(false));.lalas.add(new lala(false));..lalas[0].setstate1totrue();..// why is it false???.console.writeline(lalas[0].getstate1());...are there any workarounds to this except changing it to:..list&lt;lala&gt; lalas = new list&lt;lala&gt;();..lalas.add(new lala(false));.lalas.add(new lala(false));..lala newlala = lalas[0];.newlala.setstate1totrue();.lalas[0] = newlala;..// it's true, finally..console.writeline(lalas[0].getstate1());...which looked awful, unelegant and wasted 2 lines of code. if there's any linq-ish or functional programming-ish way in say 1 line of code that would be awesome."
