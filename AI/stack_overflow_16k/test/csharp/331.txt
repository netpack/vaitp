"get by reflection properties from a class lets assume that we have the following testclass..public interface ibase.{.    int myintegeraa { get; set; }.}..public interface f : g.{.    string mystringbb { get; set; }.}..public interface e : f.{.    string mystringcc { get; set; }.    ibase xyz { get; set; }.}..public interface d : e.{.    int myint1 { get; }.    int myint2 { get; }.    int myint3 { get; }.    int myint4 { get; }.}..public interface c : d.{.    string mystring1{ get; set; }.}..public class b : c.{.    public int myint1 { get; }.    public int myint2 { get; }.    public int myint3 { get; }.    public int myint4 { get; }.    public string mystring1 { get; set; }.    public ibase xyz { get; set; }.}..public class a : b.{.    public string test1 { get; set; }.}...the question is, how we can ""enumerate"" each class and interface, to get back only its declared properties, without the reference on the interface ibase during the enumeration...for example.if i try to get the properties of class b, then i get back the following..current father is : getproperties.form1+testclass+b.the number of public properties : 6..property name: xyz.property type: [getproperties.form1+testclass+ibase]..property name: myint1.property type: [system.int32]..property name: myint2.property type: [system.int32]..property name: myint3.property type: [system.int32]..property name: myint4.property type: [system.int32]..property name: mystring1.property type: [system.string]..is there any way, not to include the.property name: xyz.property type: [getproperties.form1+testclass+ibase]..??"
