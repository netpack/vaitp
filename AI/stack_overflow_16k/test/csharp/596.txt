"how to correctly use x509store? i've been using x509store and his friends, x509certificate2 and x509certificate2collection. everything was fine, but i've started to write tests for my code, and i've run into a problem. i generate a new test cert and install it to start each test, then remove the test cert at the end. the test certificates are non-deterministically not valid, despite having creation dates a day in the past and expiry dates a day in the future...i've noticed that running a full gc and waiting for finalizers in teardown fixes the tests...i've been digging into the reference source here. it seems that x509certificate2 needs to be disposed, otherwise operations that already returned success (like adding to a store) can have not been flushed to the actual store (this is a behaviour of the windows api, see certclosestore crypt_e_pending_close result)...it further seems that x509certificate2collection is basically just a list&lt;x509certificate2&gt;, so every time such a list of certs is created, every single instance needs to be disposed, such as reading the certificates property on the store...furthermore, when the find method is used, this involves creating a temporary store, adding the certs, and then reading the certs back out again from unmanaged code, creating a new collection of certs which also all need to be disposed...is this really the correct way to use the x509store? it seems to be unbelievable that the .net api would be so tremendously unsafe and difficult to use correctly with silent failures and completely undocumented failure modes everywhere. am i just missing something obvious or should these classes all be avoided?"
