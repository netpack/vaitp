"blank: escaping while setting cooking in startup file sorry if the title is not clear...i have the following code in my startup file:..public void configureservices(iservicecollection services).{.   var db = configuration[""appsettings:conn""];.   string env = configuration[""appsettings:env""];..   if (env == ""prod"").   {                .        services.            .adddataprotection().            .persistkeystoredis(db, configuration[""appsettings:keys""]);.   }..   services.        .addauthentication(options =&gt;.        {.            options.defaultauthenticatescheme = wsfederationdefaults.authenticationscheme;.            options.defaultscheme = cookieauthenticationdefaults.authenticationscheme; //.            options.defaultchallengescheme = wsfederationdefaults.authenticationscheme;.        })      .        .addcookie(option =&gt;.        {                     .            if (env == ""test"").            {.                return;.            }.            var validator = new principalvalidator(new authstore(db));          .            option.cookie.name = ""mycookie"";.            option.events.onvalidateprincipal = validator.validateasync;.            option.events.onsigningin = validator.onsigninginasync;.            option.events.onsigningout = validator.onsigningoutasync;.        });..}...i am adding dataprotection keys when using a load balancer which is in my prod env but my test env i want to skip adding and setting the cookie...so i setup a variable in appsettings for prod or test and then based on its value i want to skip adding to test...now my question is will the return inside setting the cookie work? will i be able to escape it with the code i have...addcookie(option =&gt;.        {                     .            if (env == ""test"").            {.                return;.            }.            var validator = new principalvalidator(new authstore(db));          .            option.cookie.name = ""mycookie"";.            option.events.onvalidateprincipal = validator.validateasync;.            option.events.onsigningin = validator.onsigninginasync;.            option.events.onsigningout = validator.onsigningoutasync;.        });"
