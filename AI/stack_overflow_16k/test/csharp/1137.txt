"problems with ""isynchronizeinvoke"" and ""this"" in blank. i think some sort of invoke can fix it, but i can't work out how! thank you so much for reading this! i think the fix is relatively easy, but it is beyond me! i can never get my begininvokes correct. ..i am still learning, and not very good yet, so please don't laugh too hard! as a temporary measure, i am using some public domain code, just to get a feel for what is being done in the code, before i write some similar stuff with only the bits i actually need. however, i do really need the answer if anyone can help. i have uploaded the public domain code to an area of my website, and will link to it later, but i don't think it is necessary, as i have picked out the bits that i think matter below:..my test application works fine, but my main application doesn't. here is the method i am trying to call:..public processcaller(isynchronizeinvoke isi).    : base(isi).{.}...here is the code that calls this method from my test application. this works perfectly. ..private void btnok_click(object sender, system.eventargs e).    {.        processcaller = new processcaller(this);.        processcaller.filename = @""....test.exe"";.        processcaller.arguments = """";.        processcaller.stderrreceived += new datareceivedhandler(writestreaminfo);.        processcaller.stdoutreceived += new datareceivedhandler(writestreaminfo);.        processcaller.completed += new eventhandler(processcompletedorcancelled);.        processcaller.cancelled += new eventhandler(processcompletedorcancelled);.        // processcaller.failed += no event handler for this one, yet...        // the following function starts a process and returns immediately,.        // thus allowing the form to stay responsive..        processcaller.start();  .    }...here is the code to run the same method from the main app. this runtest is actually called from a backgroundworker. i see that this is slightly pointless, but even when i run it directly, removing the extra backgroundworker, i still get exactly the same error, outlined below...public void runtest().    {.        try.        {.        processcaller = new processcaller(this);.        processcaller.filename = ""test.exe"";.        processcaller.arguments = ""/test"";.        processcaller.stderrreceived += new datareceivedhandler(writestreaminfo);.        processcaller.stdoutreceived += new datareceivedhandler(writestreaminfo);.        processcaller.completed += new eventhandler(processcompletedorcancelled);.        processcaller.cancelled += new eventhandler(processcompletedorcancelled);.        // processcaller.failed += no event handler for this one, yet...        // the following function starts a process and returns immediately,.        // thus allowing the form to stay responsive..        processcaller.start();.        }.   }...however, this code does not work. the problem is this line. the bit it does not like is ""this"". ..processcaller = new processcaller(this);...when i try to build, i get two errors:..argument 1: cannot convert from 'app.backend.tools.test' to 'system.componentmodel.isynchronizeinvoke'..and ..the best overloaded method match for 'app.backend.tools.processcaller.processcaller(system.componentmodel.isynchronizeinvoke)' has some invalid arguments..i kind of understand the issue. i am not calling this from my gui or button (object sender stuff) as in my test app. i kind of know that i need to invoke it but i haven't got a clue how to do this! if begininvoke/invoke is the correct course of action, could someone please show me how to do it!?..thanks so much in advance!..richard..p.s: just in case anybody does need it, i have uploaded the public domain code i am using here, but i don't think that anybody does need it. ..asyncoperation..processcaller"
