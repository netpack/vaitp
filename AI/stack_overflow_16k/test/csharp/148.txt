"how to perform heavy synchronous operations w/o blocking the ui? i have a class containing a run() method which executes a heavy operation blocking the ui..i have created several instances of that class and i need to execute the run() synchronously w/o blocking the ui..i have managed to do so using a backgroundworker but i don’t like this solution because of the “application.doevents()” and because if i need to wait for the background worker to complete, there is no use using a bw. i should use a synchronous operation..any ideas what can i use instead?..class myclass.{.    public void run().    {.        for (int i = 0; i &lt; 1000; i++).        {.            console.writeline(i);.        }.    }.}...public partial class form1 : form.{.    list&lt;myclass&gt; lmc = new list&lt;myclass&gt;();..    public form1().    {.        initializecomponent();..        myclass m1 = new myclass();.        myclass m2 = new myclass();..        lmc.add(m1);.        lmc.add(m2);.    }..    private void button1_click(object sender, eventargs e).    {.        foreach (myclass item in lmc).        {.            backgroundworker bw = new backgroundworker();.            bw.dowork += bw_dowork;.            bw.workersupportscancellation = true;.            bw.runworkerasync(item);.            while (bw.isbusy).            {.                application.doevents();.            }.        }.    }..    void bw_dowork(object sender, doworkeventargs e).    {.        ((myclass)e.argument).run();.        ((backgroundworker)sender).cancelasync();.    }.}"
