"add timeout to complex task.whenall i have a task collector that run async tasks (the commented one) :..public task&lt;resultorexception&lt;t&gt;[]&gt; whenallorexception&lt;t&gt;(ienumerable&lt;task&lt;t&gt;&gt; tasks).{.    return task.whenall(.        tasks.select(.            task =&gt; task.continuewith(.                t =&gt; t.isfaulted.                    ? new resultorexception&lt;t&gt;(t.exception).                    : new resultorexception&lt;t&gt;(t.result))));       .}..public class resultorexception&lt;t&gt;.{.    public resultorexception(t result).    {.        issuccess = true;.        result = result;.    }..    public resultorexception(exception ex).    {.        issuccess = false;.        exception = ex;.    }..    public bool issuccess { get; }.    public t result { get; }.    public exception exception { get; }.} ...this code wait for all task even if they returns after 2 minutes..i need to ignore all tasks returns with a timeout of five seconds...i've tried also to change my code this way but it won't compile:..return task.whenany(task.whenall(.    tasks.select(.            task =&gt; task.continuewith(.                t =&gt; t.isfaulted.                    ? new resultorexception&lt;t&gt;(t.exception).                    : new resultorexception&lt;t&gt;(t.result)))..    ), task.delay(2000));...or this:..var ts = new timespan(1000);..        return await task.waitall(.            tasks.select(.                task =&gt; task.continuewith(.                    t =&gt; t.isfaulted.                        ? new resultorexception&lt;t&gt;(t.exception).                        : new resultorexception&lt;t&gt;(t.result))),.            ts);...how to achieve this?"
