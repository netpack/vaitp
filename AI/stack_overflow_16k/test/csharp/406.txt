"how can i write a console application which can search users directory? i asked guru but i still couldn't solve the problem that i have..i want to write a console program searching certain files, like xls, doc or *pdf..i wrote a code like this but when it comes to the say, users directory, it cates unauthorizedaccessexception..how can i write a console application which can search users directory?.i set clickonce off and build it with manifest which requireadministrator..so, on vista or 7, it runs as an administrator, with the elevation dialogue...here's the full code...using system;.using system.collections.generic;.using system.linq;.using system.text;.using system.io;..namespace consoleapplication2.{.    class program.    {.        //.    private const string file_name = ""search.txt"";.    private const string search_words1 = ""*.doc"";.    private const string search_words2 = ""*.ppt"";.    private const string search_words3 = ""*.jtd"";.    private const string search_words4 = ""*.pdf"";..    private const string end_words = ""rnsearch is finished.rn"";..    //this funcion echoes the messages..    void filecheck().    {.        string echo_words = ""rnnow starts searching these files!"" + search_words1 + "" "".                                + search_words2 + "" "" + search_words3 + "" "" + search_words4 + "" "".                                + ""!rn"";.        if (file.exists(file_name)).        {.            console.writeline(""{0} is already exists. replace it to the new one."", file_name);.            console.writeline(echo_words);.            file.delete(file_name);.            using (streamwriter sw = file.createtext(file_name)).            {.                sw.writeline(file_name + "" is already exists. replace it to the new one.rn"");.                sw.writeline(echo_words);.                sw.close();.            }.        }.        else.        {..            using (streamwriter sw = file.createtext(file_name)).            {.                console.writeline(echo_words);.                sw.writeline(echo_words);.                sw.close();.            }.        }.    }.    //this function write to a file that search is finished..    void endmessage().    {.        using (streamwriter sw = file.appendtext(file_name)).        {.            console.writeline(end_words);.            sw.writeline(end_words);.            sw.close();.        }.    }.    //this function searches files given and write to a file..    void dirsearch(string sdir, string search_words, int row).    {.        int i;.        i = 0;.        string deviceerror = ""off"";..        try.        {.            foreach (var d in directory.getdirectories(sdir)).            {.                directoryinfo di = new directoryinfo(d);.                if ((di.attributes &amp; fileattributes.reparsepoint) == fileattributes.reparsepoint) {.                    //reparsepoint could not be serached.                    continue;.                }.                try.                {.                    foreach (string file in directory.getfiles(d, search_words, searchoption.alldirectories)).                    {.                        console.writeline(file);.                        using (streamwriter sw = file.appendtext(file_name)).                        {.                            sw.writeline(file);.                            sw.close();.                            i++;.                        }.                    }.                }.                catch (unauthorizedaccessexception).                {.                    //unauthorized.                    console.writeline(d + "" is not allowd to be read !!"");.                    using (streamwriter sw = file.appendtext(file_name)).                    {.                        sw.writeline(d + "" is not allowd to be read"");.                        sw.close();.                    }.                }.            }.        }.        catch (ioexception).        {.            //device is not ready.            deviceerror = ""on"";.        }.        if (deviceerror == ""off"").        {.            if (i &gt; 0).            {.                console.writeline(i + ""numbers "" + search_words + "" files were found!rn"");.                using (streamwriter sw = file.appendtext(file_name)).                {.                    sw.writeline(i + ""numbers "" + search_words + "" files were found!rn"");.                    sw.close();.                }.            }.            else.            {.                console.writeline(search_words + "" files were not found !rn"");.                using (streamwriter sw = file.appendtext(file_name)).                {.                    sw.writeline(search_words + "" files were not found !rn"");.                    sw.close();.                }.            }.        }.    }..    //main.    static void main(string[] args).    {.        program x = new program();.        string[] drives = environment.getlogicaldrives();.        int row = drives.getlength(0);.        string my_documents = environment.getfolderpath(environment.specialfolder.mydocuments);.        console.writeline(""logical drives are "" + row + ""."");.            using (streamwriter sw = file.appendtext(file_name)).            { .                sw.writeline(""logical drives are "" + row + ""."");.                sw.close();.            }.            int i = 0;.            x.filecheck();.            while (row &gt; 0).            {.                x.dirsearch(drives[i], search_words1, row);.                x.dirsearch(drives[i], search_words2, row);.                x.dirsearch(drives[i], search_words3, row);.                x.dirsearch(drives[i], search_words4, row);..                row--;.                i++;.            }.            x.endmessage();.    }.}...}"
