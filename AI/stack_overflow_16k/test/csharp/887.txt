"how to keep variable through an event? i have a method to populate a combobox with some strings. at the end of the method i assign to the selectedindexchanged event. here's how that method looks..public combobox populatecombobox().{.    worksheet sheetwithtemplatenames = _ireader.getworksheetbyname(""templates"");.    int lastrowoftemplates = _ireader.getlastrow(sheetwithtemplatenames);.    var templatenames = _ihandler.gettemplatenames(sheetwithtemplatenames, lastrowoftemplates);.    foreach (var template in templatenames).    {.        box.items.add(template);.    }.    box.selectedindexchanged += box_selectedindexchanged;.    return box;.}...and it works as i want to. my problem is that i need to use this templatenames list in the actual event and that's causing trouble. here's how my event looks like now but ain't functioning. ..private void box_selectedindexchanged(object sender, eventargs e).{.    combobox cmb = (combobox)sender;.    var chosenobject = cmb.selectedindex;.    messagebox.show(templatenames[chosenobject]);.}...but my list is now empty. it's instantiated in the constructor so i'd assume it'd keep it's state but that isn't the situation. here's the top of the class..public class templatelistcombobox.{.    public combobox box { get; set; }.    private idatareader _ireader;.    private idatahandler _ihandler;.    private list&lt;string&gt; templatenames;..    public templatelistcombobox().    {.        box = new combobox();.        _ireader = new datareader();.        _ihandler = new datahandler();.        templatenames = new list&lt;string&gt;();.    }.}...so how could i possibly keep the state of my list through the event? ..update:..my class that calls this:..public static class groupboxholder.{.    private static groupbox _thisgroupbox;..    public static groupbox getgroupbox().    {.        populategroupbox();.        return _thisgroupbox;.    }..    public static void populategroupbox().    {.        _thisgroupbox = new groupbox();.        templatelistcombobox combo = new templatelistcombobox();.        combobox box = combo.getcombobox();.        _thisgroupbox.controls.add(box);.        configuregroupbox();.    }..    public static void configuregroupbox().    {.        _thisgroupbox.location = new point { x = 75, y = 15  };.        _thisgroupbox.height = 150;.        _thisgroupbox.width = 400;.    }.}...and my updated class..public class templatelistcombobox.{.    private combobox _box;.    private readonly idatareader _ireader;.    private readonly idatahandler _ihandler;.    private readonly worksheet _sheetwithtemplatenames;..    public templatelistcombobox().    {.        _box = new combobox();.        _ireader = new datareader();.        _ihandler = new datahandler();.        _sheetwithtemplatenames = _ireader.getworksheetbyname(""templates"");.        populatecombobox();..    }.    public void populatecombobox().    {.        int lastrowoftemplates = _ireader.getlastrow(_sheetwithtemplatenames);.        var templatenames = _ihandler.gettemplatenames(_sheetwithtemplatenames, lastrowoftemplates);.        foreach (var template in templatenames).        {.            _box.items.add(template);..        }.        _box.selectedindexchanged += box_selectedindexchanged;.    }..    public combobox getcombobox().    {.        return _box;.    }.    private void box_selectedindexchanged(object sender, eventargs e).    {.        combobox cmb = (combobox)sender;.        var chosenobject = cmb.selecteditem.tostring();.        var firstrowfortemplate = _ireader.getfirstrowfortemplate(_sheetwithtemplatenames, chosenobject.tostring());.        var attributes =  _ireader.gettemplateattributes(_sheetwithtemplatenames, chosenobject, firstrowfortemplate);..    }.}"
