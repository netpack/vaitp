"searching sets of numbers in random numbers using binary search algorithm my code below is not working, not giving me any output. it was working well when i asked users to enter set of numbers and find within. but when i tried to search within random numbers, it is not working at all. can anyone help me figure out, what did i do wrong, because program build successfully. it just won't giving the correct output.   .. {.   class program.   {.    public class binarysearch.    {.        public static int search(int[] list, int x, int lower, int upper).        {.            if (lower == upper).            {.                int middle = (lower + upper) / 2;.                if (x == list[middle]).                    return middle;.                else if (x &gt; list[middle] ).                    return search(list, x, lower, middle - 1);.                else.                    return search(list, x, middle + 1, upper);.            }.            return 0;.        }.        public static void main(string[] args).        {.            int key;       .            int index;    .            int low = 0;.            int high = 1000; ..            int[] list = new int[1000];.            random randomnumber = new random();...            for (int i = 0; i &lt; 1000; i++).            {.                list[i] = randomnumber.next(1, 1000);.            }.            foreach (int j in list).            {.                console.writeline(""{0}"", j);.            }..            console.writeline(""...................................................n"");.            console.writeline(""nenter the number to be searched in the list."");..            key = convert.toint32(console.readline());.            index = search(list, key, low, high);.            console.writeline(""...................................................n"");.            if (index == 0).                console.writeline(""key {0} not found"", key);.            else.                console.writeline(""key {0} found at index {1}"", key, index);.        }.    }.}...}"
