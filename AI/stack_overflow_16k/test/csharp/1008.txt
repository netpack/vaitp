"why does path.combine behave the way it does? we ran into the same kind of behaviour exhibited by this post:..why does path.combine produce this result with a relative path?..where:..var basepath = @""\serverbasefolder"";.var relativepath = @""myrelativefolder"";..var combinedpath = path.combine(basepath, relativepath);...produces an output of  myrelativefolder instead of the expected \serverbasefoldermyrelativefolder...after reading this and other posts, as well as the msdn doc:...  if the one of the subsequent paths is an absolute path, then the.  combine operation resets starting with that absolute path, discarding.  all previous combined paths....i understand this behaviour exactly, as well as what it's doing and how to fix it...what i don't understand is why!..in what scenarios would this be the required behavior? why would you ever want to pass in a set of arguments here, and have it completely ignore whatever first few you pass in and just take the last few instead? ..surely this would be better treated by microsoft as an exception rather than just ignoring the parameters - if an absolute path is tried to be merged with a path which was already absolute surely that's an invalid argument.....probably going to write my own method to do what i want, just wanted to get everyone's opinion on why it could have been purposely designed like this."
