"c # getproperty does not work public interface ibase { }..public class base&lt;t&gt; : ibase.{.    public static string genericname { get { return typeof( t ).name; } }.}..public class a : base&lt;int&gt; { }.public class b : base&lt;float&gt; { }.public class c : base&lt;string&gt; { }..class program.{.    static void main( string[] args ).    {.        type findtype = typeof( ibase );.        type[] types = ( from domainassembly in appdomain.currentdomain.getassemblies().                         from assemblytype in domainassembly.gettypes().                         where findtype.isassignablefrom( assemblytype ).                         select assemblytype ).toarray();..        // i = 2 is class a.        for( int i = 2; i &lt; types.length; i++ ).        {.            type type = types[i];.            propertyinfo propertyinfo = type.getproperty( ""genericname"", bindingflags.public | bindingflags.static );..            if( null != propertyinfo ) // propertyinfo is null!.            {.                string gettype = (string)propertyinfo.getvalue( null, null );.            }.        }.    }.}...we have implemented gettype of base  to check the type of a, b, c, but we can not call it..why is the result of getproperty null?.and are there any solutions to these problems?"
