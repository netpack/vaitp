"is accessing local private variables via their public accessors bad form? i am working on a multi-threaded app.  i'm processing reports and keeping track of the number of reports in the current batch as well as the total number of reports processed.  whenever i update the counters, i also need to update a label on the gui which, since the process is on a separate thread, requires a call to a delegate.  which one of these is the better way to go?...private void updatetotalcount(int newvalue).{.    totalcount = newvalue;.    if (labeltotalcount.invokerequired).        begininvoke((methodinvoker) delegate() { .            labeltotalcount.text = ""total reports:"" + totalcount; });.    else.        labeltotalcount.text = ""total reports:"" + totalcount;.}...or ...private int totalcount;.public int totalcount.{.    get { return totalcount; }.    set {.        totalcount = value;.        if (labeltotalcount.invokerequired).            begininvoke((methodinvoker) delegate() { .                labeltotalcount.text = ""total reports:"" + totalcount; });.        else.            labeltotalcount.text = ""total reports:"" + totalcount;.    }.}..edit: ok, third option....private void updatetotalcountlabel().{.    if (labeltotalcount.invokerequired).        begininvoke((methodinvoker) delegate() { .            labeltotalcount.text = ""total reports:"" + totalcount; });.    else.        labeltotalcount.text = ""total reports:"" + totalcount;.}.// code elsewhere would look like this.totalcount++;.updatetotalcountlabel();.//or.totalcount+= curbatch.length;.updatetotalcountlabel();"
