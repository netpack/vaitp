"backgroundworkers in backgroundworker - error handling i have a backgroundworker that runs a lengthy and semi-complex task. in this backgroundworker, i have several other backgroundworkers that are being used within this ""main worker""...all the code for the dowork method is done, but i'm having some trouble with error management...if an exception is thrown inside my main worker, it automatically gets caught and i can retrieve it in my workercompleted method. however, if an exception is thrown in one of my ""sub workers"", it gets caught and returned to the main worker (subworkercompleted)...now to my problem: what do i do with this exception? what is the best way of reporting this up high so i can cancel the main worker?..my first thought was calling, in the sub workers completed method, this.cancelasync(). but then i can't see the difference between an exception in one of the sub workers and a user cancellation...implementing some kind of event in the main worker that is raised when sub worker exceptions occurs (so i can cancel the main worker) doesn't seem right somehow...i also tried throwing an exception in the main worker with the sub worker exception as inner exception, but the main worker's completed method was never called with the error. i assume this is because the sub worker's completed method (which is inside the main worker) is raised on a different thread than the main worker?..the call hierachy now is basically: ui -> main worker -> does stuff and at the same time starts sub workers (that does stuff)...this is my first attempt at something more complex (i'm a newbie hobbyist), so any tips are appreciated."
