"assign specific initial parameters from random values, among a pool of parameters i am using a function to initialize values for a constructor..in the constructor i call this function, and initialize parameters based on the specific type passed in the constructor...public class myclass().{.    // class parameters of type int..    public myclass().    {.        generatevalues(1);.    }..    private void generatevalues( int type_of_worker).    {.        random rnd = new random();.        //generate random values for the params.    }..}...with this i can generate random values based on the type of worker passed to the constructor, so i can have a basic worker, a technician, a director, a manager and so on...each role has requirements though, so when i create the worker of type ""manager"", it has to have at least 2 parameters that are above 50 (min 0 max 99). if is a director, it needs 3 parameters equal or above 75...how can i tell blank to create random values for x parameters, but if the type is manager, 2 of them has to be above 50, or if it is a director, 3 parameters ahs to be above 75?..for example, if i create a manager, i would use this in generatevalues:..// main parameters - any value between 1-99 is fine.par1 = rnd.next(1.99);.par2 = rnd.next(1.99);.par3 = rnd.next(1.99);.par4 = rnd.next(1.99);.par5 = rnd.next(1.99);.//extra parameters - any 2 of these above 50 for manager.par6 = rnd.next(1.99);.par7 = rnd.next(50.99);.par8 = rnd.next(50.99);.par9 = rnd.next(1.99);...the problem here is that i don't want to specify which of the extra parameters is between 50 and 99; but would like that any 2 of the extra parameters has to be between 50 and 99...i could assign values and then read them, changing them again, but it is pretty inefficient."
