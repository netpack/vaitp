"obtaining element with addeventlistener and bound functions when using bound functions (https://developer.mozilla.org/en-us/docs/web/blank/reference/global_objects/function/bind) in conjunction with addeventlistener (https://developer.mozilla.org/en-us/docs/web/api/eventtarget/addeventlistener#the_value_of_this_within_the_handler) what is the best method of obtaining the element that the event is attached to?..below is an example of a potential scenario. each li has an click event listener than triggers a method in the module. to avoid unnecessary anonymous functions/this/that (https://www.smashingmagazine.com/2014/01/understanding-blank-function-prototype-bind/#what-problem-are-we-actually-looking-to-solve), the module scope is passed to the event handler. in a typical event handler this would be the element that has the event attached; however, this would refer to the module in this situation. e.target refers to the element clicked on, not necessarily the element with the event. is there a better method than passing the element with the event as the code below does?..html..&lt;ul&gt;.  &lt;li&gt;&lt;a href=""#"" class=""link""&gt;link 1&lt;/a&gt;&lt;/li&gt;.  &lt;li&gt;&lt;a href=""#"" class=""link""&gt;link 2&lt;/a&gt;&lt;/li&gt;.&lt;/ul&gt;...blank..function module() {.    this.element = document.queryselectorall(""li"");..  for(var i=0; i&lt;this.element.length; i++) {.    this.element[i].addeventlistener(""click"", this.link.bind(this, this.element[i]));.  }.}..module.prototype.link = function(el, e) {.  //how to get the current element with the associated listener? normally ""this"" would be the element..  //e.target is the a tag, not the li tag with the attached event listener.  //passing the el variable seems less than optimal. better solution?.};..var instance = new module();...https://jsfiddle.net/1sj68d4n/..adding the event listener to the a tag instead of the li may solve the issue in this niche circumstance. however, in many cases an listener may be attached to an element with many children."
