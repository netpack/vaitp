"using keyboard input for 2 objects edit: solved..i'm a highschool student in japan trying to learn how to program..i recently viewed https://vimeo.com/105955605 this video, and decided i could use the beginning section to start building pong in blank. ..i'm pretty much a complete novice with programming and/or blank and i still have a long way to go...i got player1 (left paddle) to work on its own, so i figured i could just copy paste, mess with a couple things, and make player2. however, now player2 moves when i press w/s, but player1 no longer moves...i've tried creating 2 separate keyboarder() functions, using this.keyboarder from player1 in player2 (player2.keyboarder = player1.keyboarder() ), and declaring/calling keyboarder() before doing anything else...html: ..&lt;html&gt;.   &lt;head&gt;.        &lt;meta charset=""utf-8""&gt;.       &lt;title&gt;pong&lt;/title&gt;.      &lt;link type=""text/css"" rel=""stylesheet"" href=""css/stylesheet.css""&gt;.    &lt;/head&gt;.    &lt;body&gt;.         &lt;canvas id=""screen"" width=""310"" height=""210""&gt;&lt;/canvas&gt;.         &lt;script src=""js/pong.js""&gt;&lt;/script&gt;.     &lt;/body&gt;. &lt;/html&gt;...blank:..    ;(function(){..//main game function.    //tells objects in bodies array to update..    //stores gamesize pulled from canvasid.    var game = function(canvasid){.        var canvas = document.getelementbyid(canvasid);.        var screen = canvas.getcontext('2d');.        var gamesize = {x: canvas.width, y: canvas.height};.        var self = this;.//bodies array.        this.bodies = [new player1(this, gamesize), new player2(this, gamesize)];.//update function.        var tick = function(){.        self.update();.        self.draw(screen,gamesize);.        requestanimationframe(tick);.        };.        tick();.    };.//constructer for game() function. tells bodies to update, and draw.    game.prototype = {.        update: function(){.            for(var i =0 ; i &lt; this.bodies.length; i++){.                this.bodies[i].update();.            }.        },.        draw:function(screen,gamesize){.            screen.clearrect(0,0,gamesize.x,gamesize.y);.            for(var i =0 ; i &lt; this.bodies.length; i++){.                drawrect(screen, this.bodies[i]);.            }.        }.    };.//p1 object, declares size and start position of p1.    var player1= function(game, gamesize){.        this.size = {x:30,y:gamesize.y / 3};.        this.game = game;.        this.gamesize = gamesize;.        this.center = {x: 0, y:gamesize.y/2};.        this.keyboarder = new keyboarder();.       requestanimationframe(this.update);.    };.//constructor for p1, updates position based on keyboard input.    player1.prototype = {.        update:function(){.            if (this.keyboarder.isdown(this.keyboarder.keys.down) &amp;&amp; this.center.y &lt; (5*this.gamesize.y / 6)){.               this.center.y += 4;.            }else if(this.keyboarder.isdown(this.keyboarder.keys.up) &amp;&amp; this.center.y &gt; this.size.y /2 ){.                this.center.y -= 4;.            }.        }.    };.//p2, same as p1 aside from position.    var player2= function(game, gamesize){.        this.size = {x:30,y:gamesize.y / 3};.        this.game = game;.        this.gamesize = gamesize;.        this.center = {x: gamesize.x, y:gamesize.y/2};.        this.keyboarder = new keyboarder();.        requestanimationframe(this.update);.    };.//constructor for p2, same as p1.    player2.prototype = {.        update:function(){.            if (this.keyboarder.isdown(this.keyboarder.keys.s) &amp;&amp; this.center.y &lt; (5*this.gamesize.y / 6)){.                this.center.y += 4;.            }else if(this.keyboarder.isdown(this.keyboarder.keys.w) &amp;&amp; this.center.y &gt; this.size.y /2 ){.                this.center.y -= 4;.            }.        }.    };.//draw function, draws object.    var drawrect = function(screen, body){.        screen.fillrect(body.center.x - body.size.x /2,.                body.center.y - body.size.y /2, body.size.x,body.size.y);.    };.//keyboard input function.    //reads if keys are being pressed and takes the event code.    //isdown() returns boolean of key down = true, key up = false.    var keyboarder = function(.        ){.        var keystate = {};..        window.onkeydown = function(e){.            keystate[e.keycode] = true;.        };.        window.onkeyup = function(e){.            keystate[e.keycode] = false;.        };.        this.keys = {down: 37, up:39,w:87 , s: 83};..        this.isdown = function(keycode){.            return keystate[keycode] === true;.        };..    };.//calls game() function when the page has loaded..    window.onload = function(){.        new game(""screen"").    };.})();...sorry if this is bad protocol for using stackoverflow, i'm also new to asking questions here."
