"extending blank object and it's properties hello i know that this question has been asked many times but there are too many opinions and arguments. i don't have the greatest experience to validate the answers so here it goes i'll explain what i'm looking for and perhaps you can point me to the right direction...in my app i have created an object with some methods, most of them have a set of predefined default values, like so:..module.exports = {..    submit: function(options) {..        var defaults = {.            _id: 1453,.            text: 'some text',.            dataobj:{.                links: 3532,.                arr: ['james','paul','lina'],.            },.            dims:{.                width: getclientwidth(),.                height: getclientheight().            }.        }..        options.extend(defaults);..        return senddata(defaults);..    }..    // other similar methods - functions..};...what i'm interested in is to extend the properties and attributes of the defaults local variable. as you can see defaults is a complex structured object. keep in mind that options structure might be even more complex. so a simple shallow merge / copy might not be ideal here if i'm not mistaken...usage as you can imagine:..var app = {.   // stuff.}..app.fn = require('common/lib.js');..app.initialize(function(){.   var settings = {.      // hell here.   }.   app.fn.submit(settings).})...thank you in advance...ps. no libraries are being used and i'm interested of in a pure blank implementation of extend() function in any way."
