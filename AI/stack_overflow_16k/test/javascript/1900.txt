"js circular dependencies with require how can i remove circular dependencies in blank and don't have a duplicity with using require('module') pattern?..let's have two cases that should be the same:...left case:..// file1.js (depends on file3.js since it uses c2).class base {.   add() {.      this.items.push(new c2());.   }.}..// file2.js (depends on file1.js since it uses base).class c1 extends base {.}..// file3.js (depends on file1.js since it uses base).class c2 extends base {.}...introduces circular file dependencies...is it generally a bad if i create an instance in a base class?..right case:..// file1.js (no dependency).class base {.}..// file2.js (depends on file1.js and file3.js since it uses base and c2).class c1 extends base {.   add() {.      this.items.push(new c2());.   }.}..// file3.js (depends on file1.js since it uses base).class c2 extends base {.   add() {.      this.items.push(new c2());.   }.}...it does not introduce circular file dependencies, but duplicates code. the method is the same on the two places. think about a longer method here not just one line method."
