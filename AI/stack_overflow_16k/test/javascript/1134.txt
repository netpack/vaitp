"what does this 'child' in my blank array mean? i keep getting these 'child' things in my blank collection after certain operations. the 'child' keyword is showing up in my terminal after logging the blank collection...whats strange is that i can't actually find good documentation anywhere online on what this means. seems like it should be a basic concept. ..when i do google it i just get a ton of results for 'child' in context of html and the dom...what does it mean in blank? and how could i fix this collection to have these nested collections without the 'child' thing. ..gosh i wish i could speak about it with more sophistication :p..more context on how this 'bad' collection is generated..so i'm trying to populate json data from my mongodb database and return it to the frontend. essentially i have nested collections like so:..institution. |.  ------------&gt; memberorganizations.                |.                 ---------------------&gt; associatedvips...where i'm originally grabbing institutions i can populate collections one level down using built in populate functionality...doing like so:..    institution.find().        .populate('memberorganizations').        .then(function (institutions) {..       console.log(""all institutions, memberorganizations populated no problem."");.        return res.json(institutions);.    });...the problem is coming in when i try to go populate collections inside those member organizations, and replace existing memberorganizations data with that...    institution.find().        .populate('memberorganizations').        .then(function (institutions) {..            var populateorganizationordermanagers = _.map(institutions, function (institution) {.                var masterinstitution = _.clonedeep(institution);.                return new promise(function (resolve, reject) {.                    var ids = _.map(institution.memberorganizations, 'id');...         organization.find(ids).populate('associatedvips').then(function (orgs) {..                        masterinstitution.memberorganizations = orgs;.                        resolve(masterinstitution);.                    });.                });.            });.            return promise.all(populateorganizationordermanagers).                .then(function (institutionswithordermanagers) {.                    return res.json(institutionswithordermanagers);.                });.    })...printouts of the json data using console.log to print to my terminal..(simplified all data by a bit to make it easier to make a point)..what it looks like:..[ child {.  memberorganizations: .   [ { associatedvips: .        [ { firstname: 'gregory',.          lastname: 'parker',.          email: 'info@parker2018.com',.          id: '5ab94183164475010026184b' } ],.     institution: '5ab940b71644750100261845',.     name: 'greg parker',.     type: 'student',.     id: '5ab941401644750100261847' },.   { associatedvips: .      [ { firstname: 'irma',.          lastname: 'francisco',.          email: 'irmaf@houstontransporter.com',.          id: '5ae348da1ef63b245a74fe2d' } ],.     institution: '5ab940b71644750100261845',.     name: 'transporter inc',.     type: 'other',.     id: '5ae3488d1ef63b2c8f74fe29' } ],.      name: 'corporate',.      createdat: 2018-03-26t18:49:27.955z,.      updatedat: 2018-07-05t15:00:02.562z,.      id: '5ab940b71644750100261845' }...what i'd like it to look like:..{ memberorganizations: .     [ { .         name: 'tau kappa epsilon',.         type: 'greek - fraternity',.         institution: '5a3996d47bab3401001cc1bc',.         id: '5a3ae7ebdfd69201001aa54d'.           associatedvips: .             [ { firstname: 'irma',.               lastname: 'francisco',.               email: 'irmaf@houstontransporter.com',.               id: '5ae348da1ef63b245a74fe2d' },.               { firstname: 'zach',.                 lastname: 'cook',.                 email: 'zach@google.com',.                 id: '5ae348da1ef63b245a74f' } ].       },.       { name: 'farmhouse',.         type: 'greek - fraternity',.         institution: '5a3996d47bab3401001cc1bc',.         id: '5a4e71e806b97a01003bd313' } ],.    name: 'troy university',.    createdat: '2017-12-19t22:46:44.229z',.    updatedat: '2018-07-05t15:18:03.182z',.    id: '5a3996d47bab3401001cc1bc' },.  { memberorganizations: .     [ { name: 'alpha epsilon pi',.         type: 'greek - fraternity',.         institution: '5a4d534606b97a01003bd2f1',.         id: '5a4f95c44ec7b6010025d2fb' },.       { name: 'alpha delta chi',.         type: 'greek - sorority',.         institution: '5a4d534606b97a01003bd2f1',.         id: '5a74a35e1981ef01001d0633' },.       { name: 'phi sigma kappa',.         type: 'greek - fraternity',.         institution: '5a4d534606b97a01003bd2f1',.         id: '5a7ba61821024e0100be67b7' } ],.    name: 'university of alabama',.    createdat: '2018-01-03t22:03:50.929z',.    updatedat: '2018-07-05t15:18:03.182z',.    id: '5a4d534606b97a01003bd2f1' }"
