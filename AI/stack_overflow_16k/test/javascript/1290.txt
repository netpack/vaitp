"using array.includes() instead of or chain which is better? i'm concerned about both style/readability and performance...somemathematicalexpression === 0 || somemathematicalexpression === 1 ||. somemathematicalexpression === -1 || somemathematicalexpression === 11 || ......vs...[0,1,-1,11,...].includes(somemathematicalexpression)...the or chain has the advantage of being more literal, whereas it might not be obvious from first glance what the intent of the .includes is...on the other hand, the .includes can be much shorter, and it separates the solutions from the expression, making it easier to see which values will evaluate to true..most significantly, when somemathematicalexpression is fairly complex, the entire or chain can become very operator-heavy, making it hard to read...i just wanted to make sure i wasn't missing anything, or check to see if there was a third option i hadn't considered...tl;dr: is there a reason to not use array.includes instead of an or chain containing only === statements"
