"partial applied function works only for the first time. i have defined my own version of partial function:..const partial = function (fn,...partialargs){.  let args = partialargs;.  return function(...fullarguments) {.    let arg = 0;.    for (let i = 0; i &lt; args.length &amp;&amp; arg &lt; fullarguments.length; i++) {.      if (args[i] === undefined) {.        args[i] = fullarguments[arg++];.        }.      }.      return fn.apply(null, args);.  };.};...and when i use it:..let delay = partial(settimeout,undefined,100).delay(() =&gt; console.log(""xxx""))...it does prints xxx as i expect. but when i try to reuse the function delay, it seems that it doesn't work:..delay(() =&gt; console.log(""yyy""))...even the above code snippet prints xxx!! i'm not sure where i'm making the mistake."
