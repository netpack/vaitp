"return a function on new model(), then being able to call new on that returned function again? i am looking for the best way to achieve the following use case in blank (if possible at all)...let's say i want to configure some ""model"" entity. such configuration might be some schema definition or some validation rules. the configuration is kept within the scope of ""modeldef""...var modeldef = new model({ schema : { name : 'string' }, validation : {} });...i then want to be able to initialize instances of a previously defined ""modeldef"". this time, i might provide some attributes and their values...var modelinstance = new modeldef({ attribute1 : value1, attribute2 : value2 });...so far so good. the point is, i want to use the ""new"" keyword in both cases. while the former (""modeldef"") case can be achieved in a straightforward way, i am wondering whether it is possible to get the second call, which builds on the first one, working, too."
