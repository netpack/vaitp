"why is __caller__ unsafe? the following seems to be a reasonable use of __caller__:..var foo=1;.function a() {.    var foo=2;.    function b() {.        var foo=3;.        foo; // 3.        this.foo; // 1, from global.        __caller__.foo // 2.    }.    b();.}.a(); // creates a's execution context...however, __caller__ is not available. why not? if the global context/variable object can be accessed using this, then why not a's?"
