"data input auto formatting using blank i'm working on a date input auto formatting solution. the code i use adds a space between before and after a slash (example : 02 / 02 / 2006. .i tried to avoid this behavior. so instead, the date format is 02/02/2006. ..i'm also using an event delegation to make the date formatting active on all the inputs. ..actually, i tried a solution to deactivate space adding. but the modification doesn't allow the control of the input to delete dates.  ....function checkvalue(str, max) {.  if (str.charat(0) !== '0' || str == '00') {.    var num = parseint(str);.    if (isnan(num) || num &lt;= 0 || num &gt; max) num = 1;.    str = num &gt; parseint(max.tostring().charat(0)) &amp;&amp; num.tostring().length == 1 ? '0' + num : num.tostring();.  };.  return str;.};.  .function dateinput(date) {  // date is input object argument.  var input = date.value;.  if (/d/$/.test(input)).    input = input.substr(0, input.length - 3);.  var values = input.split('/').map(function(v) {.    return v.replace(/d/g, '').  });.  if (values[0]) {.    values[0] = checkvalue(values[0], 12);.  }.  if (values[1]) {.    values[1] = checkvalue(values[1], 31);.  }.  var output = values.map(function(v, i) {.    return v.length == 2 &amp;&amp; i &lt; 2 ? v + ' / ' : v;.  });.  date.value = output.join('').substr(0, 14);.}..function dateblur(date) {  // date is input object argument.  var input = date.value;.  var values = input.split('/').map(function(v, i) {.    return v.replace(/d/g, '').  });.  var output = '';.  if (values.length == 3) {.    var year = values[2].length !== 4 ? parseint(values[2]) + 2000 : parseint(values[2]);.    var month = parseint(values[0]) - 1;.    var day = parseint(values[1]);.    var d = new date(year, month, day);.    if (!isnan(d)) {.      document.getelementbyid('result').innertext = d.tostring();.      var dates = [d.getmonth() + 1, d.getdate(), d.getfullyear()];.      output = dates.map(function(v) {.        v = v.tostring();.        return v.length == 1 ? '0' + v : v;.      }).join(' / ');.    }.  }.  date.value = output;.}.// delegate event handling from the form element..var form = document.getelementbyid(""form"");.form.addeventlistener(""blur"", function(e) {.  if(e.target.dataset.type == ""date"") {.    dateblur(e.target);.  }.},false);.form.addeventlistener(""input"", function(e) {.  if(e.target.dataset.type == ""date"") {.    dateinput(e.target);.  }.}, false);.html {.  box-sizing: border-box;.  font-family: 'pt sans', sans-serif;.-webkit-font-smoothing: antialiased;.}.*, .*:before, .*:after {.  box-sizing: inherit;.}.body {.    background-color: #f3f3f3;.}.form {.    width: 100%;.    max-width: 400px;.    margin: 60px auto;.}.form input {.    font-size: 30px;.    padding: 0 20px;.    border: 2px solid #ccc;.    width: 100%;.    color: #666;.    line-height: 3;.    border-radius: 7px;.    font-family: 'pt sans', sans-serif;.    font-weight: bold;.}.form input:focus {.    outline: 0;.}.form input.error {.    border-color: #ff0000;  .}.form label.error {.    background-color: #ff0000;.    color: #fff;.    padding: 6px;.    font-size: 11px;.}..label {.    color: #999;.    display: block;.    margin-bottom: 10px;.    text-transform: uppercase;.    font-size: 18px;.    font-weight: bold;.    letter-spacing: 0.05em.}.form small {.    color: #888;.    font-size: 1em;.    margin-top: 10px;.    display: block;.    align-self: ;.}.&lt;form id=""form"" method=""post"" action=""""&gt;.  &lt;label for=""amount""&gt;date&lt;/label&gt;.  &lt;input type=""text"" id=""date1"" data-type=""date"" /&gt;.  &lt;small&gt;enter date as month / day / year&lt;/small&gt;.  &lt;/br&gt;.  &lt;label for=""amount""&gt;date 2&lt;/label&gt;.  &lt;input type=""text"" id=""date2"" data-type=""date"" /&gt;.  &lt;small&gt;enter date as month / day / year&lt;/small&gt;.  &lt;/br&gt;.  &lt;label for=""amount""&gt;date 3&lt;/label&gt;.  &lt;input type=""text"" id=""date3"" data-type=""date"" /&gt;.  &lt;small&gt;enter date as month / day / year&lt;/small&gt;.  .&lt;/form&gt;"
