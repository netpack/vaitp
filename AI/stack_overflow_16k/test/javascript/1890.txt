"where does a variable point when i set it equal to a global variable? here's a simple example:..  1| window.gamelogic = {};.  2| var g = gamelogic;.  3| g.points = 1;.  4| g.array = [""foo"",""bar""];.  5| var b = g.points;.  6| b = b + 1;.  7| console.log(window.gamelogic);.  8| console.log(b);...this will print: ..object { points=1, array=[2] }.2...so there's 2 things to note here:...a (seemingly local) variable - g - when set to a global object and updated, also updates the golbal object - window.gamelogic. (updating g also updated window.gamelogic)..a local int, b (set to a global int, points), does not update the global variable when it is changed. (updating b did not update window.gamelogic.points)...based on the first point, one would think that when a var is pointed to a global object, you're actually just creating another pointer to the same memory location of that global object. this would explain why updating g also updates window.gamelogic...however, b not updating window.gamelogic.points seems to counter this argument...what is going on here?"
