"an actual interceptor for console.log in blank the usual suggestion (capturing blank console.log?) for a js console.log interceptor falls short on two counts, both serious:..(i) all calls in the actual browser console now appear to come from the same line - where the new function is defined - rather then where the call is done..(ii) the intercepted arguments are not yet formatted the way console.log does (i.e. the % replacement goodies, %o, in particular):....(function() {.  function send_stuff(){ /* deal with console arguments. */ }.  .  var oldlog=console.log;.  console.log=function(msg) {.    oldlog.apply(this,arguments);.    send_stuff(array.prototype.slice.call(arguments).join());.  }.}())..console.log(""test"");.console.log(""hello %s"", ""bob"");.console.log(""here is an object %o"", { stuff: ""thing"" });... ..maybe something better (e.g. something able to capture the actual buffer content of console.log) has been devised...edit:. to clarify the multiple arguments failure: besides expanding the file/line info, console.log also does some clever replacements - a-la-printf - of % sequences. of particular interest is the %o sequence, where a deep-ish dump of the subsequent object(s) is expanded, and put to good use by the browser's console window. this cannot be replicated, unless one is willing to basically reimplement its logic (unnecessarily and , in all likelyhood, unefficiently)..cheers,"
