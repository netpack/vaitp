"why use bind() when i can just copy another method by reference? i was watching a bind() tutorial in which they provided the following code as an example of bind() - http://jsbin.com/pugogiqupu/1/edit?js,console:..function doublescore() {.  this.score *= 2;.}..function game() {.  this.score = 1;.  this.double = doublescore.bind(this);.  this.printscore = function() {.    console.log(this.score);.  }.}..var game = new game();.game.score = 3;.game.printscore(); // consoles out: 3.game.double();.game.printscore(); // consoles out: 6..var game2 = new game();.game2.score = 4;.game2.printscore(); // consoles out: 4.game2.double();.game2.printscore(); // consoles out: 8...i noticed that if i omit the .bind(this) and simply make a reference to the function without binding it, that it still works. ..function doublescore() {.  this.score *= 2;.}..function game() {.  this.score = 1;.  this.double = doublescore;.  this.printscore = function() {.    console.log(this.score);.  }.}..var game = new game();.game.score = 3;.game.printscore(); // consoles out: 3.game.double();.game.printscore(); // consoles out: 6..var game2 = new game();.game2.score = 4;.game2.printscore(); // consoles out: 4.game2.double();.game2.printscore(); // consoles out: 8...why is using bind() beneficial in this case? what am i missing?..edit: if either method can handle this case, then is there a way to re-write my example that shows how using bind() would be useful?"
