"how to copy source object keys to target object keys in blank i am facing a situation where i need to copy source object to target object. my source and target objects are nested object. ..source object :..let remoteoptionobject = {.                    ""key1"" : ""1"",.                    ""key2"" : ""2"",.                    ""key3"" :{.                        ""key5"" : ""5"".                    }.               }...target object:..let localoptionobject = {.                    ""key1"" : ""1"",.                    ""key2"" : ""2"",.                    ""key3"" :{.                        ""key4"": ""4"",.                        ""key5"" : ""5"".                    }, .                    ""key6"" : ""6"",.                }...expected result :..let expectedlocalobj= {.                    ""key1"" : ""1"",.                    ""key2"" : ""2"",.                    ""key3"" :{.                        ""key4"": ""4"",.                        ""key5"" : ""5"".                    }, .                    ""key6"" : ""6"",.                }...here i want to retain the keys of target and update only those which are present in source object. i have tried with object.assign({}, target, source} but that is removing keys which are nested (as expected)...below is what i have tried and its working but is this a correct approach...function assignsourcetotarget(source, target){.    for (var property in source) {.        if(typeof source[property] === 'object') {.            if (!target[property]) object.assign(target, { [property]: {} });.            assignsourcetotarget(source[property], target[property]) .        } else {.            if(source.hasownproperty(property)) {.                target[property] = source[property].            }.        }        .    }.    return target;.}"
