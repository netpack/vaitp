"ensure callback to execute last var a = function(callback){.    settimeout(function(){ console.log(""hello""); }, 1000);.    callback(b);.}.var b = function(){.    console.log(""done"");.}.a(b);...i notice that since blank is asynchronous, the code above will show ""done"" before ""hello""...however, i am curious that for the following code, will callback(j) ever be executed before j = json.parse(randomstring) if the function json.parse took too long to parse the string? which the j passed into callback function will be null..if so, how do i prevent such case?..var randomstring = '[{""a"":1, ""b"":2, ""c"":3}]';.var a = function(callback){.    var j;.    j = json.parse(randomstring);.    callback(j);.}.var b = function(j){.    console.log(""done: "" + json.stringify(j));.}.a(b);"
