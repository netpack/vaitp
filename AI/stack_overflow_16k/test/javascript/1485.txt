"when should one choose prototypal inheritance vs functional inheritance? i've been reading through blank: the good parts and i'm currently on ""chapter 5: inheritance."" ..from what i understand, using functional inheritance is preferred because it allows privacy for the properties and variables of an object while still allowing them to be called using methods outside of the object. however, it does seem like there is an advantage for prototypal inheritance because you can create a prototype object fairly easily (which makes understanding  what the object is, to me, a little more concrete)...when should i choose one over the other? should i always use functional inheritance whenever possible? or are there ""better"" guidelines that i can follow to make that determination?"
