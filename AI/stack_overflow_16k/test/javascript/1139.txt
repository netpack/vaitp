"understanding function.call.bind - step-by-step everything started with this question..then an answer from @minusfour..var slice = function.call.bind(array.prototype.slice);...i wanted to understand, whats happening under the hood, .my curiosity hence this question...what to achieve ? understanding of ""function.call.bind""...step-by-step approach for the same ..started with mdn..note : i am using nodejs here..1)..var adder = new function('a', 'b', 'return a + b');.console.log(adder(2, 6));...**output **..8...this is expected, nothing fancy..2)..this is our end goal , calling function myfunc from the bounded.function (function.call.bind(myfunc))..function myfunc(a, b) {.    console.log(arguments.length, a, b, a + b);.}...3)..var adder = function(myfunc);.console.log(adder.tostring())...output..function anonymous() { function myfunc(a, b) {   console.log(a + b); } }...expected! above code does nothing, because i am calling 'anonymous' ,.and it does nothing...4)..var adder = function.call(myfunc);.console.log(adder.tostring())...output ..function anonymous() {..}...expected!.  '.call'  calls 'function', with 'this' set to 'myfunc'  and with out any param or function body. so an empty anonymous function is  the output. now, i can do ""var adder = function.call(myfunc,myfunc);""   to create the same function from step-3..so far so good..5)..var adder = function.call.bind(myfunc);.console.log(adder.tostring())   .adder(2,6); ...output..function () { [native code] }.1 6 undefined nan...here first param is not passed to the 'myfunc' function. .this is taken as 'this' for function 'adder' (the bounded function.call) ?..now i understand(or did i misunderstood?) until now, but then.how does below code works ?..var slice = function.call.bind(array.prototype.slice);.function fn(){.    var arr = slice(arguments);.}...in my case first param to adder is discarded(or function.call consider it as 'this' for it), same should happen with slice above  right ?..anyway, i wanted to document it for a reference"
