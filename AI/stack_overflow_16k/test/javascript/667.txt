"why does a const update a property via the spread operator? during a code review, it was pointed out that i could use spread operator and a constant to update an object:....const props = { .  haircolor: 'brown',.};..const haircolor = 'red';.const newprops = { ...props, haircolor};..console.log(newprops); // -&gt; haircolor now equals 'red'.....the question is, how does this work? ..i understand how actually passing an object works:..const newprops = { ...props, { haircolor: 'red' }};...but how does it know to update haircolor with the value 'red'? a quick test shows it is using the variable name, but how?....const props = { .  haircolor: 'brown',.};..const colorofhair = 'red';.const newprops = { ...props, colorofhair};..// -&gt; haircolor still equals 'brown'.// with new property 'colorofhair'.console.log(newprops);"
