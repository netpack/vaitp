"balance array of numbers to equal 1 i am trying to write a function that given an array like ..var a = [.    0.0015974718789698097.    ,0.755383581038094.    ,0.13950473043946954.    ,0.0011978091842754731.    ,0.005126875727346068.    ,0.0042250281407886295.    ,0.0001720958819913952.    ,0.0047584144830165875.    ,0.0835073272489086.    ,0.00016098907002300275.    ,0.0028037075787230655.    ,0.0014378579473690483.    ,0.00012411138102484662.]...or..var a = [.    0.33333333333333333.    ,0.33333333333333333.    ,0.33333333333333333.]...or..var a = [.    0.166666666666666.    ,0.166666666666666.    ,0.3.    ,0.3333333333333333.]...it round each number to 3 decimal places while keeping the sum of all the values is still equal to 1.0.  ..the way i imagine it would do this is by taking the difference of the new sum and the expected sum and distribute the difference while maintaining the relative distribution as close as possible. i can only think of an iterative approach and wanted to see what other solutions people can come up with..it's important to notice that the very last value of 0.00012411138102484662 will round to 0.000 but that doesn't it mean it should never get a piece of the difference, because the distribution it wants to maintain is the unrounded distribution, not the current distribution after rounding to 3 decimal places nor after iteration of balancing"
