"initialize object with type [key, value: array] in shorthand form suppose i want to loop through an array of characters and build up an object which represents the frequency of each character, for example:..const frequency = {};.const str = 'stackoverflow';..for (let i = 0; i &lt; str.length; i++) {.    frequency[str[i]] = (frequency[str[i]] + 1) || 1;.}...with the above, we would expect an object in the form of:..{.    s: 1,.    t: 1,.    a: 1,.    c: 1,.    k: 1,.    o: 2,.    v: 1,.    e: 1,.    r: 1,.    f: 1,.    l: 1,.    w: 1.}...now suppose i wanted to loop through an array of nested arrays, each with a form of [id, val]. can i create an object such that i would end up with multiple keys, each representing a different id, and a corresponding array, filled with the values, in the same shorthand form as above?..for example:..[ [1,2], [1,3], [1,5], [2,7], [3,0], [1,10] ]..{.    1: [2,3,5,10],.    2: [7],.    3: [0].}...is there something similar to:..const map = {};..for (let i = 0; i &lt; list.length; i++) {.    map[list[i][0]] = (map[list[i][0].push(map[list[i][1])) || [list[i][1]];.}"
