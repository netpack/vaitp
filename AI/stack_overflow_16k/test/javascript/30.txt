"recursive data manipulation suppose we are receiving this object array:..[.    {.        ownerid: 1,.        personname: john,.        petsowned: [.            {.                petid: 1,.                petname: fluffy,.                pettype: cat,.                diseases: [.                    {.                        diseaseid: 1,.                        diseasename: a,.                    },.                    {.                        diseaseid: 2,.                        diseasename: b,.                    }.                ].            },.            {.                petid: 2,.                petname: biscuit,.                pettype: dog,.                diseases: [.                    {.                        diseaseid: 3,.                        diseasename: g,.                    },.                    {.                        diseaseid: 4,.                        diseasename: z,.                    }.                ].            },.            {.                petid: 3,.                petname: ant,.                pettype: hamster,.                diseases: [.                    {.                        diseaseid: 5,.                        diseasename: vx,.                    },.                    {.                        diseaseid: 6,.                        diseasename: t1,.                    },.                    {.                        diseaseid: 55,.                        diseasename: yu,.                    }.                ].            }.        ].    }.]...which cascades like this 4 or even more times and every cascade doesn't have any information about its parent object. ..i mean taking out fluffy from would end up having no owner because it doesnt have an ownerid in it. ..if there would be more than 50 of those owners having random number of pets and those pets may have random number of diseases or anything you like, how would you return a complete list of pets diseases, is there a way todo it without using loops within loops within loops and so on in blank?..thank you for your time and i hope it is clear enough to understand what i am asking."
