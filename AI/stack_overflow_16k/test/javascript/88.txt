"in blank, is there a way to retrieve the object a function was bound to? specifically, i'm interested in how to get the code below to work, logging as per the comments...function someweirdness(func) {.    var functhis = undefined; // instead of undefined, access to what,.                             // if anything, func is bound to.                             // (func.this doesn't work, but that would be.                             // it if it did)..    console.log(functhis);.}.function greet(greeting) {.    console.log([greeting || ""hello"", this.name].join("" ""));.}.var obj = {.    name: ""object"".};.greetobj = greet.bind(obj);.someweirdness(greetobj); // logs obj...the application would be something more along the lines of:..function compositionalmagic(func, params) {.    params = array.isarray(params) ?.                params : array.prototype.slice.call(arguments, 1);.    // additional processing and hooplah.    func.apply(func.this, params);.}"
