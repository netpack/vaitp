"why does the assignment operator return a value and not a reference? i saw the example below explained on this site and thought both answers would be 20 and not the 10 that is returned. he wrote that both the comma and assignment returns a value, not a reference. i don't quite understand what that means. ..i understand it in relation to passing variables into functions or methods i.e primitive types are passed in by value and objects by reference but i'm not sure how it applies in this case...i also understand about context and the value of 'this' (after help from stackoverflow) but i thought in both cases i would still be invoking it as a method, foo.bar() which would mean foo is the context but it seems both result in a function call bar(). ..why is that and what does it all mean?..var x = 10;.var foo = {.  x: 20,.  bar: function () {return this.x;}.};..(foo.bar = foo.bar)();//returns 10.(foo.bar, foo.bar)();//returns 10"
