"is there a disadvantage to holding a repeatedly accessed object attribute in a local variable? say there is an object called obj, and it has an attribute named attr. in some function body i access the attribute say three times using a syntax like this (obj.attr). is there a disadvantage to declaring a local variable const objattr = obj.attr, and using it in place of obj.attr? i would declare the local variable to avoid the cost of repeatedly accessing attr from its obj. but i am wondering if there might be a disadvantage to creating the local variable for the mere sake of avoiding repeated access calls?"
