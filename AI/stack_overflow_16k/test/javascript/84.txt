"hexagonal traiangle addition given a non-negative integer k &lt;= 33, generate the triangle...implement a method that allows secure access to properties of an object, even when those properties do not exist...the function must support three parameters: the object to be accessed; the default value that will return the function in case the property does not exist inside the object; and finally, a string indicating the path of the property to be consulted...the path will delimit the path in which the property to be consulted is located. the different levels of depth will be delimited with points. in addition this last parameter is optional. if not provided, the function will return another function that will wait to be invoked with the path of the property as an argument...examples:..const obj = {.    p1: {.        p2: 'value'.    }.}...get(obj, null, 'p1.p2') // ---&gt; returns 'value'.const obj = {.    p1: {.        p2: 'value'.    }.}...get(obj, 'default', 'p1.p2.p3') // ---&gt; returns 'default'.const obj = {.    p1: {.        p2: 'value'.    }.}"
