"type of object returned by object.create i am trying to grasp certain concepts of blank. here is small situation..// shape - superclass.function shape() {.  this.x = 0;.  this.y = 0;.}..// superclass method.shape.prototype.move = function(x, y) {.  this.x += x;.  this.y += y;.  console.info('shape moved.');.};..// rectangle - subclass.function rectangle() {.  shape.call(this); // call super constructor..}..// subclass extends superclass.rectangle.prototype = object.create(shape.prototype)...now, if i type..rectangle.prototype instanceof shape.true...now, does it mean the type of the object returned by object.create (in my last line of first code snippet), is shape? it seems yes. though i didn't request it anywhere, i just specified the prototype of that object which should be same as shape.prototype...i just can't find this documented in the object.create docs. can someone explain if this is the case and (maybe also) why that is the case? ..extra: also, it seems by using line..rectangle.prototype = object.create(shape.prototype)...i am inheriting methods, and not the instance variables declared in the shape constructor? because prototype doesn't know anything about the properties specified inside the shape constructor? e.g. x and y."
