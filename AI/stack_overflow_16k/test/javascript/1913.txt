"setting nested object properties with dynamic name coming off my previous question (which was about getting the property), i need to set the value of a nested object member using a dynamic property name.....const settings = {.  service: {.    username: 'foo',.    password: 'bar'.  }.};..const settingname = 'service.username';.const newvalue = 'baz';..settings[settingname] = newvalue ; // doesn't work.console.log(settings.service.username); // foo.....the only way i can think of is to use eval:..eval(`settings.${settingname} = ""${newvalue}""`);.....const settings = {.  service: {.    username: 'foo',.    password: 'bar'.  }.}..const settingname = 'service.username';..const newvalue = 'baz';..eval(`settings.${settingname} = ""${newvalue}""`); // works, but bad..console.log(settings.service.username);.....but this has problems (for example, the example above assumes the new value is a string). is there a way to assign a property of a nested object whose name is not known without using eval?"
