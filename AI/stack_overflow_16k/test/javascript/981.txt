"why is my algorithm to reduce the height of an element not working correctly i'm writing some software that reads the pressure coming from a pump in psi.  on the front end i want to add a feature where a ball element rises as the pressure climbs to the value that is to be measured, and when the test finishes running i want the same ball to descend to its starting location based on the current psi value, this will act sort of like a visual safety queue so that the operator does not unplug a valve whilst its still pressured up...my rising algorithm works perfectly, the ball will rise by a certain % as the pressure increases, i do this by calculating the balls starting location and finding its offset from the finish location and finding the percentage difference between the desired psi value and current psi value each time a new value is passed to the function...this image should hopefully describe how the ball rises:....now, you would think that to run this code in reverse it would be as simple as reversing the algorithm, however i have tried that but the balls descends to its starting location even when the psi is still 8000 or so...here is my depressure algorithm:..function depressure(value).{.    // keep descending ball until it reaches 50, this is considered safe to remove the valve.    if(value &gt; 50).    {.        // calculate the depressure percentage.        var offset = parseint($(""#golfball"").css('margin-top'));  .        var percent = value / highest_val * 100; // the highest recorded psi for this test..        // i compute the new height here, it returns values like 95% as.        // i'd expect, but the ball still descends far too quickly.        var newheight = offset / 100 * percent;..        console.log(""the new height is: "" + newheight)..        console.log(""current % of pressure is: "" + percent + "". current height is: "" + newheight + ""px"");..        $(""#golfball"").animate({.            margintop: newheight + ""px"".        }, 1, function(){..        });.    }.    else.    {.        showresult();.    }.};...what am i doing wrong here, this method is called 10 times per second so i guess that the value could depreciate rapidly, but why does my rise method work?..rise algorithm:..function rise().{.    if(highest_val &gt; 200) {..        // difference between the destination element and golfballs starting position.        var offset = = $(""#golfball"").offset().top - $(""#progress .circlecontainer"").first().offset().top;..        // calculate the height for the ball to rise by - this is done by finding the percentage.        // and then checking if that value is greater than the max progress, if so we then compute.        // how many pixels we want to rise by.        var percentage = (highest_val / test_value) * 100;.        if(percentage &gt; curr_progress).        {.            curr_progress = percentage;.            totalheight   = (offset / 100) * curr_progress;..            if (totalheight &gt;= labeloffset).                $(""#message"").animate({ opacity: 0 });.        }.        // track the total height that has been computed - we don't want to exceed the offset.        if (totalheight &gt; offset).            totalheight = offset;..        // make the ball rise..        $(""#golfball"").animate({.            margintop: -totalheight + ""px"".        }, 1, function(){.            if(curr_progress &gt;= 100).                testpressure();.        });.    }.};...any suggestions would be greatly appreciated"
