"creating variable number of variables in blank i am trying to create a variable number of variables (arrays) in blank. ..i have a database from experiments and i am extracting data from it. i do not have control over the database or how data is written. i am extracting data in the form of a table - first (or zeroth column from blank's perspective) has location ids and subsequent columns have readings over several iterations. location ids (in 0th col) span over million of rows, and so the readings of the iterations are captured in subsequent columns. so i read over the database and create this giant table.  ..in the next step, i loop over columns index 1 to n (0th col has locations) and i am trying to get this - if the difference in 2 readings is more than 0.001, then write the location id to an array... if ( (a[i][j+1] - a[i][j]) &gt; 0.001): #1&lt;=j&lt;=n, 0&lt;=i&lt;=max rows in the table.   then write a[i][0] i.e. location id to an array, arr1[m][n] = a[i][0]...problem: it is creating dynamic number of variables like arr1. i am storing the result of each loop iteration in an array and the number of column j's are known only during runtime. so how can i create variable number of variables like arr1? secondly, each of these variables like arr1 can have different size...i took a look at similar questions, but multi-dimension arrays won't work as each arr1 can have different size. also, performance is important, so i am guessing numpy arrays would be better. i am guessing that dictionary would be slow in performance for such a huge data."
