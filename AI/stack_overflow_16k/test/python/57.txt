"what should i do when i get int object is not iterable?  def filter_list_by_value(self):.        self.get_user_input(""insert number to filter by: "").        value = int(self.__user_input).        print(value).        new_list = list().        try:.            self.history_stack.append(str(self.expense_list)).            for item in self.expense_list:.                try:.                    new_list.append(list(filter(lambda val: val &gt; value, item.expense))).                except typeerror as te:.                    print(""type error"" , te).            self.expense_list = new_list.        except typeerror as te:.            print(""type error!"", te)...class expense:.    def init(self, expense: int, category: str, day: int):.        self.__expense = expense.        self.__category = category.        self.__day = day..def __repr__(self):.    return str(self)...def __str__(self):.    return str(self.__dict__)...@property.def day(self):.    return self.__day..@day.setter.def day(self, day):.    self.__day = day..@property.def expense(self):.    return self.__expense..@expense.setter.def expense(self, expense):.    self.__expense = expense..@property.def category(self):.    return self.__category..@category.setter.def category(self, category):.    self.__category = category...i keep getting 'int' object is not iterable. what should i do? expense_list is an class-made object."
