"i need help to understand logic and solve code using blank my background: i am a network engineer and started learning blank to automate tasks. i don't have much experience in coding. i need help to understand and solve the coding issue, i've spent numerous hours to solve this coding problem using blank but no luck. i have attached what i have done so far on this problem...# read file.with open(""c:pylogfile.txt"") as file:.    next(file).    lines = file.read().splitlines().    file.close()..matchest = [].matchfail = [].matchsyn = [].counterest = 0.counterfail = 0.countersyn = 0..for line in lines:.    line = line.strip()..    if line.find('established') != -1:.        matchest.append(line).    elif line.find('failed') != -1:.        matchfail.append(line).    elif line.find('syn') != -1:.        matchsyn.append(line)..print(matchest).print(matchfail).print(matchsyn)...output:..['9/1/2013              1.1.1.1   0:10        established', '9/1/2013              1.1.1.1   0:10        established', '9/2/2013              1.1.1.1   0:10        established', '9/2/2013              1.1.1.1   0:10        established', '9/2/2013              1.1.1.2   0:10        established', '9/2/2013              1.1.1.1   0:10        established', '9/2/2013              1.1.1.1   0:10        established'].['9/1/2013              1.1.1.2   0:10        failed', '9/2/2013              1.1.1.1   0:10        failed', '9/2/2013              1.1.1.1   0:10        failed', '9/2/2013              1.1.1.1   0:10        failed'].['9/1/2013              1.1.1.1   0:10        syn', '9/2/2013              1.1.1.1   0:10        syn', '9/2/2013              1.1.1.1   0:10        syn'].....code description: to parse file ""logfile.txt"" and print the counts of the status for every ip per day...cat logfile.txt                     .-----------------                   .date                  ip        time        state    .9/1/2013              1.1.1.1   0:10        established.9/1/2013              1.1.1.2   0:10        failed.9/1/2013              1.1.1.1   0:10        syn.9/1/2013              1.1.1.1   0:10        established.9/2/2013              1.1.1.1   0:10        established.9/2/2013              1.1.1.1   0:10        failed.9/2/2013              1.1.1.1   0:10        failed.9/2/2013              1.1.1.1   0:10        established.9/2/2013              1.1.1.2   0:10        established.9/2/2013              1.1.1.1   0:10        established.9/2/2013              1.1.1.1   0:10        failed.9/2/2013              1.1.1.1   0:10        established.9/2/2013              1.1.1.1   0:10        syn.9/2/2013              1.1.1.1   0:10        syn...output should look like:..9/1/2013              1.1.1.1   established         2.9/1/2013              1.1.1.2   failed    1.9/1/2013              1.1.1.1   syn         1.9/2/2013              1.1.1.1   established         4.9/2/2013              1.1.1.1   failed    3.9/2/2013              1.1.1.1   syn         2.9/2/2013              1.1.1.2   established         1...thank you!"
