"how to replace parse_args arguments? i have downloaded a blank script made of three files:..file1.py.file2.py.file3.py...i usually call the script with a command like:..blank file1.py arg1 arg2 -n arg3 arg4...now i would like to call this script from within another blank file, file4.py, but i don't know how i should provide the arguments...in file1.py i have:..import time.import file2.import file3..def main():.    variable1, variable2, variable3 = file2.parse_args().    ....    run_simulation(variable1, variable2, variable3)..def run_simulation(variable1, variable2, variable3):.    ....    return ..if __name__ == '__main__':.    main()...and file2.parse_args() is something like:..def parse_args():.    parser = argparse.argumentparser(.        description=""desc1"").    parser.add_argument(""variable1"", nargs=""*"", type=str,.                        help=""help"").    parser.add_argument(""-b"", ""--byte"", nargs=""*"", type=str, metavar=""byte"",.                        help=""help2"").    parser.add_argument(""-e"", ""--exact"", action=""store_true"",.                        help=""help3"").    # parse command line arguments and check for errors.    args = parser.parse_args().    error_check_arguments(args)..    [...].    variable1, variable2 = none, none.    if not args.input:.        variable1, variable2 = parse_cards(args.variable1, args.variable2).    return variable1, variable2, variable3...so what code should i put in file4.py to be able to run this script as if i was running it from the command line?"
