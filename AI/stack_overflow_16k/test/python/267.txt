"using isinstance in modules i've observed a weird phenomena involving object ""auditresult"" that i'm hoping someone can help me understand.  i have a module set up like this:...model.   __init__.py.   common.py  (auditresult is imported from audit.py into here).   audit.py   (where auditresult lives).   objects.py.   test.py...in test.py, if i imported the auditresult object using from common import auditresult, the following results occur:..&gt;&gt;&gt; isinstance(audit_obj, auditresult).false.&gt;&gt;&gt; type(audit_obj).&lt;class 'model.audit.auditresult'&gt;.&gt;&gt;&gt; auditresult.&lt;class 'audit.auditresult'&gt;...however, if i use from model.common import auditresult, the code functions as expected...&gt;&gt;&gt; isinstance(audit_obj, auditresult).true.&gt;&gt;&gt; type(audit_obj).&lt;class 'model.audit.auditresult'&gt;.&gt;&gt;&gt; auditresult.&lt;class 'model.audit.auditresult'&gt;"
