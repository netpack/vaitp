"differences in code when accessing a nested dictionary def extract_full_name(names):..    firstname = [].    lastname = [].    for z in range(0,len(names)):.        firstname.append(names[z]['first']).    for k in range(0,len(names)):.        lastname.append(names[k]['last'])..    return list(zip(firstname,lastname))...vs ..def extract_full_name(l):.     return list(map(lambda val: ""{} {}"".format(val['first'], val['last']), l))...so i am doing this course on udemy and it requires me to do something like this:..names = [{'first': 'elie', 'last': 'schoppik'}, {'first': 'colt', 'last': 'steele'}].extract_full_name(names) # ['elie schoppik', 'colt steele']...what is the difference in my code and colt's solution"
