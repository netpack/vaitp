"how to always call a class method, forcefully, on return in blank i have a reportentry class..class reportentry(object):.  def __init__(self):.      # many attributes defined here..  ... # lot many setattr/getattr here.  def validate(self):.      # lot of validation code in here.      return self...multiple other classes maintain has-a relation with reportentry class..class a(object):.  def test1(self):.    t1 = reportentry().    # assign the attribute values to t1.    return t1.validate()..  def test2(self):.    t2 = reportentry().    # assign the attribute values to t2.    return t2.validate()...and there are multiple such classes as a...i need to enforce each reportentry class instance to call validate() on return or maybe just before return...basically, no instance of reportentry should escape validation since the final report generation will fail if something is missing...how may i achieve that ?"
