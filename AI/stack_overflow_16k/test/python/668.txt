"achieve sington with cyclic imports in blank i'm new in blank..i have two py files like this:.a.py..class lll(object):.    pass..ak=lll().print(ak)..def f1():.    from b import tt..    print(""hello"")..if __name__==""__main__"":.    f1()...and b.py..from a import ak.def tt():.    print(""sss"")..print(tt)...when i run a.py,i get the console below:..&lt;__main__.lll object at 0x0000000000b69be0&gt;.&lt;a.lll object at 0x0000000001461668&gt;.&lt;function tt at 0x000000000124ad90&gt;.hello...my question is why ak create twice?in b.py,i want to get the ak created in a.py,not create a new ak,it looks like import b will run all a's code,how can i fix it?"
