"capturing *all* terminal output of a program called from blank i have a program which can be execute as.../install.sh...this install bunch of stuff and has quite a lot of activity happening on screen....now, i am trying to execute it via..p = subprocess.popen(executable, stdout=subprocess.pipe, stderr=subprocess.pipe).out, err = p.communicate()...with the hope that all the activity happening on the screen is captured in out (or err). however, content is printed directly to the terminal while the process is running, and not captured into out or err, which are both empty after the process is run...what could be happening here? how can this content be captured?"
