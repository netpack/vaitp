"typeerror: unsupported operand type(s) for +: 'nonetype' and 'str' +host i am very new to programming and i found this program and apply it but i found  these error (i put error at the end of program), .    import requests.    import telnetlib.    import time.    import sys..import numpy as np.import matplotlib.import matplotlib.patches as mpatches.import matplotlib.pyplot as plt.import matplotlib.animation as animation.import matplotlib.ticker as plticker..username = 'ubnt'.password = 'ubnt1'.host = ""192.168.1.220"".port = 18888.timeout = 10.frame_speed = 1..login_uri = 'http://' + host + ':80/login.cgi'.#login_uri = 'https://' + host + ':443/login.cgi'..def usage():. print (""usage:+ sys.argv[0] +  &lt;live|replay filename&gt;"").print ("""").print (""options:"").print (""tlive              t=tprocess live data from device "") + host.print (""treplay filename   t=treplay filename"").print (""trecord filename   t=tmake movie of filename"").exit(128)..if len(sys.argv) == 2 and sys.argv[1] == 'live':.action='live'.filename = none.elif len(sys.argv) == 3 and sys.argv[1] == 'replay':.action='replay'..ocessing.frame_speed = 50.elif len(sys.argv) == 3 and sys.argv[1] == 'record':.action='record'.filename = sys.argv[2] # stored data processing.frame_speed = 50.else:.usage()....def parse_get_frame_resp(line):._,vals_raw = line.split(':').vals = map(int, vals_raw.split(',')).frame_nr = vals.pop(0).return(frame_nr, vals)..#todo: make me dynamic parse from 'scan range' response.scan_range_begin = 2402000000.scan_range_end = 2497000000..if not filename:.print (""enabling ubiquiti airview at %s:%s@%s..."") %(username, password, host).s = requests.session().s.get(login_uri, verify=false).r = s.post(login_uri,.    {""username"": username, ""password"": password, ""uri"": ""airview.cgi?   start=1""},.    verify=false). if 'invalid credentials.' in r.text:.    print (""# crit: username/password invalid!"").    sys.exit(1).print (""waiting for device to enter airview modus..."").# allow device a few moments to settle.time.sleep(timeout)..print (""start scanning..."").tn = telnetlib.telnet(host, port, timeout=timeout).#tn.set_debuglevel(99)..# storage on unique files.outfile = 'output-%s.dat' % int(time.time()).print (""storing output at '%s'"") % outfile.fh = open(outfile, 'a').def writeline(cmd):.    """""" write line to device"""""".    ts = time.time().    tn.write(cmd).    print (cmd) .    fh.write(""%s001%s"" % (ts, cmd)).    return ts...def getline():.    """"""read line from device"""""".    line = tn.read_until(""n"").    print (line).    fh.write(""%s001%s"" % (time.time(), line)).    return line..# commands needs to have a trailing space if no arguments specified.writeline(""connect: n"").getline()..#writeline(""request range: 2402000000,2407000000n"") #  5 mhz.#writeline(""request range: 2402000000,2412000000n"") # 10 mhz.#writeline(""request range: 2402000000,2417000000n"") # 15 mhz.#writeline(""request range: 2402000000,2422000000n"") # 20 mhz.#writeline(""request range: 2402000000,2477000000n"") # (ch 1-11 - us   allocation).#writeline(""request range: 2402000000,2487000000n"") # (ch 1-13 - uk allocation).writeline(""request range: 2402000000,2497000000n"") # (ch 1-14).getline()..writeline(""start scan: n"").getline().print (""waiting for scan to start..."").time.sleep(2)..def get_frame(frame):.    """""" get frame from device airview """""".    # todo: receiving frames in order, sometimes yield of empty responses.              already flush out maybe?.    #writeline(""get frame: %sn"" % frame).    ts = writeline(""get frame: n"").    line = getline().    return((ts,) + parse_get_frame_resp(line)).else:.# no need for logic since we are processing stored data.sh = open(filename, 'r').def get_frame(frame):.    """""" perform replay data processing """""".    while true:.        line = sh.readline().        if not line:.            return(none, none, none).        ts_raw, a = line.split('001', 1).        ts = float(ts_raw).        cmd, ret = a.split(':', 1).        if cmd == 'frame':.            return((ts,) + parse_get_frame_resp(a))... # get innitial frame number and bins sizes._, frame_nr, vals = get_frame(none).bin_size = len(vals).bin_sample_khz = float(scan_range_end - scan_range_begin) / 1000 / bin_size.print (""bin size: %s"") % bin_size...# start making picture.fig, ax = plt.subplots(figsize=(20,11)).fig.canvas.set_window_title('ubnt airview client').ax.set_ylabel('100ms units elapsed').ax.set_xlabel('frequency (sampled with bins of %s khz)' % bin_sample_khz)..# channel center frequencies.a =    [2402,2412,2417,2422,2427,2432,2437,2442,2447,2452,2457,2462,2467,2472,2484,2497].channels = (np.array(a,dtype='float32') - 2402) / (bin_sample_khz / 1000).ax.get_xaxis().set_ticks(channels).plt.xticks(rotation=90)..# plot channel description.for i in range(1,15):.width_20mhz = 20000.0 / bin_sample_khz.if i in [1,6,11,14]:.    pac = mpatches.arc([channels[i], 0], width_20mhz, 300, .        theta2=180, linestyle='solid', linewidth=2, color='black').else:.    pac = mpatches.arc([channels[i], 0], width_20mhz, 300, .        theta2=180, linestyle='dashed', linewidth=2, color='black').ax.add_patch(pac)...ax.get_xaxis().set_major_formatter(.plticker.funcformatter(lambda x, p: format(int((x * bin_sample_khz / 1000) +  2402), ',')))..plt.grid(linewidth=2,linestyle='solid',color='black').plt.tight_layout()..bbox = fig.get_window_extent().transformed(fig.dpi_scale_trans.inverted()).width, height = bbox.width*fig.dpi, bbox.height*fig.dpi.print (width), (height)..# initial data and history of amount of pixels of the screen, since it is.# important that all lines are draw on the screen..bbox = fig.get_window_extent().transformed(fig.dpi_scale_trans.inverted()).width, height = bbox.width*fig.dpi, bbox.height*fig.dpi..matrix = np.empty([int(height),bin_size]) * np.nan.pcm = ax.pcolorfast(matrix, vmin=-122, vmax=-30)..if action == 'record':.# set up formatting for the movie files.writer = animation.writers['ffmpeg'].writer = writer(fps=15, metadata=dict(artist='anywi ubnt airviewer'),    bitrate=1800)..#.# matplotlib animation.#.def update(data):.global frame_nr, matrix..# fast forwarding in time.for i in range(frame_speed):..    frame_nr_next = -1..    # the same frame (duplicated), we are too fast.    while frame_nr_next &lt;= frame_nr:.        ts, frame_nr_next, row = get_frame(frame_nr + 1)..    frame_nr = frame_nr_next..    # we are on the end of the file.    if not ts and not frame_nr and not row:.        return..    #matrix = np.vstack([row, pcm.get_array()[:-1]]).    matrix = np.vstack([row, matrix[:-1]])..pcm.set_array(matrix).ax.set_title('frame %s at %s' % (frame_nr,time.asctime(time.localtime(ts))))     .#fig.canvas.draw()...ani = animation.funcanimation(fig, update, interval=100)..# dual display and recording data does not seems to work, use a screencast.# program like gtk-recordmydesktop for that matter.if action == 'record':.ani.save('live.mp4' if not filename else filename.rsplit('.',1)[0] + '.mp4',  writer=writer).else:.plt.show()..#.# takes some time (10 seconds) for device to return to an active state.#...error output.usage:+ sys.argv[0] +  &lt;live|replay filename&gt;..options:.live                =   process live data from device .traceback (most recent call last):.file ""c:usersabdulhusseindesktoppy-ubnt-airviewer-masterairviewer.py"",                                            line 76, in &lt;module&gt;.usage().file ""c:usersabdulhusseindesktoppy-ubnt-airviewer-masterairviewer.py"",    line 58, in usage.print (""tlive              t=tprocess live data from device "") + host.typeerror: unsupported operand type(s) for +: 'nonetype' and 'str'...any one pls can help me????"
