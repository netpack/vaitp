"questions about ""yield from"" and ""next"" behaviour so i am making a generator from a list but would like to call next on it, which should just return the next item in the list, however it returns the same object, i.e. the whole piece of code is run again in stead of just returning the yield part. the example below shows the expected behaviour when looping through the list, but then the next returns 1 twice, whereas i would like the second call of next to return 2...class demo:.    @property.    def mygen(self):.        a = [1,2,3,4,5].        b = [6,7,8,9,10].        yield from a.        yield from b..if __name__=='__main__':.    demo1 = demo().    print([_ for _ in demo1.mygen]).    demo2 = demo().    print(next(demo2.mygen)).    print(next(demo2.mygen))...there's a reason i am turning a list into a generator as it is the response from an api call and would like to dynamically return the next item in the list and make the api call if it comes to the end of that list."
