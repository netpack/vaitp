"program continues to ask for input despite input being given one (mars rover blank) in the program below you are to operate a mars rover. you must first input ready to start the rover. then enter moveto and a set of coordinates, finally type, n,s,e,w to move the rover in the designated spot and return a print as shown below. however upon entering one of those four letter, the program does nothing it simply asks for another input, any ideas?..print (""************************************"").print (""welcome to the mars rover control hq"").print (""print ""ready"" as the first command when prompted"").print (""print dig or moveto (with coordinates) afterwards"").print (""you can also print, n, s, e, or w, to move in those directions"").print (""************************************"")..import random  # allows computer to grab random commands, for the objects to dig.x = 0  # this is the starting point of the rover.y = 0.print(""the mars rover is currently at position"", x, y).tardis = ""no""  # at orgin rover it at rest and cannot move(this variable will change if command is ready)otherwise loop does not work!.mars = 1  # this acts like a while true, as long as mars is 1 it will create an infinite loop.while mars == 1:  # starts the program.    commandt = input(""please enter your command for the rover:"")  # this asks for the a string for commandt.    space0 = int(commandt.find("" ""))  # find the blanks spaces between direction and units.    lengthc = len(commandt)  # this will find the length of the command..    compass = commandt[0:space0]  # find first character to the space between direction and number..    commandt2 = commandt[7:lengthc]  # moveto takes up 7 characters and will count up to the total length of string.    space1 = int(commandt2.find("" ""))  # this will find the blank space in the moveto command..    if commandt == ""ready"":   # this will ready rover.        print (""rover is awake and ready for use"").        tardis = ""ready"".    # else:.        # print""please ready the rover!""  # must ready rover to continue into other loop, error message will show..    if tardis == (""ready""):.        if commandt == ""dig"":  # if command was dig, computer will randomly choose between the 5 choices.            objects = random.choice(['david bowie life on mars record', 'a dalorean', 'a hover board', 'star man', 'water']).            print (""the rover found %s!"" % objects)..        if commandt[0:6] == ""moveto"":   # if command is in moveto format.            x = (commandt2[0:space1])   # will convert orginal coordinates to values.            y = (commandt2[space1:lengthc]).            print(""the mars rover has moved to position"", x, y)..# this is for the compass directions if chosen.......        if compass[0:6] == ""n"":   # if chosen to move north.            value = int(commandt[space0:lengthc]).            y += value   # moves up positive y axis.            print(""the mars rover has moved to position"", x, y).        if compass[0:6] == ""s"":   # if chosen to move south.            value = int(commandt[space0:lengthc]).            y -= value   # moves down negative y axis.            print(""the mars rover has moved to position"", x, y).        if compass[0:6] == ""e"":   # if chosen to move east.            value = int(commandt[space0:lengthc]).            x += value   # moves up positive x axis.            print(""the mars rover has moved to position"", x, y).        if compass[0:6] == ""w"":   # if chosen to move west.            movement = int(commandt[space0:lengthc]).            x -= movement   # moves down negative x axis.            print(""the mars rover has moved to position"", x, y)..        if commandt == ""return"":  # if command is return.            x = 0  # convert coordinates back to origin.            y = 0.            print(""the mars rover has moved to position"", x, y).        if commandt == ""rest"":   # if command is rest.            mars = 2   # stops the loop because mars=1 is no longer true!.            print (""rover is done for the day."").    else:.        print(""error, cannot complete command"")  # these error messages will show if rover is not ready.        print(""please ready the rover to continue"")"
