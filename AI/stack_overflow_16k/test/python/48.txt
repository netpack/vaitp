"blank: changing one object's data changes the other i apologize ahead of time if my explanation is not coherent enough. i am new to blank and coding. i'm currently trying to create a pokemon program that will allow 2 users to battle each other. movelist is a global list that contains all the possible moves in the game..x - is a file the stores which indexes correspond to which pokemon's moves. pokedata.loadmoves loads a preexisting move array inside each pokemon with 4 move objects. when i first add arcanine's 4 moves, it is fine. however when i add eevee's moves, it rewrites over arcanine's moves. i've spent about 40 minutes already trying to remedy this to no avail...separate objects:..p1 = none.p2 = none..loadgame()..p1 = inputpokemon('player1').p2 = inputpokemon('player2')...function:..for x in file.readlines():.    x = x.split(' ').    if(x[0].strip().lower() == string):..        i =int(x[1])-1.        j =int(x[2])-1.        k =int(x[3])-1.        l =int(x[4])-1..        if(second == true):.            print(""arcanine's moves before loading eevee"").            for x in range(4):.                print(p1.move[x].name)..        pokedata.loadmoves(movelist[i],movelist[j],movelist[k],movelist[l]).        print(""load %s's moves "" %x)..        if(second == true):.            print(""arcanine's moves after loading eevee"").            for x in range(4):.                print(p1.move[x].name)...loadmoves:..move=['','','',''].def loadmoves(self, move1, move2, move3, move4):.    self.move[0] = move1.    self.move[1] = move2.    self.move[2] = move3.    self.move[3] = move4...output:..player2, please choose your pokemon: eevee.loading moves for eevee.arcanine's moves before loading eevee.['takedown'].['growl'].['flamethrower'].['confuseray'].load 3's moves .arcanine's moves after loading eevee.['watergun'].['doubleteam'].['shockwave'].['tackle']"
