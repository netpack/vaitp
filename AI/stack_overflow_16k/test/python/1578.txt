"apply a permutation to a list with a different length multiple times i'm fairly new to programming so forgive me if there's an obvious answer here...i essentially want to apply a permutation to a string. if the string isn't the same length as the permutation, i want to add a 'z' to make the length a multiple of the permutation's length. the problem is if say the permutation is length 4 and the string is length 8, how do i get it to apply the permutation to the second half of the string?..here's what i have so far..def encr(k, m):.    if len(m)%len(k)!=0:.        for i in range((int(len(m)%len(k)))):.            m+=str('z').        return apply(m, k)...and heres the apply function called on in the previous function..def apply(l,p):.    a = list(range(len(l))).    for i in range(len(l)):  a[i] = l[p[i]].    return a...i want to apply the permutation to a string in order to do a simple for of encryption. it would just switch the index of the letters in the string. but if the string is longer than the permutation how do i get the permutation to apply more than once to the same string. for example: permutation = [2,3,0,1,4] and the string would be ""hello"" it would make it ""llheo"" but if the string is ""hello_world"", how do i get the permutation to start over again after the 4th index? i apologize if i'm confusing, i just don't know how to word it."
