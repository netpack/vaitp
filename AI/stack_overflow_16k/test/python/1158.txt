"raise os.walk when file not found i want the the script to stop running if a ""key"" was not found in a file..if my directory looks like this:..dir.   -&gt;file.xml.   -&gt;file2.xml.   -&gt;yyy.m.   -&gt;ignoretxt.txt.   -&gt;ignorec.c.   -&gt;ignoreanything.anything.   -&gt;dir2 -&gt; file3.xml, xxx.m, yyy.m...lets say i have two keys in my json file: ""hello"" and ""world"".if the key ""hello"" was found in file2.xml and xxx.m it should print it out and continue with the next key. if ""world"" was not found it should give an exception. ..the first issue is that my script looks through other files (such as .txt, .c etc). i want to ignore them but i don't want to use os.remove since it will remove the files and i need them. are there any other alternative? because due to this my ""raise exception"" will give error since ""hello"" was not found in .txt file (which i dont care about)...the second issue is that even though ""hello"" was found it will give me an error since it could not find anything in file.xml or file3.xml, ignoretxt.txt, ignorec.txt etc...jdata = json.load(open(json_path)).path = findallfiles(directory)..if os.path.isdir(path):.    for root, dirs, files in os.walk(path):.        for key, value in jdata.iteritems():.            for name in files:.                with open(os.path.join(root, name)) as fle:.                    content = fle.read().                if name.endswith('.txt') and re.search(wordboundry(key), content):.                    print ""name"", key, ""was found in"", name, ""n"".                    writetofile(value, content, name, key).               else:.                   print ""name"", key, ""was not found in"", name.    else:.        raise exception(key, ""was not found in"", root) #this gives me error even though ""hello"" can be found in file2.xml. ....def findname(content, key, name, value):.    if name.endswith('.xml') and re.search(wordboundry(key), content):.        print ""name"", key, ""was found in"", name, ""n"".        overridexml(key, value, name).    elifif name.endswith('.m') and re.search(wordboundry(key), content):.        print ""name"", key, ""was found in"", name, ""n"".        overridem(key, value, name)"
