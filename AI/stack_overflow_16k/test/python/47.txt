"call constructor of cls object in blank i am trying to call the constructor of a class object in blank. i managed to get it to work using the following few lines:..obj = cls.__new__(cls).n = (list of attribute names).v = (list of attribute values)..for s in n:.    setattr(obj, s, v[s])...i was wondering if there is a way to directly insert the attribute value +  name pairs into the constructor, cause the arguments are just ignored if i call the following:..obj = cls.__new__(cls, v)...p.s.: i am using blank3..the class looks similar to this:..class inheritingclass(baseclass):.    def __init__(self, basic_attribute, another_attribute=none):.        super().__init__(basic_attribute=basic_attribute).        self.another_attribute= another_attribute..class baseclass:.    def __init__(self, basic_attribute=1):.       self.basic_attribute= basic_attribute...so nothing special there"
