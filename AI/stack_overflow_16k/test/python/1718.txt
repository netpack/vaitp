"is there a more efficient way to count how many vowels in a string? def processstrings(userphrase):.    """""" this function will accept the phrase as string and will count every .        instance of vowel then return a dictionary with key:values of each .        vowel and amount of occurrences in string..    """"""..    vowelcount = {i:userphrase.count(i) for i in 'aeiou'}..    return (vowelcount)...i am new to stackoverflow and programming. i wrote this function as part of small program for class and am now curious to know what the most efficient solution would be. we were told to demonstrate a strong understanding of applicable concepts in developing an efficient solution, as far as i can tell this has to pretty close since it uses a dictionary and the count() is supposed to be good. i am wondering if i missed something like in that it has to iterate over the entire phrase 5 times to get the values but i can't figure out if there is a better solution that would mean less processing time or memory usage say if i used the function for a much larger string and searched more than just vowels or something."
