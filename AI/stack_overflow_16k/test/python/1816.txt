"blank callbacks into the main module (functions and variables) i am trying to have a module that provides a framework of sorts to short declarative one-file scripts that i write.  in the short scripts, i would like to define a number of variables and functions that are accessed or called back by the framework module...i am stuck ... i have tried two approaches, and i am not crazy about either one.  is there a better way?..first approach:..framework module:..import __main__.def test():.    print __main__.var.    print __main__.func()...script:..import framework.var=""variable"".def func():.    print ""function"".framework.test()...i like this approach and it works, but eclipse gives me an 'undefined variable from import: var' error on any imported variable or function from main.  obviously, this is not correct as it works, but it clutters up eclipse with many false errors...second approach:..framework module:..def test(glob):.    print glob['var'].    print glob['func']()...script:..import framework.var=""variable"".def func():.    print ""function"".framework.test(globals())...this seems to work and does not give me errors, but i don't like the dictionary type notation used to call variables and functions ... especially for functions: func'funcname'...is there a better way to implement this that results in clean code?  can i pass in a module name (ie main) as an argument to a function?  can eclipse errors on main for the first approach be turned off?"
