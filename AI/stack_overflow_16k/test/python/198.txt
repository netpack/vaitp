"is it ok to not define class defaults? sparing the details of context and why i care.....is it okay to do this:..class isthisok(object):.    def __init__( self, **kwargs ):.        for k in kwargs:.            setattr( self, k, kwargs[k] ).obj = isthisok( apples=2 , oranges=2 )...because i've always approached it as:..class optionb(object):.    apples = none.    oranges = none.    """"""class defaults"""""".    def __init__( self, **kwargs ):.        for k in kwargs:.            setattr(self,k,kwargs[k]).b = optionb( apples=2 , oranges=2 )...=====..edit :..i originally had this in the above , which is something i shouldn't have.....class optiona(object):.    """"""set self.k but with class defaults"""""".    apples = none.    oranges = none.    def __init__( self, **kwargs ):.        for k in kwargs:.            self.k = kwargs[k].a = optiona( apples=2 , oranges=2 )...this all came from me trying to optimize some code. ..i also noted that::..    for k in kwargs:.        setattr( self, k, kwargs[k] )...is a bit faster than..    for k,v in kwargs.iteritems():.        setattr( self, k, v )"
