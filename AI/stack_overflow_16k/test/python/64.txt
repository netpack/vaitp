"blank hangman: trouble assigning game word using returned value from function in this case, i'm selecting a random word from the word_list to use as the game_word. the problem is, as this value is returned in the local scope of the get_random_word() function, it's not being saved after it's called in the main() function. ..i've come across advice saying i need to pass in some sort of argument (which the code posted below currently does not do). i'm not quite sure how to implement this. ..i've been told expicitly that i'm not to use ""global"" in the get_random_word() function...import random..word_list = ['apple', 'berry', 'cherry', 'arkansas', 'mississippi', 'hawaii', 'serendipity', 'insomnia']..def get_random_word():..    random_word = random.choice(word_list).    return random_word..def replace_blanks_with_correct_letter(current_output, guess):..    for (index, letter) in enumerate(game_word):.        if letter == guess:.            current_output[index] = letter.    print ''.join(current_output)...def main():..    # herein lies the problem....    game_word = get_random_word()..    current_output = len(game_word) * ['_']..    while true:..        replace_blanks_with_correct_letter(current_output, have_player_guess_letter())...if __name__ == ""__main__"":.    main()"
