"elegant way to unpack limited dict values into local variables in blank i'm looking for an elegant way to extract some values from a blank dict into local values...something equivalent to this, but cleaner for a longer list of values, and for longer key/variable names:..d = { 'foo': 1, 'bar': 2, 'extra': 3 }.foo, bar = d['foo'], d['bar']...i was originally hoping for something like the following:..foo, bar = d.get_tuple('foo', 'bar')...i can easily write a function which isn't bad:..def get_selected_values(d, *args):.    return [d[arg] for arg in args]..foo, bar = get_selected_values(d, 'foo', 'bar')...but i keep having the sneaking suspicion that there is some other builtin way."
