"strings and the and operator: best practice, differences with + for one of my sites, i need to check if several class attributes are defined and not empty. so far, i've happily used if self.attr:, which in my mind is the shorthand for if self.attr is not none and self.attr is not '':, or whatever the undefined value of the attribute is...this works fine, but yields to surprising behavior when checking multiple string attributes. '' and '' is not false (as i expected), but ''. ..this begs the question: are there other types for which the and operator does not force a typecast to bool? .i can't come up with an example where this difference in behavior would cause an actual different outcome for the if-clause (after all, '' still evaluates to false), but am left with the gut feeling that there's edge cases that could be a trap...lastly, i'd be keen to know if anybody knows why it was implemented that way? i thought the zen of blank encourages one way and one way only, and the + operator already seems to bethe intuitive way for string concatenation."
