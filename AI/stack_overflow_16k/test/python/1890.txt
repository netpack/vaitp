"blank: how can i improve my snippet to parse elements in order i wish to find all my elements as i wish to find with in a html block and then sort it up so all every tag has it position in my list ex: ('h3', 'a', 'img')..i wonder if there are any better way to solve my problem in a more beautiful way and easier to extend(add more tags)...ex: so i could send this list to an function with out thinking twice about it...here are the result after i run my snippet:..[.('text 1', '/url1', '/img1.png'),.('text 2', '/url2', '/img3.png'),.('text 3', '/url3', '/img3.png'),.]...snippet:..def parse_element_tag(el):.    #&lt;class 'lxml.html.htmlelement'&gt;.    dict = {'a': (el.get('href'), 1), 'img': (el.get('src'), 2), 'h3': (el.text, 0)}.    return dict[el.tag]..requests_cache.configure('test', expire_after=900).r = readurl('http://www.svtplay.se/program').l = lxml.html.fromstring(r.text).lst = [].for el in l.cssselect('div ul.svtgridblock li div a'):.    #lst.append(sorted([parse_element_tag(i) for i in el.iter()], key=lambda val: val[1])).    lst.append(.               tuple([i[0] for i in sorted(.                      [parse_element_tag(i) for i in el.iter() if i.tag in ('a', 'img', 'h3')], key=lambda val: val[1].                      )].               ))"
