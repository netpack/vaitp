"amalgamation of submodules: how can i make this second module visible to the blank interpreters? this is the directory layout..❯ tree...├── src1.│   └── some.│       ├── __init__.py.│       ├── __init__.pyc.│       └── fish.│           ├── __init__.py.│           └── __init__.pyc.└── src2.    └── some.        ├── __init__.py.        ├── __init__.pyc.        └── bird.            ├── __init__.py.            └── __init__.pyc...i want to be able to import both some.fish and some.bird module...if i set the env variable blankpath this way:..❯ export blankpath=./src1:./src2.❯ blank.blank 2.7.9 (default, dec 30 2014, 18:28:09) .[gcc 4.2.1 compatible apple llvm 6.0 (clang-600.0.56)] on darwin.type ""help"", ""copyright"", ""credits"" or ""license"" for more information..&gt;&gt;&gt; import some.fish.&gt;&gt;&gt; import some.bird.traceback (most recent call last):.  file ""&lt;stdin&gt;"", line 1, in &lt;module&gt;.importerror: no module named bird.&gt;&gt;&gt; ...it is possible at all to make the bird module appear under some?..the solutions i want to avoid:..1) change the directory structure..2) change the name of the parent package some..in the other word, can i amalgamate two submodules under the same module name without putting the files under the same directory structure?"
