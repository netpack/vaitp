"blank - point class not getting correct output so i have a point class and a line class that both have a scale method. ..class point:..    def __init__(self, x, y):.        if not isinstance(x, float):.            raise error(""parameter ""x"" illegal."").        self.x = x.        if not isinstance(y, float):.            raise error (""parameter ""y"" illegal."").        self.y = y..    def scale(self, f):.        if not isinstance(f, float):.            raise error(""parameter ""f"" illegal."").        self.x = f * self.x.        self.y = f * self.y..    def __str__(self):.        return '%d %d' % (int(round(self.x)), int(round(self.y)))..class line:..    def __init__(self, point0, point1):.        self.point0 = point0.        self.point1 = point1..    def scale(self, factor):.        if not isinstance(factor, float):.            raise error(""parameter ""factor"" illegal."").        self.point0.scale(factor).        self.point1.scale(factor)..    def __str__(self):.        return ""%s %s"" % (self.point0, self.point1)...so one of the tests i do on this code is to check for a shallow copy which i do in this test code. ..p0.scale(2.0).p1.scale(2.0).print line...the problem is the print line gives me 0 2 4 6 and it should give me 0 1 2 3. so why is it printing multiples of 2 instead? the scale method is supposed to return the scaled values and for all the other test cases it prints the expected values however just with this test code it prints values i didn't expect. here's how the values of p0 and p1 are set up:..print '********** line'.print '*** constructor'.p0 = point(0.0, 1.0).p1 = point(2.0, 3.0).line = line(p0,p1).print line"
