"converting tuple to hex with unknown type the title is a little misleading. basically, i have a whole bunch of numbers in a huge list of with several different formats. i am passed the value and the type it is in, and expected to unpack them and convert them to hex-strings...my latest attempt is :..realval = '0x%08x' %  struct.unpack( evaltype, ( rawval ) )...where realval is supposed to be a hex number that is the real value of the number, and is used later in my code. evaltype is the code letter type of number rawval is, and rawval is the raw value ripped straight from a binary file. evaltype is recieved by looking in a dictionary. but when the value is a float, it breaks, however in the first 100k cases i run where the value is an integer it is fine...so i tried to convert the values into integers first by doing: ..realval = '0x%08x' %  int ( struct.unpack( evaltype, ( rawval ) ) )...but that doesn't work because apparently struct.unpack( evaltype, ( rawval ) ) is a touple, according to the error message...also, i found that converting from float to hex can be done by float.hex() so i add in an if statement and i try:..realval = struct.unpack( evaltype, ( rawval ) ).hex()...when i know the value is a float, it breaks and says that touples don't have a .hex() function...so now that i know i am working with a touple, i wonder why it works just fine when the value inside is an integer and why it crashes when it is a float, and how to fix it."
