"how to return the last element in stack i am doing my lab homework for blank and i am stuck on one of the questions. any help would be greatly appreciated. ..so the task is to find whether a string has balanced brackets or not. this means that each closing bracket should be in order...balanced bracket example:..(&lt;&gt;){}...unbalanced bracket example:..())..(&lt;)&gt;  (this one is mistmatched)..)(&lt;&gt;...the part i am stuck on is; how can i return the last element of the stack to compare?..def balanced_brackets(text):.    s = stack().    opening_bracket_list = [""("", ""["", ""{""].    closing_bracket_dict = {"")"":""("", ""]"" : ""["", ""}"" : ""{""}.    text_list = list(text)..    for element in text_list:.        if element in opening_bracket_list:.           s.push(element).        if element in closing_bracket_dict:.           if (last element of the stack) == closing_bracket_dict[element]:.              s.pop().        else:.            return false..if s == []:.    return true...as you can see, i split the text into a string and use a for loop. if its an opening bracket, i push it into the stack, if its a closing element, i check if the last element of the stack matches the value from the dictionary. if no it return false, if yes it returns true...any other suggestions to help the code would also be greatly appreciated. i use code runner for this and i can only use a stack and specifically a function (not a class) for this lab question"
