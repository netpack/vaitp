"how to test for the value of a ""global"" variable set by gpio interrupt downwards in the program i want to use a variable ""lifeflag"" that is set to 1 by gpio interrupt and is cleared in the block ""if pin==""1"" ....""..then, when pin becomes =2 from elsewhere in the program, the code ""if lifeflag==1"" shall be executed in the block ""if pin==""2""...the error is thrown ""lifeflag has not been assigned a value upon starting the program"". (the block if pin==""1"" has not necessarily been executed.)..tried to add ""lifeflag=0"" somewhere at the top of the program -including ""global"" or not- .i still get the error ""local variable lifeflag referenced before assignment...is there any solution to get this working?..import rpi.gpio as rpigpio.rpigpio.setmode(rpigpio.bcm).rpigpio.setup(6, rpigpio.in, pull_up_down=rpigpio.pud_up) ..def my_callback(channel): .    lifeflag=1.    print(""lifeflag="",lifeflag)..rpigpio.add_event_detect(6, rpigpio.falling, callback=my_callback, bouncetime=300)..........    if pin == ""1"" :.        print(pin).    lifeflag=0..........    if pin == ""2"" :.        ret,frame=cam.read().        cv2.imshow(""capturing"",frame).        print(""237="",pin).        rpigpio.output(20,rpigpio.high)..        if lifeflag == 1:.            print(""247="").            rpigpio.output(20,rpigpio.low).            pygame.display.update()"
