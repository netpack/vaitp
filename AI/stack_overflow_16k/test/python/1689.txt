"reverse string? i've been stuck on this task for hours and when i find blank code to reverse my stguess (which is a variable that stores the users input from a html file) i get error after error. some of which pretty much state it doesn't understand the reverse methods like stguess[::-1] stguess.reversed() it just doesn't work. also i have a stupid ""if != 1"" i was actually supposed to find a way to ensure only a-z and a- z could be entered but again i didn't know how to do that so i just entered in that so i knew i could pass the value and try to work on reversing it. ok well doing:..if guess != 1:.            print''.join(reversed(stguess)) //but this does not reverse the string?..import webapp2.import os.import jinja2.import logging.from google.appengine.api import users...jinja_environment = jinja2.environment(.    loader=jinja2.filesystemloader(os.path.join(os.path.dirname(__file__),'templates'))).extentions=['jinja2.ext.autoescape'].user = users.get_current_user()...class reverse(webapp2.requesthandler):.    def get(self):.    user = users.get_current_user().    logout_url = users.create_login_url(self.request.path).    template = jinja_environment.get_template('reverseword.html').    stguess = self.request.get('content').    msg = ''.    template_values = {.        'user': user.nickname(),.        'url_logout': logout_url,.        'url_logout_text': 'log out',.        'guess': stguess,.        'guess_text': msg,.        }.    if user:.        stguess = self.request.get('content').        self.response.write(template.render(template_values)).    else:.        self.redirect(users.create_login_url(self.request.url))..def reverse(text):.    if len(stguess) &lt;= 1:.        return stguess...class reversepost(webapp2.requesthandler):..def get(self):.    user = users.get_current_user().    logout_url = users.create_login_url(self.request.path).    template = jinja_environment.get_template('reverseword.html').    stguess = self.request.get('content').    msg = ''.    template_values = {.        'user': user.nickname(),.        'url_logout': logout_url,.        'url_logout_text': 'log out',.        'guess': stguess,.        'guess_text': msg,.        }.    if user:.        stguess = self.request.get('content').        self.response.write(template.render(template_values)).    else:.        self.redirect(users.create_login_url(self.request.url))..def post(self):.    logging.info(""post"").    logout_url = users.create_login_url(self.request.path).    template = jinja_environment.get_template('reverseword.html').    stguess = self.request.get('content')..    if user:.        logging.info(""user found"").        msg = ''.        guess = -1.        try:.            guess = str(stguess).            logging.info(""guess contains ""+str(guess)).        except:.            guess = -1.        **if guess != 1: //if guess is not equal to 1.            return stguess.reverse()** //return user input.reversed().        else:.            msg = 'didnt work'.        template_values = {.        'user': user.nickname(),.        'url_logout': logout_url,.        'url_logout_text': 'log out',.        'guess': guess,.        'guess_text': msg,.        }.        self.response.write(template.render(template_values)).    else:.        self.redirect(users.create_login_url(self.request.url))...app = webapp2.wsgiapplication([.    ('/', reverse).], debug=true)"
