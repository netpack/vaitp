"how to generate unique equal hash for equal dictionaries? eg:..&gt;&gt;&gt; a = {'req_params': {'app': '12345', 'format': 'json'}, 'url_params': {'namespace': 'foo', 'id': 'baar'}, 'url_id': 'rest'}.&gt;&gt;&gt; b = {'req_params': { 'format': 'json','app': '12345' }, 'url_params': { 'id': 'baar' ,'namespace':'foo' }, 'url_id': 'rest'.lower() }.&gt;&gt;&gt; a == b. true...what is a good hash function to generate equal hashes for both dicts ?.the dictionaries will.have basic datatypes like int,list,dict,and strings,no other objects...it would be great if the hash is space optimized, the target set is around 5 million objects, hence collision chances are pretty less...i am not sure if json.dumps or other serializations pay respect to equality instead of structure of the members in the dictionary..eg. basic hashing using str of dict does not work :..&gt;&gt;&gt; a = {'name':'jon','class':'nine'}.&gt;&gt;&gt; b = {'class':'nine'.lower(),'name':'jon'}.&gt;&gt;&gt; str(a).""{'name': 'jon', 'class': 'nine'}"".&gt;&gt;&gt; str(b).""{'class': 'nine', 'name': 'jon'}""...json.dumps does not work either :..&gt;&gt;&gt; import json,hashlib.&gt;&gt;&gt; a = {'name':'jon','class':'nine'}.&gt;&gt;&gt; b = {'class':'nine'.lower(),'name':'jon'}.&gt;&gt;&gt; a == b.true.&gt;&gt;&gt; ha = hashlib.sha256(json.dumps(a)).hexdigest().&gt;&gt;&gt; hb = hashlib.sha256(json.dumps(b)).hexdigest().&gt;&gt;&gt; ha.'545af862cc4d2dd1926fe0aa1e34ad5c3e8a319461941b33a47a4de9dbd7b5e3'.&gt;&gt;&gt; hb .'4c7d8dbbe1f180c7367426d631410a175d47fff329d2494d80a650dde7bed5cb'"
