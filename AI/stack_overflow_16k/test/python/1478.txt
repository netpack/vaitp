"down sampling a long vector based on average problem:..i have a long vector which i want to downsample. .by downsampling i mean take the long vector and shorten it by averaging parts of it...i'm using blank (2.7)..for example i have a mono audio file which was recorded at 44,100 hz..the recording is 10 seconds long, providing a vector of length 441,000...say i want to downsample it to 8khz. the output vector should be 80,000 long...of course, much of information will be lost by downsampling...suggested solution:..the sample rates ratio is: ..r = 44100 / 8000 = 5.5125...so, i would like to take every 5.5125 samples of the original vector and average it into a single number. ...is there a library function which does this (i.e. from numpy, statistics, etc. blank libraries)? .if not, can you recommend a neat way to run this? how can i average a non-integer index (5.5125)?.how can i ""break"" the original vector into smaller parts of 5.5125 size in a neat way?"
