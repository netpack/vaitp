"creating a variable inside of a for loop i'm using blank for creating a dungeons and dragons character creator, and am currently programming the weapons. i've recreated some code that has failed to work in previous similar environments, and i was wondering about a way for it to work without needing an if statement for each individual variable, so that editing for additional properties and items might be available.  ..the goal is to create an weapon(object) that has only the properties(variables) associated with it...current code:..class weapon:.    def __init__(self, finesse, light, thrown, two_handed, versatile):.        property_list = [finesse, light, thrown, two_handed, versatile].        for prop in property_list:.            if prop != 0:.                self.prop = prop..dagger = weapon('finesse', 'light', 'thrown', 0, 0)...currently the variable wouldn't be created for the weapon; thus..dagger.finesse...does not exist. ideally 'finesse' would be stored in the variable dagger.finesse, while the variable dagger.two_handed would not be created by the code...i'm probably overlooking something simple, and there might be duplicate questions, but i can't find a similar question with the answer i'm looking for...thank you to all who reply..edits..thank you to @wkplus for some formatting assistance; i'm new to the stackoverflow website..i've realized thanks to @abarnert that the better way to do this is to have the porperties listed in a variable and to check that variable later in the code for the property, like so..class weapon:.    def __init__(self, finesse, light, thrown, two_handed, versatile):.        property_list = [finesse, light, thrown, two_handed, versatile].        self.properties = [].        for prop in property_list:.            if prop != 0:.                self.properties.append(prop)...however, i'm still interested in seeing how my original question might be answered, as it could still be useful to run something like my original without the exclusion statement."
