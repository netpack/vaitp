"blank script to move files i'm writing a script to organize files in a folder. if the files are in the root folder the script works fine, but when i add a line to run check for files within subfolders it's not working as expected..#!/usr/bin/env blank3.import sys, glob, re, os, shutil.from termcolor import colored.#enconding: utf-8..dir_series = ""/home/user/series/series/"".dir_temp = ""/home/user/stuff/shared/temp/""..buscar = ""*[ss][0-9][0-9]*""..for root, dirs, files in os.walk(dir_temp):.    for series in files:.        if series.endswith(('.mp4', '.srt', '.avi', '.mkv')):.            arch_encontrados = len(series).            print(colored(""narchivos encontrados:"",'red', attrs=['bold'] ), colored(arch_encontrados, 'red', attrs=['bold'] ),'n').            print(*series, sep = ""n"")..            for serie in series:..                #extraer el nombre de la serie.                nombre = re.findall(r'.*[. ][ss]d', serie)[0].                nombre_final = re.sub(r'[. ][ss]d','',nombre).replace('.',' ').                #extraer el número de la temporada.                season = re.findall(r'[. ][ss]dd', serie)[0].                season_final_numero = re.sub(r'[. ][ss]','',season).                season_final = ('season ' + season_final_numero).                #armar el directorio final.                for series_path in os.listdir(dir_series): #lista el contenido de /home/user/series/series/.                 if nombre_final.lower() == series_path.lower(): #compara el listado con la salida del nombre de la serie sin importar mayúsculas y minúsculas.                    for season_path in os.listdir(dir_series + series_path):.                     if season_final == season_path: #compara el listado de seasons contra season_final que tiene mayuscula.                        path = os.path.join(dir_series, series_path, season_final).                        print(path).                     else:.                        path = os.path.join(dir_series, series_path, 'season ', season_final_numero).                 else:.                    print(colored(""nn*****************************************"",'cyan', attrs=['bold']))  .                    print(colored(""** directorio no encontrado, creándolo **"",'cyan', attrs=['bold']))  .                    print(colored(""*****************************************n"",'cyan', attrs=['bold']))  .                    path = os.path.join(dir_series, nombre_final, season_final).                    print(path).                    os.makedirs(path) ..                #mover el archivo.                print(colored('ncopiando','green'), serie, colored('a', 'green'), path + '/' + serie).                shutil.move(serie,path)....        else:.            print(colored('nno hay archivos para organizar.','green', attrs=['bold']))..            input(colored(""nnpresione enter para continuar ..."", attrs=['blink', 'bold']))...when i do this in the root it works fine..dir_series = ""/home/user/series/series/""..buscar = ""*[ss][0-9][0-9]*""..series = [s for s in glob.glob(buscar) if s.endswith(('.mp4', '.srt', '.avi', '.mkv'))].if series:.    arch_encontrados = len(series).    print(colored(""narchivos encontrados:"",'red', attrs=['bold'] ), colored(arch_encontrados, 'red', attrs=['bold'] ),'n').    print(*series, sep = ""n"")...any ideas? thanks../edit:.i believe i've fixed that. now i'm getting another error, when trying to do the last shutil.move it says..print(colored('ncopiando','green'), serie, colored('a', 'green'), path + '/' + serie).nameerror: name 'path' is not defined...new code:..#!/usr/bin/env blank3.import sys, glob, re, os, shutil.from termcolor import colored.#enconding: utf-8..dir_series = ""/home/user/series/series/"".dir_temp = ""/home/user/stuff/shared/temp/""..buscar = ""*[ss][0-9][0-9]*""..series = [os.path.join(root, s) for root, dirs, files in os.walk(dir_temp) for s in files if s.endswith(('.mp4', '.srt', '.avi', '.mkv'))].if series:.   arch_encontrados = len(series).   print(colored(""narchivos encontrados:"",'red', attrs=['bold'] ), colored(arch_encontrados, 'red', attrs=['bold'] ),'n').   for series_base in series:.      print(os.path.basename(series_base), sep = ""n"")..   for serie in series:..    #extraer el nombre de la serie.    nombre = re.findall(r'.*[. ][ss]d', os.path.basename(serie))[0].    nombre_final = re.sub(r'[. ][ss]d','',nombre).replace('.',' ').    #extraer el número de la temporada.    season = re.findall(r'[. ][ss]dd', serie)[0].    season_final_numero = re.sub(r'[. ][ss]','',season).    season_final = ('season ' + season_final_numero).    #armar el directorio final.    coincidencia = false.    for series_path in os.listdir(dir_series): #lista el contenido de /home/user/series/series/.     if nombre_final.lower() == series_path.lower(): #compara el listado con la salida del nombre de la serie sin importar mayúsculas y minúsculas.        coincidencia = true.        coincidencia_season = false.        for season_path in os.listdir(dir_series + series_path):.         if season_final == season_path: #compara el listado de seasons contra season_final que tiene mayuscula.          coincidencia_season = true.          path = os.path.join(dir_series, series_path, season_final).          print(path).         if not coincidencia_season:.          path = os.path.join(dir_series, series_path, 'season ' + season_final_numero).          print(path)..    if not coincidencia:.     print(colored(""nn*****************************************"",'cyan', attrs=['bold']))  .     print(colored(""** directorio no encontrado, creándolo **"",'cyan', attrs=['bold']))  .     print(colored(""*****************************************n"",'cyan', attrs=['bold']))  .     path = os.path.join(dir_series, nombre_final, season_final).     print(path).     os.makedirs(path) ..    #mover el archivo.    print(colored('ncopiando','green'), serie, colored('a', 'green'), path + '/' + serie).    shutil.move(serie,path)..else:.   print(colored('nno hay archivos para organizar.','green', attrs=['bold']))..   input(colored(""nnpresione enter para continuar ..."", attrs=['blink', 'bold']))"
