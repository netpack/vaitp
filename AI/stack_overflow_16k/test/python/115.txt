"blank help: write the definition of a class weatherforecast .  write the definition of a class weatherforecast that provides the.  following behavior (methods):..a method called set_skies that has one parameter, a string..a method called set_high that has one parameter, an int..a method called set_low that has one parameter, an int..a method called get_skies that has no parameters and that returns the value that was last used as an argument in set_skies ..a method called get_high that has no parameters and that returns the value that was last used as an argument in set_high ..a method called get_low that has no parameters and that returns the value that was last used as an argument in set_low ...  .  no constructor need be defined. be sure to define instance variables .  as needed by your ""get""/""set"" methods....class weatherforecast(object):.    def __init__ (self, skies, value):.        self.skies = """".        value = 0.    def get_skies():.        return self.set_skies.    def set_skies(self, value).        self.skies = value.    def get_high():.        return self.set_high.    def set_high(self, value):.        self.high = value.    def get_low():.        return self.set_low.    def set_low(self, value):.        self.low = value..class weatherforecast():..skies = ""clear"".high = 80.low = 20 ..def set_skies(self, skies).    self.skies = skies..def get_skies(self):.    return self.skies..def set_high(self, high):.    self.high = high..def get_high(self):.    return self.high..def set_low(self, value):.    self.low = value..def get_low(self):.    return self.low"
