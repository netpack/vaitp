"can this kind of code (if ... for if ... for ...) be both short and fast i have some problems with the following kind of code:..if a == b:.    forloop:.        code_1.        k = t    # t will be changed in code_1 and code_2.        code_2.elif a == c:.    forloop:.        code_1.        k = t + 1.        code_2...as you can see, both the code in two for loop is very similar (they might just have some difference in several characters. the above is just an example.) now i want to make it shorter because they are nearly the same...i know there is a way to make it shorter:..forloop:.    code_1.    if a == b:.        k = t.    elif a == c:.        k = t + 1 .    code_2...but the point is for every loop, it will need to do the comparison. i think it should be slower than the former one. and in fact, because a, b and c will not be affected by the for loop, it does not need to compare them every loop. could anybody tell me how to make it shorter without making it slower?..i am now using blank...sorry for not providing a specific code because i am just curious about this general situation. if this can be optimized only in some specific code, it will be great if you can point it out...and copying is not the way to solve it since they still have some difference (not just 1 maybe 25 positions)."
