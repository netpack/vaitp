"overflowerror: blank int too large to convert to c long i have this class:..class metricint(int):.    """"""int wrapper that adds only during the observation window."""""".    def __new__(cls, _, initial):.        return int.__new__(cls, initial)..    def __init__(self, sim, initial):.        int.__init__(initial).        self.sim = sim..    def __add__(self, val):.        if self.sim.in_observe_window():.            self = metricint(self.sim, super(metricint, self).__add__(int(val))).        return self...which basically overwrite the __add__ method in order to only to the addition if self.sim.in_observe_window() returns true...however, if the initial value is too big, i have :...  overflowerror: blank int too large to convert to c long....what is the correct way to do what i'm trying to do and also handle big numbers?"
