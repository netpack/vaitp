"how to find sum of elements in a list that satisfy sum(l)=k where l is a list and k is positive integer? given list l or sub-list of l and k positive integer as input, i need to define a recursive function (without using slicing) that its input is (l,k) and returns true if sum(l)=k and false if not...i tried the following code:..def sum_rec(l,k):.   import itertools.   n = len(l).   i=0.   if sum(l) == k:.        return true.   while len(l)&gt; 1:.       sub_l = list(itertools.combinations(l, n-i-1)).       i+=1.       for sub_lst in sub_l:.           s_rec(sub_lst,k).   else:.       return false...i'm getting ""valueerror: r must be non-negative"", also the the code didn't check all the sub-lists. is there any other way to do it? i'm using blank 3.6."
