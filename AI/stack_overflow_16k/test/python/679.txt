"grokking `__missing__` i encounter an example of 'class' when learning about str.format_map().(blank string format_map())..class coordinate(dict):.    def __missing__(self, key):.    return key...try arguments:..in [25]: coordinate(x='6').out[25]: {'x': '6'}..in [26]:  coordinate(x='6', y='7').out[26]: {'x': '6', 'y': '7'}...the hard part to understand is that neitherx=6 is a dict nor {'x': '6'} a key...in official documentation, it specifies:...  object.__missing__(self, key).  called by dict.__getitem__() to implement self[key] for dict subclasses when key is not in the dictionary....it's even more difficult than the previous sample code..there are also good answers here....  dictionary - blank 2 missing method - stack overflow.  .  hidden features of blank - stack overflow...the last answer obtain 258 upvotes which frustrates me very much because i get no idea about it..could it be understood with basic knowledge of blank?"
