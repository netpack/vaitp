"using logic to check if a variable is set sounds simple. i'm making a ""game"" for a blank tutorial (blank the hard way, ex36)...if the player selects ""ahead"" while the variable theobject is not set, they are prompted to first obtain an object, then opening() is meant to run. does not seem to work though. ..here is ahead()..# ahead.def ahead():.    if theobject not in globals():.        print ""you need an object before you can proceed."".        opening()..    else:.        print ""you walk for a while."".        print ""eventually you find a door to exit the labrynthe with a code above it"".        print ""you must translate the code using the code translator."".        print theobject.        if theobject == ""map"":.            print ""you gotta get the code."".            dead(""you walked too far to return. you die of exhaustion"").        elif theobject == ""code"":.            print ""you say out aloud the magic open words 'open sesame!'"".            complete().        else:.            print ""grab the code from the left room."".            opening()...i tested it out by calling ahead() from within the game, hoping to be given the message ""you need an object before you can proceed"" and then being presented with opening()...but i got this instead:..ex36.py:64: syntaxwarning: name 'theobject' is assigned to before global declaration.  global theobject.ex36.py:73: syntaxwarning: name 'theobject' is assigned to before global declaration.  global theobject.you're in a labrynthe..there's a door on your left..there's a door on your right..or you can go ahead..&gt; ...it appears that the message is not being printed and instead the syntax warning is being delivered...why does my code not just say ""you need an object before you can proceed"" as expected?"
