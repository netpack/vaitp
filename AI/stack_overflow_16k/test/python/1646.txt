"list comparison to return header value of different elements in blank this is related to element by element comparison in tuple to return set of sets - blank. ..since my nested loops were not efficient, i tried the suggestions given in that post.i used the below code,..seen=set().def pairs(lot):.    while lot:.        f=lot.pop(0).        for e in lot:.            se=frozenset([f, e]).            if se not in seen:.                seen.add(se).                yield se...m = [[list_attr[i] for i, t in enumerate(zip(*pair)) if t[0]!=t[1]] for pair in pairs(rows)]..skt = set(frozenset(temp) for temp in m)...but, i am stuck with memory error while using this approach, could someone help me in this...    skt = set(frozenset([list_attr[i] for i, t in enumerate(zip(*pair)) if t[0]!=t[1]]) for pair in pairs(rows)).  file ""c:*******rough.py"", line 139, in pairs.    seen.add(se).memoryerror"
