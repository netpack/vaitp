"blank object as dictionary value so i have the following code in which the value of a dictionary is an object, and the key to that object is an item in the object as such:..class myobject():.    def getname(self):.       return self.name..    def getvalue(self):.       return self.value..    def __init__(self,name, value):.       self.name = name.       self.value = value...dict = {}.object = myobject('foo', 2) //foo is the name, 2 is the value.dict[object.getname()] = object...however i cannot access the object like so:..&gt;&gt;&gt;print dict['foo'].getvalue().&lt;bound method object.getvalue of &lt;__main__.object instance at 0xfoobar000 &gt;&gt;...is there a way i can access the object in this manner?..edit:..i don't know why but my code finally decided to start working, so for anyone haveing similar issues the above code is valid and should work. my current version of blank is 2.7.3"
