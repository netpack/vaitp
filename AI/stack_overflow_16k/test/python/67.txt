"is there a clean way to concatenate arrays diagonally? weird problem with arrays that i'd like to simplify...i have a series of lists like:..list1 = 'abc'.list2 = 'def'.....listn = 'xyz'...and i need to zip them together like:..[['a', 0, 0, ..., 0],. ['b', 0, 0, ..., 0],. ['c', 0, 0, ..., 0],. [0, 'd', 0, ..., 0],. [0, 'e', 0, ..., 0],. [0, 'f', 0, ..., 0],. [...],. [0, 0, 0, ..., 'x'],. [0, 0, 0, ..., 'y'],. [0, 0, 0, ..., 'z']]...i have the additional constraint that numpy is not an option...is there a simple way of doing this possibly using itertools? (it doesn't need to be a list as it is later accessed like for r in row: for c in column: ..now i'm doing this:..array1 = [[0 for i in range(n)] for j in range(m)]..step_i = 0..for i, a in enumerate([lista, listb, ..., listn]):.    for b in a:.        array1[step_i][i] = b.        step_i += 1...but it's super ugly!"
