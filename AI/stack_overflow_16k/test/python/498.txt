"blank dict/list comprehension: why is it slower than for loop? consider that events here has about 48,000 dictionary objects:..keyed_events = { gid: [ r for r in events if r['gid'] == gid ] for gid in gidlist }...is about 4x slower than:..keyed_events = {}.for event in events:.    gid = event['gid'].    if gid not in keyed_events:.        keyed_events[gid] = [].    keyed_events[gid].append(event)...though the former looks more efficient. why is it slower? iterating through events each pass of the dict comprehension?"
