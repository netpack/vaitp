"blank looping and appending to a list i have a relatively small blank program, which (partly) looks something like the following:..puredata=classone().stuff=classtwo()..for i in range(0,len(chunks)):.    print ""this is in loop  i  = %d"" % i.    temp=chunks[i].    #do some stuff and get variable data...    for k in range(0,len(data)):.        print ""this is in loop  k  = %d"" % k.        if puredata.tb in str(temp[k])!=false:.            print ""this is valid data..continue calculations"".            puredata.pl,puredata.pt,puredata.pi=stuff.extracts(data[k]).            print ""length of pl puredata = %d"" % len(puredata.pl).            print ""length of pt puredata = %d"" % len(puredata.pt).            print ""length of pi puredata = %d"" % len(puredata.pi).        else:.            pass...the stuff.extracts() spits out 3 lists (something like self.a, self.b, self.c), which i then pass on to puredata.pl,puredata.pt,puredata.pi and classone simply invokes the lists pl,pt,pi. classtwo looks something along the lines of:..class classtwo():.    def __init__(self):.      self.a=[].      self.b=[].      self.c=[].# start calculations.    def extracts(self,soup):.        # do stat modelling and calculations.          return self.a, self.b,self.c...when i run the loop, i find that data seems to ""appended"" to puredata.pl,puredata.pt,puredata.pi although i have never used the .append() anywhere in the code. so, in the first loop the length of puredata.pl,puredata.pt,puredata.pi is say 10, and in the next loop it becomes 20, then 30..and so on....i am finding this very strange - and i am not able to make sense out of it. at some level, this is what i want (i mean the appending of data to a list), but i am baffled why it appends although i have not used .append()...sorry if this is a kn00b question - blank newbie here."
