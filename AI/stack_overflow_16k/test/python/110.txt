"calculating index of images with uneven sizes i am trying to calculate a sharpness index of several images that have uneven sizes inside a loop...i have made a function (gder) and i used it inside the loop, however i get an error message which i suspect is due to the uneven image size...import torch.import torchvision.transforms as transforms.import torchvision.datasets as datasets.import torchvision.models as models.import torch.nn as nn.import torch.optim as optim.import numpy as np.import os.from pil import image.import numpy as np..dirname='/home/data/images/'.nimages=[].for name in os.listdir(dirname):.    im=image.open(os.path.join(dirname,name)).    imarray=np.array(im).    nimages.append(imarray)..nimages=np.asarray(nimages)..import array.derv=[]..def gder(image):.    gy,gx=np.gradient(image).    gnorm = np.sqrt(gx**2 + gy**2).    return np.average(gnorm)..for i in range (0, 5):.    derv[i]=gder(nimages[i])...the last loop gives me the error.traceback (most recent call last):.  file """", line 2, in .indexerror: list assignment index out of range..i suspect the problem is that the images are a different size. does anyone know how to get around this problem or suggest another way to do this?"
