"how to format output of methods inside of a class in an efficient way? i want to write a class with much stuff inside. right now i want to have certain options for the output to show data in a disired format. im my example a function inside a class should format the output (a former dictionary) as a list. but i really can't figure out how to do it.....here my try:..class testclass(object):.    def __init__(self):.        pass..    def return_values_as_list(self,otherfunction):.        data_as_list=[ i for i in otherfunction.values()].        return data_as_list..    def get_data1_from_db(self):.        self.data= {'1_testkey':'1_testvalue',""1_testkey2"":""1_testvalue2""}..    def get_data2_from_db(self):.        self.data= {'2_testkey':'2_testvalue',""2_testkey2"":""2_testvalue2""}.        return self.data ...what i want to have at the end is something like ...  ['1_testvalue','1_testvalue2']...when  instantiation looks like the following:..testcase = testclass().testcase.get_data1_from_db.return_values_as_list()...any help with that? i thought also of hooks...but i dont really know how to do that..."
