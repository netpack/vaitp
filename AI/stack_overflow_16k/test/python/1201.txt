"inherited static methods used with static class variable return nameerror i have two classes:.. class baseservice(object):.     @staticmethod.     def say_name:.         return __class_variable__.. class subclassservice(baseservice):.      __class_variable__ = nola...when i call my static method like so:.. subclassservice.say_name()...i get a:.. nameerror: global name '__class_variable__' is not defined...using sqlalchemy in the past, i figured that i this was something i could do easily, but it turns out they use @declared_attr custom decorator among things to enable similar functionality...can i do this without resorting to sqlalchemy like code?"
