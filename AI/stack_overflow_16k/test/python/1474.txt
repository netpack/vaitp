"global variable in a decorator i have a decorator called profiled that keeps track of the number of times a function has been called. ..class profiled(object):.    def __init__(self,f):.        self.__count=0.        self.__f=f.        self.__name__=f.__name__.    def __call__(self,*args,**dargs):.        self.__count+=1.        return self.__f(*args,**dargs).    def count(self):.        return self.__count.    def reset(self):.        self.__count=0...how would i make the count variable global so that when i use profiled with variaous functions, the total count would be stored instead of just the count with a certain function."
