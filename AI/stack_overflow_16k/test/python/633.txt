"how to pass string into stdin of subprocess.popen i have the code where stdout works for popen command, now how do i modify so i can send something to its stdin...def runcmd(command, stdin_in):.    output = {""result"": [], ""error"": [], ""exit_status"": []}..    ch = subprocess.popen(command,.                                 stdout=subprocess.pipe,.                                 stderr=subprocess.pipe,.                                 shell=true,.                                 close_fds=true)..    output[""result""], output[""error""] = ch.communicate() #capture it...output[""result""], output[""error""] = ch.communicate(input=stdin_in)[0]  #stuck.        print output[""result""] # works..def main():.    password_string = ""abc123"".    runcmd (""myprogram hostname"" , password_string)..if __name__ == '__main__':.    main()...so i can send the password string to myprogram ?..------modified -----------..output = {""result"": [], ""error"": [], ""exit_status"": []}..ch = subprocess.popen(command,.                      stdin=subprocess.pipe,.                             stdout=subprocess.pipe,.                             stderr=subprocess.pipe,.                             shell=true,.                             close_fds=true)..output= ch.communicate(input=stdin_in).print output[1]  # prints ('', 'password: ') ...----------- modified 2 ------------..class actions():..    def console(self):.        return subprocess.popen(""myprogram"",.                         stdin=subprocess.pipe,.                         stdout=subprocess.pipe,.                         stderr=subprocess.pipe,.                         shell=true,.                         close_fds=true)...    def password(self, passw):.        delete = self.console().communicate(""%s"" % (passw)).        return(delete)...def main():.    password_string = ""abc123"".    print actions().password(password_string)...prints..('', 'password: ')"
