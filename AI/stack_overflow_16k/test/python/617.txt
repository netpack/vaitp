"can virtual function be private in blank i want need a virtual mechanism in blank and was implemented as below:..class a() :.    def __init__(self) :.        self.level()..    def level(self) :.        print(""at level a"")..class b(a).    def level(self) :.        print(""at level b"")...it worked as expected:..&gt;&gt;&gt;b = b().at level b...then i wanted to keep level() function in private by changing function's name into __level():..class a() :.    def __init__(self) :.        self.__level()..    def __level(self) :.        print(""at level a"")..class b(a).    def __level(self) :.        print(""at level b"")...but it didn't work:..&gt;&gt;&gt;b = b() .at level a...the virtual mechanism magically lost when the function became private! can someone help to explain why?"
