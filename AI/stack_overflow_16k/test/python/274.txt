"calling a function from dictionary via user input - valueerror raised more often than i want i wrote the following code to execute a function from a dictionary by user input. there is a serial connection involved, that's why a close serial port command is involved later, don't be bothered by this...from commands import test1, test2, test3, finangle, testsequence.    dict = {.       'test1':test1,.       'test2':test2, .       'test3':test3,.       'finangle':finangle,.       'testsequence':testsequence.    }...the dictionary is used to limit the things the user can do with his input...def select_function(): .    while true:.        try:.            cmd = input(""now please type in function name. ntype in 'end' to end the program. "").            if cmd == 'end':.                ser.close() # close serial connection.                print(""connection to serial port "" + ser.portstr + "" closed."").                sys.exit().            if cmd in dict:.                return dict[cmd]().        except:.            raise valueerror('invalid input!')..select_function()...as far as i know this whole thing has to be a function because i want to use 'return' and this command can't be called outside of a function...so i tried to give the user a choice to either call one of the 5 functions or 'end', which closes the serial connection and aborts the rest of my script (sys.exit). if the user input isn't 'end' or in the dictionary a valueerror and 'invalid input!' will be raised!.however, valueerror is raised if i type in 'end' and well as 'testsequence' or 'finangle'. 'test1', 'test2', 'test3' are working fine. i am 100% sure that 'testsequence' and 'finangle are defined correctly, i checked it several times. also i am pretty sure that i can write 'end' correctly. can anybody see what i am doing wrong?..also i want to give the user a second choice after the input was invalid. and he has to be informed about this. however, if i write it like..except:.    raise valueerror('invalid input! please try again!').    select_function()...the user gets another chance, but the error message is not raised! how can i fix this?..edit:..problem solved. i feel bad, because it was just a misunderstanding of blank basics. thanks daniel roseman. here is the resulting code:..def select_function(): # has to be a function because of 'return'.    while true:.        cmd = input(""now please type in function name. ntype in 'end' to end the program. "").        if cmd == 'end':.                print(""connection to serial port closed."").                sys.exit().        if cmd in dict:.                return dict[cmd]().        else:.            print('invalid input! please try again!').            select_function()..select_function()"
