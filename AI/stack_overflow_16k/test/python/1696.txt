"blank - unrecognized arguments error with a warning message i have the following in my run.py script...    import time..num_packets = 500..import random.import argparse..import threading.from scapy.all import sniff.from scapy.all import ether, ip, ipv6, tcp..parser = argparse.argumentparser(description='run_test.py').parser.add_argument('--random-dport',.                    help='use a random tcp dest port for each packet',.                    action=""store_true"", default=false).args = parser.parse_args()..class packetqueue:.    def __init__(self):.        self.pkts = [].        self.lock = threading.lock().        self.ifaces = set()..    def add_iface(self, iface):.        self.ifaces.add(iface)..    def get(self):.        self.lock.acquire().        if not self.pkts:.            self.lock.release().            return none, none.        pkt = self.pkts.pop(0).        self.lock.release().        return pkt..    def add(self, iface, pkt):.        if iface not in self.ifaces:.            return.        self.lock.acquire().        self.pkts.append( (iface, pkt) ).        self.lock.release()..queue = packetqueue()..def pkt_handler(pkt, iface):.    if ipv6 in pkt:.        return.    queue.add(iface, pkt)..class snifferthread(threading.thread):.    def __init__(self, iface, handler = pkt_handler):.        threading.thread.__init__(self).        self.iface = iface.        self.handler = handler..    def run(self):.        sniff(.            iface = self.iface,.            prn = lambda x: self.handler(x, self.iface).        )..class packetdelay:.    def __init__(self, bsize, bdelay, imin, imax, num_pkts = 100):.        self.bsize = bsize.        self.bdelay = bdelay.        self.imin = imin.        self.imax = imax.        self.num_pkts = num_pkts.        self.current = 1..    def __iter__(self):.        return self..    def next(self):.        if self.num_pkts &lt;= 0:.            raise stopiteration.        self.num_pkts -= 1.        if self.current == self.bsize:.            self.current = 1.            return random.randint(self.imin, self.imax).        else:.            self.current += 1.            return self.bdelay...pkt = ether()/ip(dst='10.0.0.1', ttl=64)/tcp()..port_map = {.    1: ""veth3"",.    2: ""veth5"",.    3: ""veth7"".}..iface_map = {}.for p, i in port_map.items():.    iface_map[i] = p..queue.add_iface(""veth3"").queue.add_iface(""veth5"")..for p, iface in port_map.items():.    t = snifferthread(iface).    t.daemon = true.    t.start()..import socket..send_socket = socket.socket(socket.af_packet, socket.sock_raw,.                            socket.htons(0x03)).send_socket.bind((port_map[3], 0))..delays = packetdelay(10, 5, 25, 100, num_packets).ports = [].print ""sending"", num_packets, ""packets ..."".for d in delays:.    # sendp is too slow....    # sendp(pkt, iface=port_map[3], verbose=0).    if args.random_dport:.        pkt[""tcp""].dport = random.randint(1025, 65535).    send_socket.send(str(pkt)).    time.sleep(d / 1000.).time.sleep(1).iface, pkt = queue.get().while pkt:.    ports.append(iface_map[iface]).    iface, pkt = queue.get().print ports.print ""distribution..."".for p in port_map:.    c = ports.count(p).    print ""port {}: {:&gt;3} [ {:&gt;5}% ]"".format(p, c, 100. * c / num_packets)...i tried running the script using the below command .../run_test.py '--random-dport' 2...it is throwing an unrecognized arguments error with the following message...ubuntu@workshop:~/p4lang/tutorials/workshop_/mp$ sudo ./run.py 2 .warning: no route found for ipv6 destination :: (no default route?).usage: run.py [-h] [--random-dport].run_test.py: error: unrecognized arguments: 2.ubuntu@workshop:~/p4lang/tutorials/workshop/mp$...what could be the problem here. i assume the rest of the run.py code is fine and the problem is in the above lines. i can add the rest of the code if asked for. i am stuck with this for a long time. any inputs will help me!"
