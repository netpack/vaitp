"unexpected output when comparing my input string to certain options i'm building what will hopefully be an ms-dos style operating system, but i'm having difficulty with the folders. whenever i try to create or change directories, i get a message saying ...  ""command not found.""...i don't know why this is happening and i could really use some help. here's what i've got:..import os..def cmdlvl2():.    print(""use the 'leave' command to shut down the system. use the 'type' command to start a text editor. you can also type 'clear' to clear the screen. type 'help -a' for more options."").    tcmdlvl2 = input(""~$: "").    if tcmdlvl2 == (""leave""):.        quit().    if tcmdlvl2 == (""type""):.        typer().    if tcmdlvl2 == (""clear""):.        os.system('cls').    if tcmdlvl2 == (""""):.        dcmdlvl2().    if tcmdlvl2 == (""help -a""):.        print(""you can use the command 'md' to make a new directory. use the cd command to access this directory. additionally, use 'list' to show all sub-folders in your current directory."").        cmdlvl2().    if tcmdlvl2 == (""md""):.        directoryname = input(""name of directory: "").        os.mkdir(directoryname).        if not os.path.exists(directoryname):.            os.mkdir(directoryname).            dcmdlvl2().    if tcmdlvl2 == (""cd""):.        changeddir = input(""directory name: "").        os.chdir(changeddir).        if not os.path.exists(changeddir):.            print(""directory not found."").            dcmdlvl2().    if tcmdlvl2 == ""list"":.        os.system('dir').    if tcmdlvl2 != (""leave"", ""type"", ""clear"", """", ""help -a"", ""cr"", ""cd"", ""list""):.        print(""command not found."").    dcmdlvl2()..def dcmdlvl2():.    tcmdlvl2 = input(""~$: "").    if tcmdlvl2 == (""leave""):.        quit().    if tcmdlvl2 == (""type""):.        typer().    if tcmdlvl2 == (""clear""):.        os.system('cls').    if tcmdlvl2 == (""""):.        dcmdlvl2().    if tcmdlvl2 == (""help""):.        cmdlvl2().    if tcmdlvl2 == (""cr""):.        directoryname = input(""name of directory: "").        os.mkdir(directoryname).        if not os.path.exists(directoryname):.            os.mkdir(directoryname).            dcmdlvl2().    if tcmdlvl2 == (""cd""):.        changeddir = input(""directory name: "").        os.chdir(changeddir).        if not os.path.exists(changeddir):.            print(""directory not found."").            dcmdlvl2().    if tcmdlvl2 == (""list""):.        os.system('dir').    if tcmdlvl2 != (""leave"", ""type"", ""clear"", """", ""help"", ""help -a"", ""cr"", ""cd"", ""list""):.        print(""command not found."").    dcmdlvl2()..def typer():.    print(""start typing to get started. unfortunately, you cannot currently save your files."").    typercmd = input(""  "").    dcmdlvl2()..def cmdline():.    print(""hello, and welcome to your new operating system. type 'help' to get started."").    cmd = input(""~$: "").    if cmd == (""help""):.        cmdlvl2().    if cmd == (""leave""):.        quit().    if cmd == (""type""):.        typer().    if cmd == (""clear""):.        os.system('cls').    if cmd == (""""):.        dcmdlvl2().    if cmd == (""help -a""):.        print(""you can use the command 'cr' to make a new directory. use the sd command to access this directory. additionally, use 'list' to show all sub-folders in your current directory."").        cmdlvl2().    if cmd != (""leave"", ""type"", ""clear"", """", ""help -a""):.        print(""command not found."").    dcmdlvl2()..def redirect():.    signin()..def muserredirect():.    makeuser()..def pwordsignin():.    rpword = input(""password: "").    with open('passwords.txt', 'r') as f:.        for line in f:.            if rpword == (line):.                cmdline().            else:.                print(""incorrect password."").                signin()..def signin():.    runame = input(""username: "").    with open('usernames.txt', 'r') as f:.        for line in f:.            if runame == (line):.                pwordsignin().            else:.                print(""username not found."").                muserredirect()..def makeuser():.    nuname = input(""new username: "").    npword = input(""create a password for the user: "")..    with open('usernames.txt', 'w') as f:.        f.write(nuname).    with open('passwords.txt', 'w') as f:.        f.write(npword).    signin()..print(""create a new user? warning: this will delete any other users. (y/n) "").nuser = input("""").if nuser == (""n""):.    signin().if nuser == (""n""):.    signin().if nuser == (""y""):.    makeuser().if nuser == (""y""):.    makeuser()...also, if anyone can help me with my folder setup, i want it to only create folders inside of the program instead of my base, windows os. how could i do this?"
