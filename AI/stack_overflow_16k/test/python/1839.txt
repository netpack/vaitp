"blank - loop through log files with some logic good morning,..i have taken on a small project, solely for the purposes of learning blank..so far the script will ssh to another server, to obtain a list of nodes which are down. i want to change this though, to have it store a list of down nodes in a tmp file, and the next day compare one to the other and only work with nodes which are down that weren't down yesterday. but that part can wait.....the issue i'm seeing at the moment is searching for various strings in a number of log files, but if the line count for a particular node exceeds a certain number; rather than being sent to the terminal.. a message is sent instead saying ""too many log entries; entries save to /tmp/....here's what i have so far, but it doesn't really do what i want...also, if you have any other advice for my script, i would be infinitely grateful. i am learning, but it's sinking in slowly! :)..#!/usr/bin/blank.#..from subprocess import *.import sys.from glob import glob.import argparse..parser = argparse.argumentparser().parser.add_argument('-f', metavar='logname', help='logfile to check').args = parser.parse_args()..ssh = popen([""ssh"", ""root@srv1"", 'check_nodes'],.            shell=false,.            stdout=pipe,.            stderr=pipe).result = ssh.stdout.readlines()..down_nodes=[].status_list=[""down"", ""admindown""]..if result == []:.    error = ssh.stderr.readlines().    print &gt;&gt;sys.stderr, ""error: %s"" % error..else:.        for line in result[1:]:.            columns = line.split().            status = columns[3].            nodes = columns[2].            if status in status_list:.                down_nodes.append(nodes)..if args.f:.    logs = args.f.else:.    try:.        logs = glob(""/var/log/*"").    except indexerror:.        print ""something is wrong. logs not available."".        sys.exit(1)..valid_errors = [""error"", ""mce"", ""caterr""]..for log in logs:.    with open(""log"", ""r"") as tmp_log:.        opn_log = tmp_log.readlines()..for line in open_log:.    for down_nodes in open_log:.        if valid_errors in open_log:.             print valid_errors...what i have so far, sort of works in testing.. but it just finds the errors in valid_errors and doesn't find lines that have both down_node and valid_errors in the same time. also, with a date.. maybe something like, lines in a log that contain down_node, valid_errors and contains a date string of less than 3 days or something...as from friday - i hadn't used blank for anything! i've worked only with shell scripts and always found that a bash script it perfect for what i need. so i am a beginner... :)..thanks.jon"
