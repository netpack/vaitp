"remove row from .csv file by column value? i am trying to remove the row after the user is added where the value == .to 'user['username']' while mode 1 is running i tried with pandas and it's not working, tried many values any of them none work, what i'm doing wrong.i'm trying to remove their row where the username as already added and i'm struggling with this ..orders.drop(orders.loc[orders['username'] == user['username']].index, inplace=true)...what i tried..from telethon.sync import telegramclient.from telethon.tl.functions.messages import getdialogsrequest.from telethon.tl.types import inputpeerempty, inputpeerchannel, inputpeeruser.from telethon.errors.rpcerrorlist import peerflooderror, userprivacyrestrictederror.from telethon.tl.functions.channels import invitetochannelrequest..import pandas as pd.import sys.import csv.import traceback.import time..api_id = 123456.api_hash = '######################'.phone = '+11111111111'.client = telegramclient(phone, api_id, api_hash)..client.connect().if not client.is_user_authorized():.    client.send_code_request(phone).    client.sign_in(phone, input('enter the code: '))..orders = pd.read_excel('c:/users/asd/desktop/adder/scrape/members.csv', 0).users = [].with open(""c:/users/asd/desktop/adder/scrape/members.csv"", encoding='utf-8') as f:.    rows = csv.reader(f, delimiter="","", lineterminator=""n"").    next(rows, none).    for row in rows:.        user = {}.        user['username'] = row[0].        user['id'] = int(row[1]).        user['access_hash'] = int(row[2]).        user['name'] = row[3].        users.append(user)..chats = [].last_date = none.chunk_size = 200.groups = []..result = client(getdialogsrequest(.    offset_date=last_date,.    offset_id=0,.    offset_peer=inputpeerempty(),.    limit=chunk_size,.    hash=0.)).chats.extend(result.chats)..for chat in chats:.    try:.        if chat.megagroup == true:.            groups.append(chat).    except:.        continue..print('choose a group to add members:').i = 0.for group in groups:.    print(str(i) + '- ' + group.title).    i += 1..g_index = input(""enter a number: "").target_group = groups[int(g_index)]..target_group_entity = inputpeerchannel(target_group.id, target_group.access_hash)..mode = int(input(""enter 1 to add by username or 2 to add by id: ""))..for user in users:.    try:.        print(""adding {}"".format(user['id'])).        if mode == 1:.            if user['username'] == """":.                continue.            user_to_add = client.get_input_entity(user['username']).            orders.drop(orders.loc[orders['username'] == user['username']].index, inplace=true).        elif mode == 2:.            user_to_add = inputpeeruser(user['id'], user['access_hash']).        else:.            sys.exit(""invalid mode selected. please try again."").        client(invitetochannelrequest(target_group_entity, [user_to_add])).        print(""waiting 5 seconds..."").        time.sleep(5).    except peerflooderror:.        print(""getting flood error from telegram. script is stopping now. please try again after some time."").    except userprivacyrestrictederror:.        print(""the user's privacy settings do not allow you to do this. skipping."").    except:.        traceback.print_exc().        print(""unexpected error"").        continue"
