"i am making a project on sentiment analysis and i am not able to solve this error related to json the error i get is:..blank3 sentim.py afinn.txt  tweet_file.    traceback (most recent call last):.      file ""sentim.py"", line 67, in &lt;module&gt;.        main().      file ""sentim.py"", line 29, in main.        js = json.loads(str(line)).      file ""/usr/lib/blank3.5/json/__init__.py"", line 319, in loads.        return _default_decoder.decode(s).      file ""/usr/lib/blank3.5/json/decoder.py"", line 339, in decode.        obj, end = self.raw_decode(s, idx=_w(s, 0).end()).      file ""/usr/lib/blank3.5/json/decoder.py"", line 357, in raw_decode.        raise jsondecodeerror(""expecting value"", s, err.value) from none.    json.decoder.jsondecodeerror: expecting value: line 2 column 1 (char 1)...this is my code, and i am not able to remove the error related to json. my project is based on sentiment analysis on twitter using afinn.txt ..    def main():.        sent_file = open(sys.argv[1]).        tweet_file = open(sys.argv[2]).        #hw().        #lines(sent_file).        #lines(tweet_file)..        # read the sentiment file and build dictionary.        scores = {} # initialize an empty dictionary.        for line in sent_file:.            term, score = line.split(""t"") # the file is tab delimited..            scores[term] = int(score)..        #print scores.items() # print every (term, score) pair in the dictionary. as a list...        # read the tweet file: ""output.txt"".        tweet_data = [].        for line in tweet_file:.           js = json.loads(str(line))..        '''if ""lang"" in response.keys():.                 print response[""lang""]'''.        if ""text"" in response.keys():.                tweet_data.append(response[""text""]).                #print response[""text""].            #print response.keys()..        #print len(tweet_data)..        # for each tweet.        for t in tweet_data:.            total = 0.            # convert from &lt;type 'unicode'&gt; to &lt;type 'str'&gt;.            encoded_t = t.encode('utf-8')"
