"how does blank swap elements inside a list? i am new to blank, and just learned about mutable and immutable objects.  it appears that when we are swapping elements inside a list, blank creates copies of the individual elements and then copy them back into the list.....in the above example, we begin with n = [[1, 2], [3, 4]].  the first sublist, [1, 2] occupies id# 24, and the second sublist [3, 4] occupies id# 96.  at first, i thought that since lists are mutable, after swapping, id# 24 holds [3, 4] and id# 96 holds [1, 2].  but as we can see in the test above, that is not the case.  rather, blank is pointing to the objects in a manner determined by our swap; the first slot of the list points to 96 and the second slot points to 24...certainly, the id# of n did not change, so n did not violate the definition of a mutable object.  but the way the sublists got swapped seems to be a caveat.  can you kindly confirm or explain in more precise language?"
