"iterating a text file, how to continue with next line in a loop? i'm new to blank and i am having some difficulties getting my script to do what i need and i need some help. my code probably could be sorted a lot better too, i'm sorry if it is messy. the entire script is simply automating a manual task. the steps are the following:...opens a browser with two tabs .logging in to two websites, one in each tab.reads and copies 1st line in text file test.txt, containing an email.paste the value of first line to textfield on webpage1 and presses return.fetching some data on the webpage1 using selenium.it pastes values on webpage2 and sends an sms on webpage2.7.copies output from webpage2.opens third url, and paste output from webpage2.repeat from step 3(?)...all this works wonders currently, but when the whole script is finished, i want it to return to step 3, but this time reading line 2 in the text file. perform steps 3-8 again before reading line 3 and so on.. how can i do this?..the idea is that i have a .txt file containing many many email addresses, one per line, where my scripts goes through this process on each individual address..if possible i would also like the script to append ""- successful"" to each line after being read. so the script will run x amount of times, depending on how many lines there are in test.txt.if possible it would be nice to have some error handling as well, i.e move to next line in file if any errors...here is my full code, i had to remove the url's and some sensitive values, i hope it's understandable. the part i'm having trouble with is highlighted below:..    # coding=utf-8.import clipboard.from selenium import webdriver.from selenium.webdriver.common.keys import keys.from selenium.common.exceptions import nosuchelementexception...def login():.    ## define logins for#.    usernameb = ''.    passwordb = ''.    usermaestro = ''.    passmaestro = ''..    driver.switch_to_window(driver.window_handles[0]).    driver.get(first_url).## perform login in b ##.    username = driver.find_element_by_id('ctl00_logincontent_username_f').    username.send_keys(usernameb).    password = driver.find_element_by_id('ctl00_logincontent_password_f').    password.send_keys(passwordb).    loginbutton = driver.find_element_by_id('ctl00_logincontent_submit').    loginbutton.click()  ##..    driver.switch_to_window(driver.window_handles[1]).    driver.get(second_url)..#### perform login in maestro.    usernamem = driver.find_element_by_name('username').    usernamem.send_keys(usermaestro).    passwordm = driver.find_element_by_name('password').    passwordm.send_keys(passmaestro).    loginmaestro = driver.find_element_by_name('submit').    loginmaestro.click()...def searchb():..    driver.switch_to_window(driver.window_handles[0]) # use first tab.    ## search function ##.    emailsearch = driver.find_element_by_id('quicksearchinput').    with open('c:\users\user\test.txt','r') as f:.            for email in f:.                emailsearch.send_keys(email, keys.return).                sendsms()...def sendsms():.    try:.        kundenummer = driver.find_elements_by_tag_name('dd')[2].text # grabs value from instersting tag..        telefon = driver.find_elements_by_tag_name('dd')[4].text # grabs value from interesting tag..    except nosuchelementexception as exception:.        print ""element not found. getting next email"".        searchbrikks().    mailertext = ""he""..    ## send sms ##.    driver.switch_to_window(driver.window_handles[1]).    driver.get(second_url).    driver.find_element_by_name('til').send_keys(telefon).    driver.find_element_by_id('msgtxt').send_keys(mailertext).    driver.find_element_by_xpath('//input[@value=""send sms""]').click() ## we use this to send the sms once done..    smsref = driver.find_elements_by_tag_name('strong')[1].text # copies the output sms-ref..    print('successfully sent sms and copied the referance number for log. ').    addnotebrikks()...def addnotebrikks():..    smsref = driver.find_elements_by_tag_name('strong')[1].text # copies the output sms-ref..    driver.switch_to_window(driver.window_handles[0]) # goes to b.    kundenummer = driver.find_elements_by_tag_name('dd')[2].text # grabs id for url.    telefon = driver.find_elements_by_tag_name('dd')[4].text # grabs value from interesting tag...    driver.get(third_url+kundenummer) # goes to ""add note"" on customer in b.    fulldraft = 'sms sendt til:'+ telefon + '. kundenummer oppgitt: ' +kundenummer + 'n' + smsref.    shortdraft = 'mailer-daemon, sms sendt. ref:' +str(smsref) #for subject in brikks. add sms-ref?..    emnebrikks = driver.find_element_by_id('ctl00_maincontent_uisubject_f').    emnebrikks.send_keys(shortdraft).    bodybrikks = driver.find_element_by_id('ctl00_maincontent_uibody_f').    bodybrikks.send_keys(fulldraft)..    createticket = driver.find_element_by_id('ctl00_maincontent_save').    createticket.click() #create the ticket in brikks.    searchb()...first_url = ""https://"".second_url = ""http://"".third_url = ""https:""..driver = webdriver.chrome(executable_path=r""chromedriver.exe"").driver.execute_script('window.open(""{}"");'.format(''))...def main():.    login().    searchb().    driver.switch_to_window(driver.window_handles[1]).    smsref = driver.find_elements_by_tag_name('strong')[1].text # copies the output sms-ref....if __name__ == '__main__':.    main()...how could i achieve what i want here? appreciate any help!..edit:..so the part i'm interested in is this:.. def searchbrikks():..    driver.switch_to_window(driver.window_handles[0]) # use first tab.    ## search function ##.    emailsearch = driver.find_element_by_id('quicksearchinput').    with open('c:\users\user\test.txt','r') as f:.            for email in f:.                emailsearch.send_keys(email, keys.return).                sendsms().                ### what to write further here? ###...how can i make it read line 2 the next time searchb() is called?"
