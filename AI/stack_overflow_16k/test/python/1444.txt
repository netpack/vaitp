"working with permutationed list (making pass_word list) i want to create a pass_word list let's assume i have created a permutationed list for example : ..@@.@#.#@.##...and then i want to add another chars to it (for ex : a,b) a,b is named special chars in this code and #@ are added chars ..so i want finally get this list :..ab@@ , ab@#,ab#@,ab## , ba@@, .... a@#b,...,b##a , ... , ba##....  note : i don't want any special characters get duplicated for ex i.  don't want aa@# or bb#@ (a,b can't be duplicated  because they are.  special chars #or @ can be duplicated because they are added chars )...codes :..    master_list=[].l=[]..l= list(itertools.combinations_with_replacement('@#',2)) # get me this list :[(@,@),(@,#),(#,@),(#,#)]...for i in l:. i = i+tuple(s)  # adding special char(1 in this example) to created list. master_list.append(i)...print (master_list) # now i have this list : [(@,@,1),(@,#,1),....(#,#,1)...now if i can get all permutation of master_list my problem can be solved but i can't do that"
