"blank adding a list of class in another class i have a class called question as per below..class question:.    q_count = 0.    def __init__(self, s_id, q_id, question):.        print(""q count is "", question.q_count)       .        self._s_id = s_id.        self._question_text = question.        self._answers = [].        self._q_id = question.q_count..    def get_answers(self):.        return self._answers..    def set_answers(self,answers):.        self._answers = answers..    def add_answer(self, answer()):.        self._answers.append(answer())...and i want it to have a list called _answers which is a list of answer objects. where answer is another type of class i have created...class answer:.    def __init__(self, q_id, a_id):.        self._q_id = q_id.        self._a_id = a_id....# subclass for multiple choice.class mc_answer(answer):.    def __init__(self, q_id, a_id, answer_text):.        answer.__init__(self, q_id, a_id).        self._answer_text = answer_text..    def get_answer_text(self):.        return self._answer_text..    def set_answer_text(self, a_id):.        self._a_id = a_id;...in another part of my code, i am creating an instance of an mc_answer object. i also have an instance of a question object. how do i append this onto its answers list??..        answer1 = mc_answer(idq, 1, answer_text).        new_q.add_answer(answer1).        write_to_file(alist1, ""answers.csv"")...this is wrong but if i don't have answer1 as a parameter, how does blank know to add that particular instance of an answer?"
