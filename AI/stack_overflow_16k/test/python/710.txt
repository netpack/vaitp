"k-smallest values in array in a sorted order given an array of size n, the problem is to return first k smallest elements, in sorted order..my idea was to update an quicksort algorithm , to find first the first k element and then recursive update problem to find k-1 biggest elements. .can't find where my mistake is...    def partition(a, left, right):.      pivot = a[left].      p = left.      q = right.      while(p &lt; q):.        while(a[q] &gt; pivot and p &lt; q):.          q-=1.        while(a[p] &lt;= pivot and p &lt; q):.          p+=1.        a[p] , a[q] = a[q] , a[p].      a[left],a[p]=a[p],a[left].      return p...    def kthsmallest(a, left, right, k,c=0):.      if left&gt;=right:.        return a[c:].      else:.        curr = partition(a, left, right).        if curr - left == k - 1:.          return kthsmallest(a, left,curr-left-1,k-1,c+1).        if(curr - left &gt; k - 1):.          return kthsmallest(a, left, curr-1, k,c).        return kthsmallest(a, curr+1, right, k - (curr - left + 1),c)..temp=[8,5,2,1,6,7,4,9,0]..print(kthsmallest(a,0,len(temp)-1,2))"
