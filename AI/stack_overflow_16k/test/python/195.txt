"blank modules vs classes i have the following directory structure:..ican/.  __init__.py.  haz/.    __init__.py.    apple.py.    grape/.      __init.py.      grape.py...where apple.py and grape.py have fruit class definitions. in another test file, i am trying to load a fruit class via something akin to myapple = ican.haz.apple() or mygrape = ican.haz.grape()...what is the correct directory structure and import structure for loading a class of this sort? i have also tried something like import ican.haz as icanhaz and then calling myapple = icanhaz.apple(). i am looking to put all of my classes in the same spot and load them via something like ican.haz.&lt;class&gt;."
