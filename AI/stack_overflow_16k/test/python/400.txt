"how to properly set the path to input/output file? i am working on part of a blank project and the structure is like this:.project/some_folder/another_folder/my_work...in this folder, the file containing the code is run.py..in the same folder, i also have an input_file from which i read some data, process it, and write the result to output_file..so in run.py i have something like:..with open(""input_file"") as f:.    do_something()...and..with open(""output_file"") as f:.    store_the_result()...this works fine when i execute the code in project/some_folder/another_folder/my_work..however, when i go to project and run the code using blank -m some_folder.another_folder.my_work.run, i will have trouble accessing the input file..i tried to solve this problem by using the aboslute path to the files, but this will only work on my machine. if someone copies my code to his/her machine, he/she still needs to modify the hardcoded absolute path...how to set the path to the files such that i can start the program either in the folder containing the input and output file, or run it as a module, and others will not need to modify the path to the file when running code on their machines?"
