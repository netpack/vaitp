"trying to create a gif from a set of images i'm trying to use blank to create an animated .gif from a set of pil images...here is what i have so far:..from images2gif import writegif.from pil import image, imagedraw.import os.import sys.import random.import argparse.import webbrowser..filename = """"..def makeimages():.    for z in range(1, 31):.        dims = (400, 400)  # size of image.        img = image.new('rgb', dims)  # crete new image.        draw = imagedraw.draw(img).        r = int(min(*dims)/100).        print ""image img%d.png has been created"" % z..        n = 1000..        for i in range(n):.            x, y = random.randint(0, dims[0]-r), random.randint(0, dims[1]-r).            fill = (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)).            draw.ellipse((x-r, y-r, x+r, y+r), fill)..       img.save('.img%d.png' % z)..def makeanimatedgif():.    # recursively list image files and store them in a variable.    path = ""./images/"".    os.chdir(path).    imgfiles = sorted((fn for fn in os.listdir('.') if fn.endswith('.png')))..    # grab the images and open them all for editing.    images = [image.open(fn) for fn in imgfiles]..    global filename.    filename = filename + "".gif"".    writegif(filename, images, duration=0.2).    print os.path.realpath(filename).    print ""%s has been created, i will now attempt to open your"" % filename.    print ""default web browser to show the finished animated gif."".    #webbrowser.open('file://' + os.path.realpath(filename))...def start():.    print ""this program will create an animated gif image from the 30 images provided."".    print ""please enter the name for the animated gif that will be created."".    global filename.    filename = raw_input(""do not use file extension &gt;&gt; "").    print ""please wait while i create the images......"".    makeimages().    print ""creating animated gif...."".    makeanimatedgif()..start()...here is the errors:..traceback (most recent call last):.  file ""final.py"", line 60, in &lt;module&gt;.    start().  file ""final.py"", line 56, in start.    makeimages().  file ""final.py"", line 30, in makeimages.    img.save('images/.img%d.png' % z).  file ""/usr/local/lib/blank2.7/dist-packages/pil/image.py"", line 1439, in save.    save_handler(self, fp, filename).  file ""/usr/local/lib/blank2.7/dist-packages/pil/pngimageplugin.py"", line 572, in _save.    imagefile._save(im, _idat(fp, chunk), [(""zip"", (0,0)+im.size, 0, rawmode)]).  file ""/usr/local/lib/blank2.7/dist-packages/pil/imagefile.py"", line 481, in _save.    e = image._getencoder(im.mode, e, a, im.encoderconfig).  file ""/usr/local/lib/blank2.7/dist-packages/pil/image.py"", line 401, in _getencoder.    raise ioerror(""encoder %s not available"" % encoder_name).ioerror: encoder zip not available...the desired output for this is to have blank create 30 images, then combine them all together and save it out as a gif file."
