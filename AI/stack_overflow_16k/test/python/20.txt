"blank exercise, execution time this was for a leetcode problem and i was wondering my solution is slower than the proposed one, could you give me some insights perhaps of time complexity and why at the end my code is slower?..my code:..class solution:.    def numuniqueemails(self, emails: 'list[str]') -&gt; 'int':.        forward_emails = set().        for email in emails:.            fw_email = []..            idx = 0.            while email[idx] != '@' and email[idx] != '+':.                if email[idx] != '.':.                    fw_email.append(email[idx]).                idx += 1..            if email[idx] == '+':.                idx += 1.                while email[idx] != '@':.                    idx += 1..            while idx &lt; len(email):.                fw_email.append(email[idx]).                idx += 1..            forward_emails.add(''.join(fw_email))..        return len(forward_emails)...proposed solution:..class solution(object):.    def numuniqueemails(self, emails):.        seen = set().        for email in emails:.            local, domain = email.split('@').            if '+' in local:.                local = local[:local.index('+')].            seen.add(local.replace('.','') + '@' + domain).        return len(seen)...i was expecting my solution to be faster given that i was iterating through the strings only once and then making the join, while on the other hand, the proposed solution run methods such as split, index, slicing that i thought would cost more...if you need more context of the problem, let me know."
