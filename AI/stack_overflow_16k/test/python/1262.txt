"how do i search for a string in an list, using a tokenized list as the query's base? i have a program that analyzes text for bible verses. i have a dict that because of the brevity, i will use this as an example:..{.    ""song"": [""song of songs"", ""song of solomon""],.    ""exod"": [""bilowgii"", ""zanafilla"", ""1 moseboken"",""exodus"", ""2 mosebog"", ""2 mose"", ""shemot"", ""2 mooseksen"", ""exode"", ""esodo""].}...additionally, i have another tokenized list of a message which i have to seek if there is a book in the message (again another example)...`[""my"", ""favorite"", ""verse"", ""is"", ""song"", ""of"", ""solomon"", ""1:2"", ""but"", ""my"", ""second"", ""favorite"", ""is"", ""exodus"", ""2:15""]...now of course i could iterate through both ""song"" and ""exod"" and find exodus with no problem, because it's not a book name that has more than one word. however, how would i be able to detect if ""song of solomon"" was in one of the items of the dict based on the tokenized string?..if a solution for this specific method can't be found, would there be a way in which i could simplify the process?..note: i'm trying to find a way to ""rebuild the string"" to see if such string is in a list. in other words, i want to be able to know what the key of the list is if the rebuilt string is in such a list. (i.e. i should get ""song"" from [""my"", ""favorite"", ""verse"", ""is"", ""song"", ""of"", ""solomon"", ""1:2""])..my solution was to no longer tokenize the string and use the string by itself in combination with @ezod's answer."
