"reloading a class in blank 2.7 without killing obj i am having a class and a object for that class. problem is when i have to make changes in the class methods, i have to kill the object and initiate another object. is there a way i can get the modified functionality without killing object..class abc:.    def abc():.        print ""hello i am original text""...i am calling the class as..import abc.obj = abc()..obj.abc() is printing the desired output...if i want to make changes in the method abc or write a new method for the class, i have to reopen the blank shell and have a new obj. ..i am looking for a way where i can reload the class again and same object will have new properties of the class..i am using blank 2.7 and tried few things that i got like reload(module) ..giving negative rating is fine but there should be a reason for that. just like if you don't have answer to that or does not understand it well, won't qualify you to give negative rating"
