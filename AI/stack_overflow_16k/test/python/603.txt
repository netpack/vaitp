"closures, partials and decorators i am confused between the three. i understand that closures are functions returned by another functions and have access to the local variables form an enclosing scope..example:..def add_nums(one):.    def adder(two):.        return one+two.    return adder..a_10 = add_nums(10).print a_10(5).15...here, adder is a closure...but, is this also not an example of a partial..from functools import partial.a_10 = partial(add_nums, 10).print a_10()(5).15...what is the difference between the two?..also, decorators are used to add functionality to functions...def add_nums(one):.    def adder(two):.        print ""foo, bar"".        return one+two.    return adder..a_10 = add_nums(10).print a_10(5).foo, bar.15...what is the difference between all the three?"
