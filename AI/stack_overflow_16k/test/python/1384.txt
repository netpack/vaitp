"get function results using named pipes (blank) i have one dictionary (inverted_index) that maps integer keys to list values all follows:  ..key          value.101332      1011772  10841334  21363790.101334      1142902.101347      764543...i'm trying to use named pipes so that the user can input a key and then the result will be the list of values. however, i'm not getting any result. ..the following is the code i tried: ..import os.import errno..def getdocuments(inp):.    return [inverted_index[x] for x in inp]..fifo = 'dictpipe'..try:.    os.mkfifo(fifo).except oserror as oe:.    if oe.errno != errno.eexist:.        raise..print(""opening fifo..."").with open(fifo) as fifo:.    print(""fifo opened"").    data = set().    while true:.        data = fifo.read().        if len(data) == 0:.            print(""writer closed"").            break.        dd = getdocuments(data).        print(dd)...the following is the result i'm getting: ..terminal 1:  $ blank dictpipes.py .             opening fifo.....terminal 2:  $ echo 101332 | bc &gt; dictpipe..terminal 1:  $ blank dictpipes.py .             opening fifo... .             fifo opened .             [[], [], [], [], [], [], []] .             writer closed...as you can see i'm getting a list of empty lists.. the result should be: .[1011772, 10841335, 21363790]..edit: .the code used to create the dictionary.. ..from collections import defaultdict..inverted_index = defaultdict(list)  #inverted index dictionary.forward_index = defaultdict(list) #forward index dictionary..with open('term_dict.txt') as file:.    for line in file:.        items = line.split().        term, doc = items[0], items[1:].        for doc in items[1:]:.            inverted_index[term].append(doc).            forward_index[doc].append(term)"
