"blank systemhotkey registering from list causes all hotkeys bound to last action in list i'm currently writing code which deals with hotkey implementation. when using the system_hotkey module i get weird behavior from reading the configuration file with hotkeys and registering them. specifically, i've narrowed down the problem to the point where hotkeys are being registered from a list. the following code shows the isolated problem:..from system_hotkey import systemhotkey..def test(num):.    print(num)..def listhkreg():.    hotkeys = [[[""control"", ""1""], ""test1""],[[""control"", ""2""], ""test2""]].    for h in hotkeys:.        hk = systemhotkey().        hk.register(h[0], callback = lambda x:test(h[1])).    while(true):.        pass..def hardcodehkreg():.    hk = systemhotkey().    hk.register([""control"", ""1""], callback = lambda x:test(""test1"")).    hk.register([""control"", ""2""], callback = lambda x:test(""test2"")).    while(true):.        pass...when registering hotkeys with hardcodehkreg() there's no issues with proper hotkey mapping. but when registering hotkeys with listhkreg() all hotkeys from the list exhibit the same behavior as the last registered hotkey's action from the list (i.e. ctrl+1 will print ""test2"")."
