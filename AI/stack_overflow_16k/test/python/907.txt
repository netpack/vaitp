"finding the index of elements based on a condition using blank list comprehension the following blank code appears to be very long winded when coming from a matlab background..&gt;&gt;&gt; a = [1, 2, 3, 1, 2, 3].&gt;&gt;&gt; [index for index,value in enumerate(a) if value &gt; 2].[2, 5]...when in matlab i can write:..&gt;&gt; a = [1, 2, 3, 1, 2, 3];.&gt;&gt; find(a&gt;2).ans =.     3     6...is there a short hand method of writing this in blank, or do i just stick with the long version?....thank you for all the suggestions and explanation of the rationale for blank's syntax...after finding the following on the numpy website, i think i have found a solution i like:..http://docs.scipy.org/doc/numpy/user/basics.indexing.html#boolean-or-mask-index-arrays..applying the information from that website to my problem above, would give the following:..&gt;&gt;&gt; from numpy import array.&gt;&gt;&gt; a = array([1, 2, 3, 1, 2, 3]).&gt;&gt;&gt; b = a&gt;2 .array([false, false, true, false, false, true], dtype=bool).&gt;&gt;&gt; r = array(range(len(b))).&gt;&gt;&gt; r(b).[2, 5]...the following should then work (but i haven't got a blank interpreter on hand to test it):..class my_array(numpy.array):.    def find(self, b):.        r = array(range(len(b))).        return r(b)...&gt;&gt;&gt; a = my_array([1, 2, 3, 1, 2, 3]).&gt;&gt;&gt; a.find(a&gt;2).[2, 5]"
