"numerous instance attributes inherited from multiple classes say i have classes a, b, and c. each of them has over 10 instance attributes. i am going to create class d that inherits classes a, b, and c. what is the best practice to organize the numerous instance attributes in class d? any thoughts would be much appreciated. thanks! ..class a:.    def __init__(self, a, b, c, d,...):.        self.a = a.        self.b = b.        self.c = c.        self.d = d.        .....class b:.    def __init__(self, e, f, g, h,...):.        self.e = e.        self.f = f.        self.g = g.        self.h = h.        .....class c:.    def __init__(self, i, j, k, l,...):.        self.i = i.        self.j = j.        self.k = k.        self.l = l.        .....class d(a, b, c):.    def __init__(self, a, b, c, d, e, f, g, h, i, j, k, l, ..., z):.        a.__init__(self, a, b, c, d,...).        b.__init__(self, e, f, g, h,...).        c.__init__(self, i, j, k, l,...).        self.z = z"
