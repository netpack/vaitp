"smart way of converting dictionary to key=value connection string in blank i have always changing connection strings, with a variable number of keys such as port, timeout etc etc. i store these in a dictionary because i like to use that and it feels natural, but what i would like to do is convert something which looks like:..{'host':'localhost', 'user':'postgres', 'password':'xx', 'database':'test', 'socket_timeout':9999, 'ssl':false, 'port':5432}...into..something i can insert in place of this:..conn = dbapi.connect(host=str(dbsettings['host']), user=(dbsettings['user']), password=str(dbsettings['password']), database=str(dbsettings['database']), ssl=dbsettings['ssl'], port=dbsettings['port'])...i can build a string a process with the following:..m = [str(k) + ""="" + str(v) for k, v in dbsettings.items()]...but this feels like i'm not getting ahead. how can i retain the k as the keyword and v as the string and build a series of relations."
