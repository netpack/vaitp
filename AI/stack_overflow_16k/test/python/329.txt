"writing csv rows with multiple list items in columns i am using beatifulsoup to scrape some web data into a csv file. some of the elements that i am scraping are lists of specific items; two sets of list to be exact. below is an example of what the data will come through as:..name, image_filename, [2015, 2016, 2017], [12, 55, 74]..what i need is a row for each individual item in each list like this:...name, image_filename, 2015, 12.name, image_filename, 2016, 55.name, image_filename, 2017, 74...i already have all the data scrapped into a csv file and i am looking to avoid going through the entire sheet and manually scrubbing the data. i am not opposed to doing this but if blank can be leveraged to complete this task, i would prefer to go that route.....here is my entire script i use to scrape the data. i am fairly new to blank with limited experience in web scrapping / browser automation. i don't know if formatting the data could be included in this or if this is another one i would have to write:..from urllib.request import urlopen.from bs4 import beautifulsoup.from datetime import date.import re.import csv..with open('hyperlinks.csv', 'r') as startfile:..    for line in startfile:.        url = urlopen(line).        soup = beautifulsoup(url, 'html.parser')..        data_container = soup.find('aside')                                            .        image = data_container.find('a',attrs={'class':'image-thumbnail'}).        image_href = image.get('href')                                                   ..        img_container = data_container.find('img').        data_image_name = img_container.get('data-image-name')                                 .        filename = data_image_name.split('.')                                           .        final_filename = filename[0]                                                    .        train_title = data_container.find('h2')                                         .        title_text = train_title.get_text()..        image_filename = final_filename.        full = image_filename +'.jpg'                                           ..        series = data_container.find('div', attrs={'data-source':'series'})            .        wave_links = series.find('div').        wave_set = []                                                  .        wave_links_sep = wave_links.find_all('a').        for item in wave_links_sep:.            text_only = item.get_text().            wave_set.append(text_only)..        bag = data_container.find('div', attrs={'data-source':'bag_code'}).        bag_code = bag.find('div').        bag_text = bag_code.get_text().        regex = re.compile(r's((2015|2016|2017|2018|2019))').        bag_numbers = re.sub(regex,"","",bag_text).        bag_list = [].        for nums in bag_numbers.split(','):.            bag_list.append(nums)..        filtered_bag_list = list(filter(none,bag_list))..        with open('train_data.csv', 'a', newline='') as myfile:.            writer = csv.writer(myfile).            writer.writerow([title_text, full, wave_set, filtered_bag_list])"
