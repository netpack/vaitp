"how to use super to initialize all the parents when using multiple inheritance how does blank&#39;s super() work with multiple inheritance?..i was looking at the above question/answers and made myself really confused.. 53 class first(object):. 54     def __init__(self):. 55         print ""first"". 56. 57 class second(first):. 58     def __init__(self):. 59         super(second, self).__init__(). 60         print ""second"". 61. 62 class third(first):. 63     def __init__(self):. 64         print ""third"". 65. 66 class fourth(second, third):. 67     def __init__(self):. 68         super(fourth, self).__init__(). 69         print ""thats it""....  .    fourth().    third.    second.    thats it  .  ... 53 class first(object):. 54     def __init__(self):. 55         print ""first"". 56. 57 class second(first):. 58     def __init__(self):. 59         #super(second, self).__init__()         &lt;---- commented out. 60         print ""second"". 61. 62 class third(first):. 63     def __init__(self):. 64         print ""third"". 65. 66 class fourth(second, third):. 67     def __init__(self):. 68         super(fourth, self).__init__(). 69         print ""thats it""....  .    fourth().    second.    thats it  .  ...could someone explain to me what's happening behind the scene in regards to why the top prints ""third"" and the bottom one doesn't?..i feel like there is some sort of order/sequence that's happening behind the scene that i am not seeing. ..--.fourth.mro  ..commented out super in second.(, , , , )..super in second.(, , , , )"
