"blank unpacking from list comprehension over empty input when working with a function that returns multiple values with a tuple, i will often find myself using the following idiom to unpack the results from inside a list comprehension...fiz, buz = zip(*[f(x) for x in input])...most of the time this works fine, but it throws a valueerror: need more than 0 values to unpack if input is empty. the two ways i can think of to get around this are..fiz = [].buz = [].for x in input:.    a, b = f(x).    fiz.append(a).    buz.append(b)...and..if input:.    fiz, buz = zip(*[f(x) for x in input]).else:.    fiz, buz = [], []...but neither of these feels especially blankicâ€”the former is overly verbose and the latter doesn't work if input is a generator rather than a list (in addition to requiring an if/else where i feel like one really shouldn't be needed)...is there a good simple way to do this? i've mostly been working in blank 2.7 recently, but would also be interested in knowing any blank 3 solutions if they are different."
