"using a function, how do i dynamically change the elements of a dictionary corresponding to a variable? i want to modify the dictionary elements formulaically to the corresponding user input, but i do not know how to do this in a versatile manner by initialising the elements with just perhaps another argument and another block of code..bearing in mind, using a dictionary may not be the most simplistic way to do this...thanks for any answers...i have tried to add additional arguments to the first function under class card: but i am oblivious to how to modify the dictionary elements by using this argument in a formulaic way that is versatile...class card:.  def __init__(self, t, d, dd):.    self.title = t.    self.desc = d.    self.decision_desc = dd..  def introduce_card(self):.    print(self.title).    print(self.desc).    print(self.decision_desc).    option = input(""&gt; "").    if option.lower in [""y"", ""yes"", ""t"", ""true""]:.      # line to modify dictionary element corresponding to the card to true.    elif option.lower in [""n"", ""no"", ""f"", ""false""].      # line to modify dictionary element corresponding to the card to false..card1 = card(""title"", ""desc"", ""yes/no"").card_ans = {""card1"": false, ""card2"": false, ""card3"": false}..card1.introduce_card()...this so for later, i can further programme based on the boolean values stored and use them as conditions."
