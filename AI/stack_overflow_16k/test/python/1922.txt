"how to record scores to be used later in code i'm working on creating the game hangman and i want to be able to record what letters have been correct, and how many letters were incorrect, and then use this later to both write a message on the screen and end the game. how do i do this?..currently, both correct_guesses and incorrect_guesses are lists, and every time there is a correct or incorrect guess the guess should be appended into its list...import turtle.import string.import random.import time...words = [""gypsy""]...letter_width = 25.space_width = 15.incorrect_guesses = [].correct_guesses = []...def create_turtle():.    global tori.    tori = turtle.turtle().    tori.shape('classic').    tori.pensize(5).    tori.speed(.5)...def play_game():.    create_turtle().    choose_word().    draw_scaffold().    draw_hints().    draw_blanks().    listen_for_keypress()...def report_incorrect_guess(letter):.    if letter not in incorrect_guesses:.        body_parts[len(incorrect_guesses)]().        incorrect_guesses.append(letter).        tori.penup().        x = -270 + len(incorrect_guesses * letter_width).        y = 200.        tori.goto(x, y).        tori.color(""black"").        tori.write(letter, font=(""times new roman"", 33, ""normal""))...def report_correct_guess(letter):.    tori.penup().    tori.color(""black"").    for i in range(len(word)):.        if word[i] == letter:.            offset = i * (letter_width + space_width).            tori.goto(-245 + offset, -242).            tori.write(letter, font=(""times new roman"", 33, ""normal""))...def listen_for_keypress():.    screen = turtle.screen().    for letter in string.ascii_lowercase:.        screen.onkeypress((lambda l: lambda: on_key_press(l))(letter), letter).    screen.listen().    screen.mainloop()...def choose_word():.    global word.    word = random.choice(words).    len(word)...def end_game(message):.    tori.pensize(50).    tori.color(""red"").    tori.penup().    tori.goto(-150, 0).    tori.pendown().    tori.write(message).    time.sleep(3).    exit(0)...def on_key_press(letter):.    if letter in word:.        report_correct_guess(letter).        if correct_guesses == len(word):.            end_game(""you win! :)"").    elif letter not in word:.        report_incorrect_guess(letter).        if incorrect_guesses == 9:.            end_game(""you lose! x_x"")...right now, the game works fine until the end. once you've correctly guessed all the letters, the game just keeps on playing, and you can guess more incorrect letters, but turtle just draws over the correct ones. once all the body parts have been drawn, the game stays up, but an error message is shown that says that both these portions, specifically the parts pointed at, have issues...def report_incorrect_guess(letter):.    if letter not in incorrect_guesses:.        body_parts[len(incorrect_guesses)]() &lt;-----.        incorrect_guesses.append(letter).        tori.penup().        x = -270 + len(incorrect_guesses * letter_width).        y = 200.        tori.goto(x, y).        tori.color(""black"").        tori.write(letter, font=(""times new roman"", 33, ""normal""))..def on_key_press(letter):.    if letter in word:.        report_correct_guess(letter).        if correct_guesses == len(word):.            end_game(""you win! :)"").    elif letter not in word:.        report_incorrect_guess(letter) &lt;------.        if incorrect_guesses == 9:.            end_game(""you lose! x_x"")"
