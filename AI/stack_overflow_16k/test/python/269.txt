"convenient collection of class variables blank beginner here. i am trying to write a convenience function to access class variables from a list of objects...currently, i am writing one function for each variable. for example, i have a class 'swarm' that contains 'animals'. each animal has many variables that store time series such as position, heading etc. (only a couple are given in the example below.)..i am looking for a convenient way to access a specific variable from all animals from the swarm class. i want to obtain a matrix with n columns where n is the number of animals...import numpy as np..class animal(object):.    def __init__(self):.        self.x=np.zeros(10).        self.y=np.ones(10)..class swarm(object):.    def __init__(self):.        self.animals=[].        self.animals.append(animal()).        self.animals.append(animal())..    def get_all_x(self):.        x1=self.animals[0].x.        x2=self.animals[1].x.        return np.stack([x1,x2],axis=-1)..s=swarm().s.get_all_x()...in pseudo code, i would like a function in the 'swarm' class that takes the variable name to be collected as a string input. something like this:..def get_var_from_all(self,var):.   return np.stack([x.var for x in self.animals],axis=-1)...obviously, this way of accessing 'var' doesn't work. any hints?"
