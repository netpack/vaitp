"beginner problems with references to arrays in blank 3.1.1 as part of the last assignment in a beginner blank programing class, i have been assigned a traveling sales man problem. i settled on a recursive function to find each permutation and the sum of the distances between the destinations, however, i am have a lot of problems with references. arrays in different instances of the permute and main functions of tsp seem to be pointing to the same reference...from math import sqrt.    class tsp:.        def __init__(self):.            self.cartisiancoordinates = [['a',[1,1]], ['b',[2,2]], ['c',[2,1]], ['d',[1,2]], ['e',[3,3]]].            self.array = [].            self.max = 0.            self.storedlist = ['',0].        def distance(self, i1, i2):.            x1 = self.cartisiancoordinates[i1][1][0].            y1 = self.cartisiancoordinates[i1][1][1].            x2 = self.cartisiancoordinates[i2][1][0].            y2 = self.cartisiancoordinates[i2][1][1].            return sqrt(pow((x2 - x1), 2) + pow((y2 - y1), 2))..    def evaluate(self):.        temparray = [].        data = [].        for i in range(len(self.cartisiancoordinates)):.            data.append([]).        for i1 in range(len(self.cartisiancoordinates)):.            for i2 in range(len(self.cartisiancoordinates)):.                if i1 != i2:.                    temparray.append(self.distance(i1, i2)).                else:.                    temparray.append('x').            data[i1] = temparray.            temparray = [].        self.array = data.        self.max = len(data).    def permute(self,varray,index,vcarry,mcarry): #problem class.        array = varray[:].        carry = vcarry[:].        for i in range(self.max):.            print ('array:', array).            print (index,i,carry,array[index][i]).            if array[index][i] != 'x':.                carry[0] += self.cartisiancoordinates[i][0].                carry[1] += array[index][i].                if len(carry) != self.max:.                    temparray = array[:].                    for j in range(self.max):temparray[j][i] = 'x'.                    index = i.                    mcarry += self.permute(temparray,index,carry,mcarry).                else:.                    return mcarry.        print ('pass',mcarry).        return mcarry.    def main(self):.        out = [].        self.evaluate().        for i in range(self.max):.            array = self.array[:] #array appears to maintain the same reference after each copy, resulting in an incorrect array being passed to permute after the first iteration..            print (self.array[:]).            for j in range(self.max):array[j][i] = 'x'.            print('i:', i, array).            out.append(self.permute(array,i,[str(self.cartisiancoordinates[i][0]),0],[])).        return out...salesperson = tsp().print(salesperson.main())...it would be greatly appreciated if you could provide me with help in solving the reference problems i am having. thank you."
