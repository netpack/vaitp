"list of dictionary manipulation in blank - typeerror: unhashable type: 'dict' i have a list of the folowing form:  ..oldlist = [{'x': {'a':1,'b':2}, 'y':2},{'x':{'a':6,'b':7}, 'y':2},{'x':{'a':1,'b':2}, 'y':3},{'x':{'a':1,'b':2}, 'y':2},{'x':{'a':10,'b':11}, 'y':4}]  ...to be converted into  ..final = [{'x':{'a':1,'b':2},'y':[2,3,2],'count':3},{'x':{'a':6,'b':7},'y':[2],'count':1},{'x':{'a':10,'b':11},'y':[4],'count':1}]  ...i have tried  ..oldlist = [{'x': {'a':1,'b':2}, 'y':2},{'x':{'a':6,'b':7}, 'y':2},{'x':{'a':1,'b':2}, 'y':3},{'x':{'a':1,'b':2}, 'y':2},{'x':{'a':10,'b':11}, 'y':4}]  .list1=[]  .list2=[]  .list3=[]  .s = set([d['x'] for d in oldlist])  .news=list(s)  .for item in oldlist:  .if item['x'] == news[0]:  .      list1.append(item['y'])  ..if item['x'] == news[1]:  .      list2.append(item['y'])  ..if item['x'] == news[2]:  .      list3.append(item['y'])  .final=[]  .dic1 = {'x':news[0],'y':list1,'count':len(list1)}  .dic2 = {'x':news[1],'y':list2,'count':len(list2)}  .dic3 = {'x':news[2],'y':list3,'count':len(list3)}  .final.append(dic1)  .final.append(dic2)  .final.append(dic3)  .print final...getting  ...  s = set([d['x'] for d in oldlist]).  typeerror: unhashable type: 'dict'...is there a simpler way to do it? plus here i knew that x can have only three values so i created three variables list1, list2 and list3. what if x can have several other values and i have to find out a similar list of dictionaries like final! it should also work for strings!  ..edit:i tried this. but it all got messed up  ..s = list(frozenset(oldlist[0]['x'].items()))  .print s  .for item in oldlist:  .    s.append(frozenset(item['x'].items()))"
