"a minor clarification on the program below i took this example from one of the stack flow thread.. .how do i get timestamps in logfile of pexpect..on this code, the call is being made to the user defined functions _write and _donothing from logger class...import logging.import pexpect.import re..# this is the method called by the pexpect object to log.def _write(*args, **kwargs):.    content = args[0].    # ignore other params, pexpect only use one arg.    if content in [' ', '', 'n', 'r', 'rn']:.        return # don't log empty lines.    for eol in ['rn', 'r', 'n']:.        # remove ending eol, the logger will add it anyway.        content = re.sub('%s$' % eol, '', content).    return logger.info(content) # call the logger info method with the reworked content..# our flush method.def _donothing():.    pass..logger = logging.getlogger('foo').hdlr = logging.filehandler('/bar.log').formatter = logging.formatter('%(asctime)s %(levelname)s %(message)s').hdlr.setformatter(formatter).logger.addhandler(hdlr).logger.setlevel(logging.info)..# give the logger the methods required by pexpect.logger.write = _write.logger.flush = _donothing..p = pexpect.spawn('echo ""hello world !""', logfile=logger)...the logger class does not have these methods. just wondering how these calls being made? can someone pls explain so that i can get a better understanding?"
