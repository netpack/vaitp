"how to set a class attribute a specified number of times in blank suppose we have a class node which is initialized as follows:..class node(object):.    def __init__(self, data=none, next_node=none, prev_node = none):.        self.data = data.        self.next = next_node.        self.prev = prev_node...and we create an instance head as follows:..head = node(data=4).head.next = node(data=5).head.next.next = node(data=6).head.prev = node(data=2)...i'd like to add another node to the doubly-linked list, which i could do by..head.next.next.next = node(data=8)...however, instead of writing "".next"" three times, i would like to use a method which takes as input the number of times to call "".next"" - that is, something like head.next_n_times(3) = node(data=8) which would have the same effect. how could i achieve this?..here is what i've tried so far:..class node(object):.    def __init__(self, data=none, next_node=none, prev_node = none):.        self.data = data.        self.next = next_node.        self.prev = prev_node..    def next_n_times(self, n):.        next_node = self.next.        for i in range(n-1):.            next_node = next_node.next.        return next_node..head = node(data=4).head.next = node(data=5).head.next.next = node(data=6).head.prev = node(data=2).data = 5..head.next_n_times(3) = node(data=8)...however, i get the error message..file ""sorted_insert_scratch.py"", line 19.    head.next_n_times(5) = node(data=8).syntaxerror: can't assign to function call...it seems like the next_n_times method works as a 'getter', but not as a 'setter'. how can i make it work as a 'setter'?"
