"how to get parent directory and sub directory for file i'm trying list out the names of directories a particular file belongs to. below is an example of my file tree: ..root_folder.├── topic_one.│   ├── one-a.txt.│   └── one-b.txt.└── topic_two.    ├── subfolder_one.    │   └── sub-two-a.txt.    ├── two-a.txt.    └── two-b.txt...ideally, what i'd like to have printed out is:..""file: file_name belongs in parent directory"".""file: file_name belongs in sub directory, parent directory""...i wrote this script:..for root, dirs, files in os.walk(root_folder):.. # removes hidden files and dirs.    files = [f for f in files if not f[0] == '.'].    dirs = [d for d in dirs if not d[0] == '.']..    if files:.        tag = os.path.relpath(root, os.path.dirname(root)).        for file in files:.            print file, ""belongs in"", tag...which gives me this output:..one-a.txt belongs in topic_one.one-b.txt belongs in topic_one.two-a.txt belongs in topic_two.two-b.txt belongs in topic_two.sub-two-a.txt belongs in subfolder_one...i can't seem to figure out how to get the parent directory included for the file within a sub directory. any help or alternative methods would be greatly appreciated."
