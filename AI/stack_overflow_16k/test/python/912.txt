"how to get/set local variables of a function (from outside) in blank? if i have a function (in blank 2.5.2) like:..def sample_func():.    a = 78.    b = range(5).    #c = a + b[2] - x...my questions are:...how to get the local variables (a,b) of the function from outside without using locals() inside the function? (kind of reflection).is it possible to set a local variable (say x) from outside so that the commented line works? (i know it sounds weird)....thanks in advance...edit:..everyone is asking for a use-case. but it is a weird situation. (don't blame me, i did not create it). here is the scenario:...i have an encrypted blank source file containing a blank function..a c extension module decrypts it and builds that function in-memory..a main blank program first calls the c extension with that encrypted file location..then the main program calls the function that has been built in-memory (by the c extension).but main program needs to know the local variables of that function (dont ask me why, it was not me).for some (damn) reason, main program needs to set a variable too (weirdest of all)"
