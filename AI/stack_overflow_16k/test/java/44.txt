"how to get errorstream for large big runtime.exec operations i'm using the following code to get errorstream...shellinput[0] = ""/system/xbin/dd if=/dev/zero of="";.shellinput[1] = newvfspath;.shellinput[2] = ""/gtj.img bs=1000000 count="";.shellinput[3] = gtjsize;.system.out.        .println(""error code (making new "".                + newvfspath.                + ""/gtj.img ) :.            + errorstreamreader(shellinput)"".private string errorstreamreader(string[] shellinput) {.    inputstream inputstream = null;.    string esrval = null;.    system.out.println(""entering errorstreamreader"");.    //hack to prevent executing null.    for (int i = 0; i &lt;= 3; i++) {.        if (shellinput[i] == null) {.            shellinput[i] = """";.        }.    }.    try {.    system.out.println(""executing "" + shellinput[0].                + shellinput[1] + shellinput[2] + shellinput[3]);.        inputstream = runtime.                .getruntime().                .exec(shellinput[0] + "" "" + shellinput[1] + "" "".                        + shellinput[2]).geterrorstream();.    } catch (ioexception e) {.        e.printstacktrace();.    }.    inputstreamreader inputstreamreader = null;.    try {.        inputstreamreader = new inputstreamreader(inputstream);.    } catch (exception e) {.        // todo auto-generated catch block.        e.printstacktrace();.    }.    try {.        esrval = new bufferedreader(inputstreamreader).readline();.    } catch (ioexception e1) {.        e1.printstacktrace();.    }.    return esrval;.}...but the problem with this is /system/xbin/dd if=/dev/zero of=./mnt/sdcard/cimages_2/gtj.img bs=1000000 count=100 is a pretty large operation, it takes like 8 secs. so it's not executing. how do i fix this?..edit : ..problem was not that it is a big operation. i figures it out. thanks."
