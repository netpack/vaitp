"creating a travelling salesman program, is permutations a good technique? i am trying to get my head around a tsp program for college,.i have to admit i'm finding it very difficult...basically i have an array of lat values and an array of lng values, using haversine's, i have transferred the distances into a matrix..now where to go from here?.i have to find the shortest distance, visiting all 80 towns. i am trying to think of the best way to do it. should i make a nearest neighbor algorithm?.should i just store the permutations and total the distance..or is there a better way? i have to admit, i think this is a little difficult for a 1st year student!.anyway here's my code, it's awful, the applet etc was given to us...public class brain {..    //these are the names of the 80 towns and their north and west gps co-ordinates..    static double north[] = {53.855,52.794,54.350,53.433,52.992,54.117,53.328,54.800,54.863,55.071,54.502,54.343,51.746,54.660,51.680,54.597,53.091,53.175,55.136,52.831,53.976,53.944,53.861,53.991,51.622,52.354,51.897,54.996,54.322,53.714,53.348,54.009,54.500,52.085,53.345,52.846,52.502,54.345,53.272,52.677,53.728,53.106,52.648,52.059,51.708,53.783,54.851,54.957,55.053,52.665,52.447,53.727,53.197,51.904,54.750,52.131,53.382,52.266,54.248,53.116,53.522,52.863,52.396,54.210,52.451,54.590,53.633,52.714,54.267,53.245,54.830,52.679,52.474,52.268,53.515,53.267,52.257,53.800,52.334,51.952};.    static double west[] = {-6.538,-6.165,-6.655,-7.950,-6.987,-9.167,-8.219,-7.790,-6.284,-6.508,-8.190,-6.260,-8.735,-5.670,-9.453,-5.930,-7.913,-6.525,-7.456,-6.932,-6.719,-8.095,-9.299,-7.360,-8.886,-7.712,-8.470,-7.307,-5.703,-6.350,-6.260,-6.405,-6.770,-7.640,-7.051,-8.981,-6.566,-7.640,-9.049,-6.292,-6.878,-6.065,-7.256,-9.507,-8.531,-8.917,-5.811,-7.720,-6.946,-8.624,-9.486,-7.800,-8.567,-8.957,-6.610,-8.642,-6.591,-8.270,-6.971,-7.324,-7.338,-8.200,-6.945,-5.882,-9.055,-7.290,-8.183,-8.869,-8.483,-9.306,-7.470,-7.814,-8.162,-9.696,-8.851,-7.500,-7.129,-9.533,-6.458,-7.846};.    string names[] = {""ardee"",""arklow"",""armagh"",""athlone"",""athy"",""ballina"",""ballinasloe"",""ballybofe"",""ballymena"",""ballymoney"",""ballyshannon"",""banbridge"",""bandon"",""bangor"",""bantry"",""belfast"",""birr"",""blessington"",""buncrana"",""carlow"",""carrickmacross"",""carrick-on-shannon"",""castlebar"",""cavan"",""clonakilty"",""clonmel"",""cork"",""derry"",""downpatrick"",""drogheda"",""dublin"",""dundalk"",""dungannon"",""dungarvan"",""edenderry"",""ennis"",""enniscorthy"",""enniskillen"",""galway"",""gorey"",""kells"",""kilcoole"",""kilkenny"",""killarney"",""kinsale"",""knock"",""larne"",""letterkenny"",""limavady"",""limerick"",""listowel"",""longford"",""loughrea"",""macroom"",""magherafelt"",""mallow"",""maynooth"",""mitchelstown"",""monaghan"",""mountmellick"",""mullingar"",""nenagh"",""new-ross"",""newcastle"",""newcastle-west"",""omagh"",""roscommon"",""shannon"",""sligo"",""spiddal"",""strabane"",""thurles"",""tipperary"",""tralee"",""tuam"",""tullamore"",""waterford"",""westport"",""wexford"",""youghal""};.    static double[][] matrix = new double[80][80];.    boolean visit[]=new boolean[80];.    boolean valid = true;..    public static void fillmatrix (){.        double tote = 0;.        for(int i=1;i&lt;80;i++){.            for(int j=1;j&lt;80;j++){.                matrix[i][j]=getdistance(north[i],west[j],north[j],west[j]);.            }.        }.    }..    public string compute () {          .        string solution ="""";.        for (int i=0;i&lt;80;i++){.            solution+=(char)(i+40);.        }.        solution+=""anything you add on after the 80 characters will be "" + .            ""printed in the textbox (e.g. you can compute the distance)"";.        return solution;    .    }..    public static double getdistance(double lat1, double lon1, double lat2, double lon2){.        double r = 6371;.        double dlat = math.toradians((lat2-lat1));.        double dlon = math.toradians((lon2-lon1)); .        double a = math.sin(dlat/2) * math.sin(dlat/2) + .            math.cos(math.toradians(lat1)) * math.cos(math.toradians(lat2)) *.            math.sin(dlon/2) * math.sin(dlon/2); .        double c = 2 * math.atan2(math.sqrt(a), math.sqrt(1-a)); .        double d = r * c;         .        return d;.    }    .}"
