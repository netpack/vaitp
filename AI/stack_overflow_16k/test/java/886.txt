"primefactorizater blank i've been working on this program for a while, this is the last of my first assignment...i am experiencing the following error and i am not sure how to proceed. please keep in mind that i am new to blank so i might have messed something up...exception in thread ""main"" blank.lang.nullpointerexception.at homework1.q5.primefactorizer.tostring(primefactorizer.blank:104).at homework1.q5.primefactortest.main(primefactortest.blank:19)...i originally had most of the algorithm in getfactorsandexponents, but the professor responded that it needed to be in compute. he also mentioned that i do not create the arraylists. i tried to rectify that and this is what i have now. i still get the above error when i input my value...package homework1.q5;..import blank.util.*;..public class primefactorizer {..      private int n;.      private arraylist&lt;integer&gt; primes;.      private arraylist&lt;integer&gt; exponents;.      private arraylist&lt;integer&gt; primesandexponents;....      /** .       * initialize the object with target number n. .       */.      public primefactorizer(int n) {.        n = 0;..      } ..      /**.       * return n, the target number..       */...      public int getn() {.        return n;.      }..      /**.       * compute factorization. do not repeat operation if it was called before..       */.      public void compute() {..          getn();..          int largestprimefactor = 1;..          for(int i = 2; i &lt;= n/i;){.              if(n % i == 0){.                  largestprimefactor = i;.                  //shrink n.                  n /= i;.                  //a prime factor was found so added to primes..                  //first we check if it is in the array already.                  searcharray(i,primes);.                  if(i &lt; 0){.                      primes.add(largestprimefactor);.                      exponents.add(1);.                  }.                  else.                  {.                      addexponentarray(i, exponents);.                  }    .              }.              else.              {.                  i++;.              }..          }.          if(largestprimefactor &lt; n).          {.              //this is where the largest prime factor will be, also added to primes.              largestprimefactor = n;.              primes.add(largestprimefactor);.          }..      }..      /**.       * return the factors and exponents in two arraylists. call compute() first, if necessary..       * for instance, if n=60, primes=[2,3,5], and exponents=[2,1,1]..       */.      public void getfactorsandexponents(int n, arraylist&lt;integer&gt; primes, arraylist&lt;integer&gt; exponents) {..          compute();..          arraylist&lt;integer&gt; primesandexponents = new arraylist&lt;integer&gt;();..          for(int i = 0; i &lt; primes.size(); i++){.              int value = primes.get(i);.              primesandexponents.add(value);.              int evalue = exponents.get(i);.              primesandexponents.add(evalue);..          } ..      }.      /**.       * return a string with the ""pretty"" representation of the prime factorization..       * for instance, if n is 60, then tostring() for the primefactorizer(60) object.       * should be ""60 = 2^2*3*5"". call compute() if not done before..       */.      public string tostring().      {..          string finaloutput = """";..          finaloutput = finaloutput + n + "" = "";.          //system.out.print(n + "" = "");..          for(int i = 0; i &lt; primesandexponents.size() - 1; i++){..              if(i % 2 == 1){.                  int value = primesandexponents.get(i);.                  if(value &gt; 1).                  {.                      finaloutput += ""^"";.                      finaloutput += value;.                  }..              }.              else{.                 int value = primesandexponents.get(i);.                 finaloutput += value; .                 finaloutput += ""*"";.              }.          }..              finaloutput(finaloutput);.              return finaloutput;.      }..        // other code, helper functions, etc...      public void finaloutput(string finaloutput){.          system.out.println(finaloutput);...      }.      public void addexponentarray(int index, arraylist&lt;integer&gt; exponents){.            //get the value in the array using the index found with searcharray.            int value = exponents.get(index);.            //increment value to indicate an added exponent.            value++;.            //set the index to value.            exponents.set(index, value);.      }..      public int searcharray(int i, arraylist&lt;integer&gt; primes){.         int isinarray = 0;.         for(int j = 0; j &lt; primes.size(); j++).         {.            int value = primes.get(j);.            if(value == i).            {.                isinarray = i;  .            }.            else.            {.                isinarray = -1;.            }.         }.         return isinarray;..      }......}..package homework1.q5;..import blank.util.*;..public class primefactortest {.    public static void main(string[] args){.        scanner in = new scanner(system.in);..        system.out.println(""please enter a number which you would like the prime factorization of:"");..        int n = in.nextint();.        primefactorizer obj = new primefactorizer(n);..        arraylist&lt;integer&gt; primes = new arraylist&lt;integer&gt;();.        arraylist&lt;integer&gt; exponents = new arraylist&lt;integer&gt;();..        obj.getfactorsandexponents(n, primes, exponents);..        obj.tostring();.....    }..}...thank you very much again for any help."
