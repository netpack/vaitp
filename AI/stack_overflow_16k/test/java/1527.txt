"blank library or code to properly parse comma-separated list of key=value assignments this feels like something that must have re-invented many many times and for which there should be not one but several libraries. ..i would like to parse lines of text that contain several ""assignments"" of the form ""key=value"", separated by commas. the catch is that it should be possible to specify the value as closely to how blank allows to specify strings or numeric values as possible. for example escaping strings, specifying unicode characters, or specifying tab characters as t. ..does anyone know of an open-source or lgpl library that has methods to do this? ..update: i do not think see (yet) how properties can be easily used for this as i have to process a string that contains several key=value pairs, separated by commas. the problem here is that unless the parser knows how to properly parse the values (which can of course contain commas), there is no easy way to split the string up at the commas. essentially what i want to do is convert a string like this: var1=1, var2=""asdf"",var3=""x,y,zn"",var4="""""" into a hashmap  or  where value wraps something that is either a string, a boolan, or a numeric value."
