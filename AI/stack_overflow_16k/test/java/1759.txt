"authentication system confused i'm doing a project where i'm creating an authentication program for employees to log in to at a zoo. log in attempts are limited to 3. the usernames and passwords are stored in the credentials.txt file. if the login is correct the corresponding text file from the 4th column should show up. the hash will be converted with md5 which was already provided, just had to paste into the code...griffin.keyes       108de81c31bf9c622f76876b74e9285f    ""alphabet soup""     zookeeper.rosario.dawson      3e34baa4ee2ff767af8c120a496742b5    ""animal doctor""     admin.bernie.gorilla      a584efafa8f9ea7fe5cf18442f32b07b    ""secret password""   veterinarian.donald.monkey       17b1b7d8a706696ed220bc414f729ad3    ""m0nk3y business""   zookeeper.jerome.grizzlybear  3adea92111e6307f8f2aae4721e77900    ""grizzly1234""       veterinarian.bruce.grizzlybear   0d107d09f5bbe40cade3de5c71e9e9b7    ""letmein""           admin...the problem i'm having is when i use a correct username and password, it still shows as wrong name and password. i can't figure out if i inserted md4 message digest in wrong or if something else is wrong. i don't have much experience with this but hears my code...import blank.io.file;.import blank.io.filenotfoundexception;.import blank.io.ioexception;.import blank.nio.charset.charset;.import blank.nio.file.files;.import blank.nio.file.paths;.import blank.security.messagedigest;.import blank.security.nosuchalgorithmexception;.import blank.util.list;.import blank.util.scanner;...public class authenticationsystem {..    public static void main(string[] args) throws filenotfoundexception, ioexception, nosuchalgorithmexception {..        scanner scnr;.        scnr = new scanner(new file(""/users/milanpatel/netbeansprojects/authenticationsystem/src/authenticationsystem/credentials.txt""));.        string credentials [][]= new string[100][4];.        int count = 0;..        while (scnr.hasnextline()) {..            string line = scnr.nextline();..            credentials[count][0] = line.substring(0, 20).trim();.            credentials[count][1] = line.substring(20, 55).trim();.            credentials[count][2] = line.substring(55, 74).trim();.            credentials[1][3] = line.substring(74).trim();.            count++;.         }..        scanner input = new scanner(system.in);.        boolean run = true;.        int tries = 0;..        while (run) {.            system.out.println(""-welcome-"");.            system.out.println(""1-login"");.            system.out.println(""2-exit"");..            int ch = integer.parseint(input.nextline().trim());..            if (ch == 1) {.//increment number of attempts.                tries++;.//request username and password.                system.out.print(""enter username: "");.                string username = input.nextline();.                system.out.print(""enter password: "");.                string password = input.nextline();.//generate hash.                string original = ""letmein"";  //replace ""password"" with the actual password inputted by the user.                messagedigest md = messagedigest.getinstance(""md5"");.                md.update(original.getbytes());.                byte[] digest = md.digest();.                stringbuilder sb = new stringbuilder();.                for (byte b : digest) {.                    sb.append(string.format(""%02x"", b &amp; 0xff));.                }.                string hpassword = sb.tostring();..                boolean baduser = true;..                for (int i = 0; i &lt; count; i++) {.                    if (username.contentequals(credentials[i][0])) {.                        if (hpassword.contentequals(credentials[i][1])) {.//if verified, logged in.                            list&lt;string&gt; data = null;.//check type of user and print.                            switch (credentials[i][3]) {.                                case ""zookeeper"":.                                   data = files.readalllines(paths.get(""zookeeper.txt""), charset.defaultcharset());.                                    break;.                                case ""admin"":.                                    data = files.readalllines(paths.get(""admin.txt""), charset.defaultcharset());.                                    break;.                                case ""veterinarian"":.                                    data = files.readalllines(paths.get(""veterinarian.txt""), charset.defaultcharset());.                                    break;.                                default:.                                    break;.                            }.                            if (data != null) {.                                for (string s : data) {.                                    system.out.println(s);.                                }.                            }.//reset.                            tries = 0;..                            system.out.println(""n1) logout."");.                            system.out.println(""2) exit."");..                            ch = integer.parseint(input.nextline().trim());.                            if (ch == 2) {.                                run = false;.                            }.                            baduser = false;.                            break;.                        }.                    }.                }.                if (baduser) {.                    system.out.println(""invalid username or password."");.                }.            } else {.                break;.            }.//limit attempts.            if (tries == 3) {.                run = false;.                system.out.println(""you have exceeded the number of login attempts."");.            }.        }.    }.}"
