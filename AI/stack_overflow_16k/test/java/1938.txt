"shortest common superstring in blank i have a program from internet..shortest common super string..the program gives proper output however when i converted the program in blank it's not giving the same output. i have the pasted my blank program below..public class shortestcommonsuperstring {..    private static int min(int a, int b) {.        return (a &lt; b) ? a : b;.    }..    // function to calculate maximum overlap in two given strings.    private static int findoverlappingpair(string str1, string str2, refobjectone&lt;string&gt; str) {.        int max = -2147483648;.        int len1 = str1.length();.        int len2 = str2.length();..        for (int i = 1; i &lt;= min(len1, len2); i++) {.            // compare last i characters in str1 with first i.            // characters in str2.            if (str1.regionmatches(0, str2, str2.length() - i - 1, i) == false) {.                if (max &lt; i) {.                    max = i;.                    str.argvalue = str1 + str2.substring(i);.                }.            }.        }..        // check prefix of str1 matches with suffix of str2.        for (int i = 1; i &lt;= min(len1, len2); i++) {.            // compare first i characters in str1 with last i.            // characters in str2.            if (str1.regionmatches(str1.length() - i - 1, str2, 0, i) == false) {.                if (max &lt; i) {.                    //update max and str.                    max = i;.                    str.argvalue = str2 + str1.substring(i);.                }.            }.        }..        return max;.    }..    private static string findshortestsuperstring(string[] arr, int len) {.        // run len-1 times to consider every pair.        while (len != 1) {.            system.out.println(""wokring while"");.            int max = -2147483648; // to store maximum overlap.            int l = 0; // to store array index of strings.            int r = 0;.            // involved in maximum overlap.            string resstr = null; // to store resultant string after.            string str = null;.            // maximum overlap..            for (int i = 0; i &lt; len; i++) {.                system.out.println(""working for one"");.                for (int j = i + 1; j &lt; len; j++) {.                    system.out.println(""working for two"");.                    refobjectone&lt;string&gt; tempref_str = new refobjectone&lt;string&gt;(str);.                    int res = findoverlappingpair(arr[i], arr[j], tempref_str);.                    str = tempref_str.argvalue;.                    system.out.println(str);.                    // check for maximum overlap.                    if (max &lt; res) {.                        max = res;.                        resstr = str;.                        l = i;.                        r = j;.                    }.                }.            }..            len--; //ignore last element in next cycle..            // if no overlap, append arr[len] to arr[0].            if (max == -2147483648) {.                arr[0] += arr[len];.            } else {.                arr[l] = resstr; // copy resultant string to index l.                arr[r] = arr[len]; // copy string at last index to index r.            }.        }.        return arr[0];.    }..    // driver program.    public static void main(string[] args) {.        string[] arr = {""catgc"", ""ctaagt"", ""gcta"", ""ttca"", ""atgcatc""};.        int len = arr.length;.        system.out.println(""the shortest super string is"" + findshortestsuperstring(arr, len));.    }.}..class refobjectone&lt;t&gt; {.    public t argvalue;..    public refobjectone(t refarg) {.        this.argvalue = refarg;.    }.}...the output i am getting is like this -> the shortest superstring catgctc .which is not the right output. not able to figure out where i am doing mistake"
