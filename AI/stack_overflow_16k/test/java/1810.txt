"blank: palindrome finding taking too long; how to optimize? i've written a function to find whether a given string (stripped of spaces) is a palindrome.  unfortunately, it takes too long to run.  any ideas how i can make the below code run faster?  (i'm timing out on leetcode's online judge):..public class solution {..    public boolean checkifpalindrome(string s) {.        if (s.length() == 0 || s.length() == 1) {.            return true;.        }.        //if first letter == last letter.        char first = s.charat(0);.        char second = s.charat(s.length() - 1);.        if (first == second) {.            string shorterstring = s.substring(1, s.length() - 1);.            return ispalindrome(shorterstring);.        } else {.            return false;.        }.    }..    public string onlycharacters(string s) {.        string toreturn = """";.        for (character c : s.tochararray()) {.            if (character.isletter(c)) {.                toreturn += c;.            }.        }.        return toreturn;.    }..    public boolean ispalindrome(string s) {.        s = onlycharacters(s);.        return checkifpalindrome(s);.    }.}"
