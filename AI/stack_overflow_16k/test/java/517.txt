"when do printwriter automatically print to file? after playing with printwriter and files, i got a doubt about why do sometimes when i read my files immediately when i create them, there are inconsistencies, for example:..file file = new file(""items.txt"");.int loopvalue = 10;.try {.    printwriter fout = new printwriter(file);.    for (int i = 0; i &lt; loopvalue; i++) {.        fout.print(i + "" asdsadas"" + system.lineseparator());.    }.    //fout.flush(); &lt;-- i know if i call flush or close this problem don't occur.    //fout.close();..    system.out.println(""here is the file:"");.    scanner readfile = new scanner(file);.    while (readfile.hasnext()) {.        system.out.println(readfile.nextline());.    }.} catch (filenotfoundexception e) {.    system.err.println(e.getmessage());.}...if i run this code, i will read in console an empty file, something like this:..here is the file:...but if i modify the loopvalue to something like 10000, i will have something like this:..here is the file:.0 asdsadas.1 asdsadas.2 asdsadas........  continues.....9356 asdsadas.9357 asdsadas.9358  &lt;--- here ends, note that it doesnt end in the value 9999...i know that if i call flush() or close() before read the file i can rid of this problem, but why is this happening? when do printwriter decide that is time to clean its buffer without i tell it when? and why when i close or flush the printwriter this problem won't happen?..thanks!"
