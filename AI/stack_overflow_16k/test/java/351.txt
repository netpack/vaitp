"how can i compare 2 linkedlists but taking object as parameter? this is my school assignment. i don't know how to solve it because the method equals only allows passing one parameter. please giving me some hints. ..here is the question: ..add the method public boolean equals(object other) that returns true when the contents of 2 alist objects are the same. note that 2 alist objects are the same if they have the same number of items and each item in one object is equal to the item in its corresponding location in the other object (15 points)...the method above must be added in llist2.blank..alist class..public class alist&lt;t&gt; implements listinterface&lt;t&gt; {.private t[] list;   // array of list entries.private int numberofentries;.private static final int default_initial_capacity = 25;..public alist() {.    this(default_initial_capacity); // call next constructor.} // end default constructor..public alist(int initialcapacity) {.    numberofentries = 0;.    // the cast is safe because the new array contains null entries.    @suppresswarnings(""unchecked"").    t[] templist = (t[]) new object[initialcapacity];.    list = templist;.} .........llist2.blank..public class llist2&lt;t&gt; implements listinterface&lt;t&gt; {.private node firstnode; // head reference to first node.private node lastnode;  // tail reference to last node.private int numberofentries;..public llist2() {.    clear();.} // end default constructor..public final void clear() // notice clear is not final in interface and that is ok.{.    firstnode = null;.    lastnode = null;.    numberofentries = 0;.} ......"
