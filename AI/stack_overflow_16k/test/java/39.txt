"call static method on parameter without instantiating class in argument i've really been getting into tdd and i've started using mockito in junit to improve my ability to test code.  i'm really loving mockito!..i've noticed that i have to change the way i think about coding, like passing collaborators as much as possible into methods and limiting work done in constructors wherever possible...the following scenario warranted some advice from the experts here on so...say i have a method, that's going to call some static methods on a certain class. e.g...public void method(){.    otherclass.staticmethod();.}...this is generally bad, but it's needed in my scenario.  to make the code more testable in my unit tests i'd like to avoid the dependency on otherclass and pass it as an argument...this doesn't work as it yields a compile time error...public void method(class&lt;? extends otherclass&gt; util){.    util.staticmethod();.}.....method(otherclass.class);...this would work, but i don't like the instantiating otherclass if i don't have to, as it's solely a class of static utility like methods:..public void method(otherclass util){.     util.staticmethod();.}.....method(new otherclass());...my question to you:.is there a better more preferable way to accomplish this without using the new keyword?"
