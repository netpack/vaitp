"set the location of the button the output of this code has two buttons which placed side by side. i want to change the button location like the position is top and bottom. how to set the location of the button. which part of this code do i need to modify?..import blank.awt.*;.import blank.awt.event.*;.import blankx.swing.*;./**. * custom graphics example: using key/button to move a line left or right..*/.@suppresswarnings(""serial"").public class cgmovealine extends jframe {.    // name-constants for the various dimensions.    public static final int canvas_width = 400;.    public static final int canvas_height = 140;.    public static final color line_color = color.black;.    public static final color canvas_background = color.cyan;..    // the line from (x1, y1) to (x2, y2), initially position at the center.    private int x1 = canvas_width / 2;.    private int y1 = canvas_height / 8;.    private int x2 = x1;.    private int y2 = canvas_height / 8 * 7;..    private drawcanvas canvas; // the custom drawing canvas (extends jpanel)..    **strong text**/** constructor to set up the gui */.    public cgmovealine() {.  // set up a panel for the buttons.  jpanel btnpanel = new jpanel(new flowlayout());.  jbutton btnleft = new jbutton(""move left "");.  btnpanel.add(btnleft);.  btnleft.addactionlistener(new actionlistener() {.     public void actionperformed(actionevent e) {.        x1 -= 10;.        x2 -= 10;.        canvas.repaint();.        requestfocus(); // change the focus to jframe to receive keyevent.     }.  });.  jbutton btnright = new jbutton(""move right"");.  btnpanel.add(btnright);.  btnright.addactionlistener(new actionlistener() {.     public void actionperformed(actionevent e) {.        x1 += 10;.        x2 += 10;.        canvas.repaint();.        requestfocus(); // change the focus to jframe to receive keyevent.     }.  });..  // set up a custom drawing jpanel.  canvas = new drawcanvas();.  canvas.setpreferredsize(new dimension(canvas_width, canvas_height));..  // add both panels to this jframe.  container cp = getcontentpane();.  cp.setlayout(new borderlayout());.  cp.add(canvas, borderlayout.center);.  cp.add(btnpanel, borderlayout.south);..  // ""this"" jframe fires keyevent.  addkeylistener(new keyadapter() {.     @override.     public void keypressed(keyevent evt) {.        switch(evt.getkeycode()) {.           case keyevent.vk_left:.              x1 -= 10;.              x2 -= 10;.              repaint();.              break;.           case keyevent.vk_right:.              x1 += 10;.              x2 += 10;.              repaint();.              break;.        }.     }.  });..  setdefaultcloseoperation(jframe.exit_on_close); // handle the close button.  settitle(""move a line"");.  pack();           // pack all the components in the jframe.  setvisible(true); // show it.  requestfocus();   // set the focus to jframe to receive keyevent.   }..   /**.* drawcanvas (inner class) is a jpanel used for custom drawing.*/.   class drawcanvas extends jpanel {.       @override.        public void paintcomponent(graphics g) {.        super.paintcomponent(g);.        setbackground(canvas_background);.        g.setcolor(line_color);.        g.drawline(x1, y1, x2, y2); // draw the line.        }.   }..   /** the entry main() method */.   public static void main(string[] args) {.      // run gui codes on the event-dispatcher thread for thread safety.      swingutilities.invokelater(new runnable() {.         @override.         public void run() {.             new cgmovealine(); // let the constructor do the job.         }.      });.    }. }...i want to make button something like this position"
