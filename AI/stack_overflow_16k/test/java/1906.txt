"overriding a chained method let's have class a with a method useful for chaining:..class a {.  a foo() {.    // do stuff.    return this;.  }.}...you could now do a.foo().foo().foo() (think: builder pattern). let class b extend it:..class b extends a {.}..b b;...now invoking b.foo() returns actual type b, but declared a. therefore i cannot write:..b other = b.foo();...i would have to write either:..b other = (b) b.foo();...or override foo() in b:..class b extends a {.  @override.  b foo() {.    super.foo();.    return this;.  }.}...is there a nice way to do this?"
