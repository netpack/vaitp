"is concurrenthashmap analogy to copyonwritearraylist i use copyonwritearraylist quite alot. this is especially true when...threads perform a lot of read.threads perform a little of write...however, i will use collections.synchronizedlist() when...threads perform a little of read.threads perform a lot of write...this is because according to copyonwritearraylist blank doc...  a thread-safe variant of arraylist in which all mutative operations.  (add, set, and so on) are implemented by making a fresh copy of the.  underlying array..  .  this is ordinarily too costly, ......when comes to concurrenthashmap, i was wondering can i still apply the same logic in choosing concurrenthashmap over collections.synchronizedmap()? ..does concurrenthashmap make a fresh copy of underlying data structure, every-time i perform write operation? will it perform badly than collections.synchronizedmap, if there is more write operation than read?"
