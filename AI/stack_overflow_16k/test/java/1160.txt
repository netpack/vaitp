"== vs equals method for doubles i have this class..public class point {.    private double[] coordinates;.    private int dimension;..    public point(double[] coordinates) {.        dimension = coordinates.length;.        this.coordinates = new double[dimension];..        for(int i = 0; i &lt; dimension; i++).            this.coordinates[i] = coordinates[i];...    }..    public double getcoord(int n) {.        if(n &lt; 0 || n &gt; dimension -1 ){.            throw new runtimeexception(""error de coordenadas"");.        }.        return coordinates[n];.    }.    public int getdim() {.        return dimension;.    }..    public boolean equals(object p1){.        if( (p1 instanceof point) ){.            point p = (point) p1;.            int n = p.getdim();.            if(getdim() == n).            {.                for(; n &gt; 0; n--).                {.                    if( double.valueof(this.getcoord(n-1)) != double.valueof(p.getcoord(n-1)) ) // &lt;------- bad line!.                    {.                        system.out.println(""checking coord "" + (n-1));.                        system.out.println(""coord "" + (n-1) + "" p = "" + double.valueof(this.getcoord(n-1)));.                        system.out.println(""coord "" + (n-1) + "" p2 = "" + double.valueof(p.getcoord(n-1)));.                        return false;.                    }.                }.            }.            return true;.        }.        return false;.    }.}...and this main..public class figuretest {.    public static void main(string[] args){.        double[] coord1 = {2.0,3.3};.        double[] coord2 = {2.0,3.3};.        point p = new point(coord1);.        point q = new point(coord2);.        system.out.println(p.equals(q));.    }.}...i can't understand why this p.equals(q) returns false! it goes inside the if( double.valueof(... but then prints that both coordinates are equal. it's the same if i remove the double.valueof. the only way it worked was when i put ! if(this.getcoord(n-1).equal(p.getcoord(n-1)), but i don't understand why the others don't work."
