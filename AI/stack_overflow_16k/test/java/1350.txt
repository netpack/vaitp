"dynamically return a class of a type determined during a method call via class.forname() i know that i can dynamically determine the return type of a method by passing in a class and then declaring that class as the return type, as in the following example:..public static &lt;returntype&gt; returnclass dynamicconstructor (class&lt;returntype&gt; returnclass){.    //dynamically construct an object using a zero parameter constructor.    return (returnclass) object;.}...the code that would be called would be:..dynamicconstructor.construct(constructedclass);...this code is nice because when you're calling the method in code, it's simple and encapsulated. however, i would like to take it one step further and make the parameter a string containing the full class name, then have the method determine the type of the object via class.forname(classname). the trouble with this is that i can't figure out how to return the type as determined later on. using method overloading, the code i have is:..public static ?????? dynamicconstructor (string classname){.    try {.        return dynamicconstructor(class.forname(classname));.    } catch (classnotfoundexception e) {.        system.out.println(""could not find class at path "" + classpath);.        e.printstacktrace();.        return null;.    }.}...the problem is that i have no idea what to put in the part labeled ??????. i want to be able to somehow reference the class determined by class.forname(classname). is this possible?"
