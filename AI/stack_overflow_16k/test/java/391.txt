"confused about instance initialization i have a class, such as:..public class test {..    private static thread athread;.    private static loopy aloop;..    public test() {.    }..    public static void main(string[] args) {..        startupdate();.        stopupdate();.        startupdate();..    }..    public static void startupdate() {..        aloop = new loopy();.        athread = new thread(aloop);..        athread.start();..    }..    public static void stopupdate() {..        if (athread != null) {.            aloop.finish();.        }.    }.}...with runnable code that looks like:..public class loopy implements runnable {..    private static string status = ""r"";       // run..    public void run() {..        while (status.equals(""r"")) {.            // do stuff.        }.    }..    public void finish() {.        status = ""f"";                         // end run.    }.}...calling startupdate works the first time...stopupdate works as planned...calling startupdate the second time results in no work being done as status is still equal to ""f"" from the stop, even though i am starting a new instance of loopy which (to me) should have the default value of ""r""...is the status persisting across instances, or have i made an error i haven't spotted yet?"
