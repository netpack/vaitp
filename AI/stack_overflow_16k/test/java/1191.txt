"abstracttablemodel producing classcastexception can anyone spot what's wrong with this code?  i'm getting ""blank.lang.classcastexception: blank.lang.string cannot be cast to blank.lang.boolean.""..class mytablemodel extends abstracttablemodel {.    private string[] columnnames = {""name"",""state"",""start"",""stop"",""terminate""};.    private list&lt;row&gt; rows = new arraylist&lt;row&gt;();..    @override.    public int getcolumncount() {.        return columnnames.length;.    }..    @override.    public int getrowcount() {.        return rows.size();.    }..    public string getcolumnname(int col) {.        return columnnames[col];.    }..    @override.    public object getvalueat(int row, int col) {.        row targetrow = rows.get(row);.        switch (col) { .            case 1: return targetrow.name;.            case 2: return targetrow.state;.            case 3: return targetrow.start;.            case 4: return targetrow.stop;.            case 5: return targetrow.terminate;.        }.        return null;.    }..    /*.     * jtable uses this method to determine the default renderer/.     * editor for each cell.  if we didn't implement this method,.     * then the last column would contain text (""true""/""false""),.     * rather than a check box..     */.    @override.    public class&lt;?&gt; getcolumnclass(int c) {.        class[] coltypes = new class[]{string.class,string.class,boolean.class,boolean.class,boolean.class};.        return coltypes[c];.    }..    @override.    public boolean iscelleditable(int row, int col) {..        string state = (string)getvalueat(row,1);.        if (state.equals(""running"")) {      //instance is running.            if (col==2) return false;       //disable start checkbox if already running.            else if (col&gt;2) return true;    //enable stop and terminate.        }.        else {                                      //instance is stopped.            if (col==3) return false;               //disable stop checkbox.            else if (col==2 || col==4) return true; //enable start and terminate.        }.        return false;.    }..    @override.    public void setvalueat(object value, int row, int col) {.        row targetrow = rows.get(row);.        switch (col) {.            case 1: targetrow.name      = (string)value;  break;.            case 2: targetrow.state     = (string)value;  break;.            case 3: targetrow.start     = (boolean)value; break;.            case 4: targetrow.stop      = (boolean)value; break;.            case 5: targetrow.terminate = (boolean)value; break;.        }.        firetablecellupdated(row, col);.    }..    public void addrow(string name, string state) {.        row row = new row(name,state);.        rows.add(row);.    }..    private class row {.        string  name;.        string  state;.        boolean start;.        boolean stop;.        boolean terminate;..        public row(string name, string state) {.            this.name = name;.            this.state = state;.            this.start = new boolean(false);.            this.stop = new boolean(false);.            this.terminate = new boolean(false);.        }.    }.}...here's the method that implements it:..private void inittable() {.    tbinstances = new jtable(new mytablemodel());.    tbinstances.setpreferredscrollableviewportsize(new dimension(500, 70));.    tbinstances.setfillsviewportheight(true);.    populateinstancestable();..    //create the scroll pane and add the table to it..    jscrollpane scrollpane = new jscrollpane(tbinstances);.    tabstartstop.setlayout(new borderlayout());.    tabstartstop.add(scrollpane);.}...and here is the code that populates the table.  instances is an arraylist that is populated elsewhere...private void populateinstancestable() {.    string name = null;.    for (instance instance:instances) {.        list&lt;tag&gt; tags = instance.gettags();.        for (tag tag: tags) {.            if (tag.getkey().equals(""name"")) {.                name = tag.getvalue();.                break;.            }.        }.        string state = instance.getstate().getname();.        if (name.contains(""_e360"")) {.            mytablemodel model = (mytablemodel)tbinstances.getmodel();.            model.addrow(name,state);.            system.out.println(""added row: name=""+name+"", state=""+state);.        }.    }.}...any ideas?..here is the stack trace:...  added row: name=acme_e360_server, state=running...exception in thread ""awt-eventqueue-0"" blank.lang.classcastexception: blank.lang.string cannot be cast to blank.lang.boolean.    at blankx.swing.plaf.synth.synthtableui$synthbooleantablecellrenderer.gettablecellrenderercomponent(synthtableui.blank:730).    at blankx.swing.jtable.preparerenderer(jtable.blank:5723) .    at blankx.swing.plaf.synth.synthtableui.paintcell(synthtableui.blank:683).    at blankx.swing.plaf.synth.synthtableui.paintcells(synthtableui.blank:580).    at blankx.swing.plaf.synth.synthtableui.paint(synthtableui.blank:364).    at blankx.swing.plaf.synth.synthtableui.update(synthtableui.blank:275).    at blankx.swing.jcomponent.paintcomponent(jcomponent.blank:780).    at blankx.swing.jcomponent.paint(jcomponent.blank:1056).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jviewport.paint(jviewport.blank:728).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.painttooffscreen(jcomponent.blank:5210).    at blankx.swing.repaintmanager$paintmanager.paintdoublebuffered(repaintmanager.blank:1579).    at blankx.swing.repaintmanager$paintmanager.paint(repaintmanager.blank:1502).    at blankx.swing.repaintmanager.paint(repaintmanager.blank:1272).    at blankx.swing.jcomponent._paintimmediately(jcomponent.blank:5158).    at blankx.swing.jcomponent.paintimmediately(jcomponent.blank:4969).    at blankx.swing.repaintmanager$4.run(repaintmanager.blank:831).    at blankx.swing.repaintmanager$4.run(repaintmanager.blank:814).    at blank.security.accesscontroller.doprivileged(native method).    at blank.security.protectiondomain$blanksecurityaccessimpl.dointersectionprivilege(protectiondomain.blank:80).    at blankx.swing.repaintmanager.paintdirtyregions(repaintmanager.blank:814).    at blankx.swing.repaintmanager.paintdirtyregions(repaintmanager.blank:789).    at blankx.swing.repaintmanager.prepaintdirtyregions(repaintmanager.blank:738).    at blankx.swing.repaintmanager.access$1200(repaintmanager.blank:64).    at blankx.swing.repaintmanager$processingrunnable.run(repaintmanager.blank:1732).    at blank.awt.event.invocationevent.dispatch(invocationevent.blank:311).    at blank.awt.eventqueue.dispatcheventimpl(eventqueue.blank:756).    at blank.awt.eventqueue.access$500(eventqueue.blank:97).    at blank.awt.eventqueue$3.run(eventqueue.blank:709).    at blank.awt.eventqueue$3.run(eventqueue.blank:703).    at blank.security.accesscontroller.doprivileged(native method).    at blank.security.protectiondomain$blanksecurityaccessimpl.dointersectionprivilege(protectiondomain.blank:80).    at blank.awt.eventqueue.dispatchevent(eventqueue.blank:726).    at blank.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.blank:201).    at blank.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.blank:116).    at blank.awt.eventdispatchthread.pumpeventsforhierarchy(eventdispatchthread.blank:105).    at blank.awt.eventdispatchthread.pumpevents(eventdispatchthread.blank:101).    at blank.awt.eventdispatchthread.pumpevents(eventdispatchthread.blank:93).    at blank.awt.eventdispatchthread.run(eventdispatchthread.blank:82).exception in thread ""awt-eventqueue-0"" blank.lang.classcastexception: blank.lang.string cannot be cast to blank.lang.boolean.    at blankx.swing.plaf.synth.synthtableui$synthbooleantablecellrenderer.gettablecellrenderercomponent(synthtableui.blank:730).    at blankx.swing.jtable.preparerenderer(jtable.blank:5723).    at blankx.swing.plaf.synth.synthtableui.paintcell(synthtableui.blank:683).    at blankx.swing.plaf.synth.synthtableui.paintcells(synthtableui.blank:580).    at blankx.swing.plaf.synth.synthtableui.paint(synthtableui.blank:364).    at blankx.swing.plaf.synth.synthtableui.update(synthtableui.blank:275).    at blankx.swing.jcomponent.paintcomponent(jcomponent.blank:780).    at blankx.swing.jcomponent.paint(jcomponent.blank:1056).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jviewport.paint(jviewport.blank:728).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.painttooffscreen(jcomponent.blank:5210).    at blankx.swing.repaintmanager$paintmanager.paintdoublebuffered(repaintmanager.blank:1579).    at blankx.swing.repaintmanager$paintmanager.paint(repaintmanager.blank:1502).    at blankx.swing.repaintmanager.paint(repaintmanager.blank:1272).    at blankx.swing.jcomponent._paintimmediately(jcomponent.blank:5158).    at blankx.swing.jcomponent.paintimmediately(jcomponent.blank:4969).    at blankx.swing.repaintmanager$4.run(repaintmanager.blank:831).    at blankx.swing.repaintmanager$4.run(repaintmanager.blank:814).    at blank.security.accesscontroller.doprivileged(native method).    at blank.security.protectiondomain$blanksecurityaccessimpl.dointersectionprivilege(protectiondomain.blank:80).    at blankx.swing.repaintmanager.paintdirtyregions(repaintmanager.blank:814).    at blankx.swing.repaintmanager.paintdirtyregions(repaintmanager.blank:789).    at blankx.swing.repaintmanager.prepaintdirtyregions(repaintmanager.blank:738).    at blankx.swing.repaintmanager.access$1200(repaintmanager.blank:64).    at blankx.swing.repaintmanager$processingrunnable.run(repaintmanager.blank:1732).    at blank.awt.event.invocationevent.dispatch(invocationevent.blank:311).    at blank.awt.eventqueue.dispatcheventimpl(eventqueue.blank:756).    at blank.awt.eventqueue.access$500(eventqueue.blank:97).    at blank.awt.eventqueue$3.run(eventqueue.blank:709).    at blank.awt.eventqueue$3.run(eventqueue.blank:703).    at blank.security.accesscontroller.doprivileged(native method).    at blank.security.protectiondomain$blanksecurityaccessimpl.dointersectionprivilege(protectiondomain.blank:80).    at blank.awt.eventqueue.dispatchevent(eventqueue.blank:726).    at blank.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.blank:201).    at blank.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.blank:116).    at blank.awt.eventdispatchthread.pumpeventsforhierarchy(eventdispatchthread.blank:105).    at blank.awt.eventdispatchthread.pumpevents(eventdispatchthread.blank:101).    at blank.awt.eventdispatchthread.pumpevents(eventdispatchthread.blank:93).    at blank.awt.eventdispatchthread.run(eventdispatchthread.blank:82).exception in thread ""awt-eventqueue-0"" blank.lang.classcastexception: blank.lang.string cannot be cast to blank.lang.boolean.    at blankx.swing.plaf.synth.synthtableui$synthbooleantablecellrenderer.gettablecellrenderercomponent(synthtableui.blank:730).    at blankx.swing.jtable.preparerenderer(jtable.blank:5723).    at blankx.swing.plaf.synth.synthtableui.paintcell(synthtableui.blank:683).    at blankx.swing.plaf.synth.synthtableui.paintcells(synthtableui.blank:580).    at blankx.swing.plaf.synth.synthtableui.paint(synthtableui.blank:364).    at blankx.swing.plaf.synth.synthtableui.update(synthtableui.blank:275).    at blankx.swing.jcomponent.paintcomponent(jcomponent.blank:780).    at blankx.swing.jcomponent.paint(jcomponent.blank:1056).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jviewport.paint(jviewport.blank:728).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.paintchildren(jcomponent.blank:889).    at blankx.swing.jcomponent.paint(jcomponent.blank:1065).    at blankx.swing.jcomponent.painttooffscreen(jcomponent.blank:5210).    at blankx.swing.repaintmanager$paintmanager.paintdoublebuffered(repaintmanager.blank:1579).    at blankx.swing.repaintmanager$paintmanager.paint(repaintmanager.blank:1502).    at blankx.swing.repaintmanager.paint(repaintmanager.blank:1272).    at blankx.swing.jcomponent._paintimmediately(jcomponent.blank:5158).    at blankx.swing.jcomponent.paintimmediately(jcomponent.blank:4969).    at blankx.swing.repaintmanager$4.run(repaintmanager.blank:831).    at blankx.swing.repaintmanager$4.run(repaintmanager.blank:814).    at blank.security.accesscontroller.doprivileged(native method).    at blank.security.protectiondomain$blanksecurityaccessimpl.dointersectionprivilege(protectiondomain.blank:80).    at blankx.swing.repaintmanager.paintdirtyregions(repaintmanager.blank:814).    at blankx.swing.repaintmanager.paintdirtyregions(repaintmanager.blank:789).    at blankx.swing.repaintmanager.prepaintdirtyregions(repaintmanager.blank:738).    at blankx.swing.repaintmanager.access$1200(repaintmanager.blank:64).    at blankx.swing.repaintmanager$processingrunnable.run(repaintmanager.blank:1732).    at blank.awt.event.invocationevent.dispatch(invocationevent.blank:311).    at blank.awt.eventqueue.dispatcheventimpl(eventqueue.blank:756).    at blank.awt.eventqueue.access$500(eventqueue.blank:97).    at blank.awt.eventqueue$3.run(eventqueue.blank:709).    at blank.awt.eventqueue$3.run(eventqueue.blank:703).    at blank.security.accesscontroller.doprivileged(native method).    at blank.security.protectiondomain$blanksecurityaccessimpl.dointersectionprivilege(protectiondomain.blank:80).    at blank.awt.eventqueue.dispatchevent(eventqueue.blank:726).    at blank.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.blank:201).    at blank.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.blank:116).    at blank.awt.eventdispatchthread.pumpeventsforhierarchy(eventdispatchthread.blank:105).    at blank.awt.eventdispatchthread.pumpevents(eventdispatchthread.blank:101).    at blank.awt.eventdispatchthread.pumpevents(eventdispatchthread.blank:93).    at blank.awt.eventdispatchthread.run(eventdispatchthread.blank:82)"
