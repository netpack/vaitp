"binary search integers from text file in blank i have a sorted list of integers in a txt file (hosted publicly online), and i need to ask the user to give a number to search for in that list of integers via a binary search...i'm in an intro to algorithms course and i am new to blank...with the code i've got now i get these errors:..exception in thread ""main"" blank.lang.indexoutofboundsexception: index: 52, size: 22.    at blank.util.arraylist.rangecheck(unknown source).    at blank.util.arraylist.get(unknown source).    at binsearch4.main(binsearch4.blank:67)...*the while loop (listed below) is line 67..can't seem to figure out what the problem is here. as well i am sure even some of the things i've got working could be implemented more efficiently. any help anyone can provide would be greatly appreciated.../*  binary search algorithm. * . * - import a sorted list of integers of an unknown length. * . * - ask the user for a number to search for (searchvalue). * . * - run a binary search on the list of integers without simply using binarysearch. * . * - return the index of an occurrence of the search number (searchvalue). * . * - or -1 if the target is not found.. * . * . */...import blank.io.filenotfoundexception;.import blank.io.ioexception;.import blank.net.url;.import blank.util.scanner;.import blank.util.arraylist;..public class binsearch4 {..public static void main(string[] args) throws ioexception {..    url url = new url(""http://m.uploadedit.com/ba3a/1423978916244.txt""); .    arraylist&lt;integer&gt; arrlist = new arraylist&lt;integer&gt;(); .    int searchvalue;.    int low;.    int high;.    int mid;.    int not_found = -1;.    scanner in = new scanner(system.in);..    system.out.println(""enter your number to search for:"");.    searchvalue = in.nextint(); .    system.out.println(searchvalue);..    try {..        scanner scr = new scanner(url.openstream()); ..        while (scr.hasnextline()) {.            int i = scr.nextint();.            arrlist.add(i);.        }.        scr.close();.        system.out.println(arrlist);...    }..    catch (filenotfoundexception e) {.        e.printstacktrace();.    }.....    low = arrlist.get(0);                      .    system.out.println(low);.    high = arrlist.get(arrlist.size() - 1);.    system.out.println(high);.    mid = (low + high) / 2;..    while (low &lt;= high &amp;&amp; arrlist.get(mid) != searchvalue) {.        if (arrlist.get(mid) &lt; searchvalue) {.            low = mid + 1;.        } else  {.            high = mid - 1;.        }.        mid = (low + high) / 2;.    }.    if (low &gt; high) {.        mid = not_found;.    }.    system.out.println(mid);.. }.}...the list of numbers in the text file are:.[-2, 3, 6, 9, 11, 22, 24, 31, 35, 43, 48, 52, 62, 65, 69, 70, 73, 83, 86, 90, 100, 107]"
