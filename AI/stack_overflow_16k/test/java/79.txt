"i keep getting string index out of bounds exception and i have no idea why here is my input file..so i am reading in a .txt file and i keep getting a string index out of bounds exception. i have been trying to find duplicate words and keep the array sorted as i add words to it. i thought my problem was trying to sort and search the array when it has no words or only one word in it. .the line with the ** in front of it is the problem line. its line 129..import blank.io.*;.import blank.util.scanner;.import blank.util.regex.*;..public class builddict .{..    static string dict[] = new string[20];.    static int index = 0;..    public static void main(string args []).    {.        readin();.        print();.    }..    public static void readin().    {.        file infile = new file(""carol.txt"");.        try.        {.            scanner scan = new scanner(infile);..            while(scan.hasnext()).            {.                string word = scan.next();.                if(!character.isuppercase(word.charat(0))).                {.                    checkregex(word);   .                }.            }..            scan.close();.        }.        catch(ioexception e) .        {.            system.out.println(""error"");.        }.    }..    public static void addtodict(string word).    {.            if(index == dict.length).            {.                string newar[] = new string[dict.length*2];.                for(int i = 0; i &lt; index; i++).                {.                    newar[i] = dict[i];.                }...                if(dict.length &lt; 2).                {.                    newar[index] = word;.                    index++;.                }.                else.                {.                    bubblesort(word);.                    if(!wordhasduplicate(word)).                    {.                        newar[index] = word;.                        index++;.                    }.                }..                dict = newar;.            }.            else.            {.                dict[index] = word;.                index++;.            }.....    }..    public static void checkregex(string word).    {..        string regex = (""[^a-za-z]"");.        pattern check = pattern.compile(regex);.        matcher regexmatcher = check.matcher(word);..        if(!regexmatcher.find()).        {.            addtodict(word);.        }.    }..    public static void print().    {.        try .        {.            filewriter outfile = new filewriter(""dict.txt"");..            for(int i = 0; i &lt; index; i++).            {.                outfile.write(dict[i]);.                outfile.write("" n "");.            }..            outfile.close();.        } ..        catch (ioexception e) .        {.            system.out.println(""error "");.        }.    }..    public static void bubblesort(string word).    {.        boolean swap = true;.        string temp;.        int wordbeforeindex = 0;.        string wordbefore;..        while(swap) .        {.            swap = false;..            wordbefore = dict[wordbeforeindex];.   for(int i = 0; (i &lt; word.length()) &amp;&amp; (i &lt; wordbefore.length()) i++).            {.                **if(word.charat(i) &lt; wordbefore.charat(i))**.                {.                    temp = wordbefore;.                    dict[wordbeforeindex] = word;.                    dict[wordbeforeindex++] = temp;.                    wordbeforeindex++;.                    swap = true;.                }.            }.        }.    }..    public static boolean wordhasduplicate(string word).    {.        int low = 0;.        int high = dict.length - 1;.        int mid = low + (high - low) /2;..        while (low &lt;= high &amp;&amp; dict[mid] != word).        {.            if (word.compareto(dict[mid]) &lt; 0).            {.                low = mid + 1;.            }.            else.            {.                high = mid + 1;.            }.        }.        return true;......    }.}...error is shown below:..exception in thread ""main"" blank.lang.stringindexoutofboundsexception:        string index out of range: 2.at blank.lang.string.charat(string.blank:658).at builddict.bubblesort(builddict.blank:129).at builddict.addtodict(builddict.blank:60).at builddict.checkregex(builddict.blank:90).at builddict.readin(builddict.blank:30).at builddict.main(builddict.blank:14)"
