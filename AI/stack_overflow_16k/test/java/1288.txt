"my blank program displays error: ioexception: stream closed - but i don't have a close() call on this stream this is my main function:..package com.ss.lms;..import blank.io.bufferedreader;.import blank.io.ioexception;.import blank.io.inputstreamreader;..public class main {.    // if we close this once... it seems to be closed forever....    public static bufferedreader stdinbufreader = new bufferedreader(new inputstreamreader(system.in));..    // our main function.    public static void main(string[] args) {.        menuinterface.stdinbufreader = stdinbufreader;.        while (menuinterface.displaymenu()) { }..        /*try { stdinbufreader.close(); }.        catch (ioexception e) { e.printstacktrace(); }*/.    }.}...i've gone through the menuinterface class and did a text search for ""close"", and nowhere in there does anything get closed...this is where the error occurs:..package com.ss.lms;..import blank.io.bufferedreader;.import blank.io.ioexception;.import blank.io.inputstreamreader;..public class main {.    // if we close this once... it seems to be closed forever....    public static bufferedreader stdinbufreader = new bufferedreader(new inputstreamreader(system.in));..    // our main function.    public static void main(string[] args) {.        menuinterface.stdinbufreader = stdinbufreader;.        while (menuinterface.displaymenu()) { }..        /*try { stdinbufreader.close(); }.        catch (ioexception e) { e.printstacktrace(); }*/.    }..}...this is the stack trace:..would you like to perform another operation? (y/n): blank.io.ioexception: stream closed.    at blank.base/blank.io.bufferedinputstream.getbufifopen(bufferedinputstream.blank:169).    at blank.base/blank.io.bufferedinputstream.read(bufferedinputstream.blank:335).    at blank.base/sun.nio.cs.streamdecoder.readbytes(streamdecoder.blank:297).    at blank.base/sun.nio.cs.streamdecoder.implread(streamdecoder.blank:339).    at blank.base/sun.nio.cs.streamdecoder.read(streamdecoder.blank:188).    at blank.base/blank.io.inputstreamreader.read(inputstreamreader.blank:185).    at blank.base/blank.io.bufferedreader.fill(bufferedreader.blank:161).    at blank.base/blank.io.bufferedreader.readline(bufferedreader.blank:326).    at blank.base/blank.io.bufferedreader.readline(bufferedreader.blank:392).    at com.ss.lms.menuinterface.promptcontinue(menuinterface.blank:108).    at com.ss.lms.menuinterface.displaymenu(menuinterface.blank:47).    at com.ss.lms.main.main(main.blank:14).exception in thread ""main"" blank.lang.nullpointerexception.    at com.ss.lms.menuinterface.isyesorno(menuinterface.blank:121).    at com.ss.lms.menuinterface.promptcontinue(menuinterface.blank:111).    at com.ss.lms.menuinterface.displaymenu(menuinterface.blank:47).    at com.ss.lms.main.main(main.blank:14)...here is the entire file for menuinterface.blank:..package com.ss.lms;..import blank.io.bufferedreader;.import blank.io.ioexception;.import blank.io.inputstreamreader;.import blank.util.hashmap;.import blank.util.map;..import com.ss.lms.controllers.authorcontroller;..public class menuinterface {.    // our list of entities.    public static string[] entities = {""author"", ""book"", ""publisher""};..    // maps a character to an action..    // e.g. 'c' =&gt; ""create"".    public static map&lt;string, string&gt; crudoptions = new hashmap&lt;string, string&gt;();..    // if we close this once... it seems to be closed forever....    public static bufferedreader stdinbufreader;..    public static boolean displaymenu() {.        string selectedmodel;.        string selectedaction;..        try {.            selectedmodel = promptmodel();.            selectedaction = promptcrudaction();.            switch (selectedmodel) {.                case ""author"":.                    switch (selectedaction) {.                        case ""create"":.                            authorcontroller.create();.                            break;.                        case ""read"":.                            system.out.print(""enter author id for retrieval: "");.                            integer authorid = integer.parseint(stdinbufreader.readline());.                            authorcontroller.read(authorid);.                            break;.                    }.                    break;.            }.        } catch (ioexception e1) {.            e1.printstacktrace();.        }..        return promptcontinue();.    }..    // prompt the user for which entity they want to perform actions with..    public static string promptmodel() throws ioexception {.        string selectedentity;.        int selectionnum = 0;..        // prompt the user.        system.out.println(""1 - author"");.        system.out.println(""2 - book"");.        system.out.println(""3 - publisher"");.        system.out.print(""nchoose an entity: "");..        selectionnum = integer.parseint(stdinbufreader.readline());..        selectedentity = entities[selectionnum - 1];..        system.out.println(""nyou selected: "" + selectedentity + ""n"");.        return selectedentity;.    }..    // prompts the user for a character input, returns a string representation.    // of the action they want to perform. e.g. ""create"", ""read""....    public static string promptcrudaction() throws ioexception {.        string selectedchar = null;.        string selectedaction;..        crudoptions.put(""c"", ""create"");.        crudoptions.put(""r"", ""read"");.        crudoptions.put(""u"", ""update"");.        crudoptions.put(""d"", ""destroy"");..        do {.            system.out.println(""(c)reate"");.            system.out.println(""(r)ead"");.            system.out.println(""(u)pdate"");.            system.out.println(""(d)estroy"");.            system.out.print(""nchoose an action: "");..            try { selectedchar = stdinbufreader.readline(); }.            catch (ioexception e) { e.printstacktrace(); }..            selectedaction = crudoptions.get(selectedchar);.            if (selectedaction == null) {.                system.out.println(""ninvalid option. try again.n"");.            }..        } while (selectedaction == null);..        system.out.println(""nyou selected: "" + selectedaction);..        return selectedaction;.    }..    public static boolean promptcontinue() {.        string userinput = null;.        boolean continueselected = null;.        do {.            system.out.print(""would you like to perform another operation? (y/n): "");..            // keep getting weird errors saying the stream is closed when it isn't.            try {  userinput = stdinbufreader.readline().tolowercase(); }.            catch (ioexception e) { e.printstacktrace(); }..            if (!isyesorno(userinput)) {.                system.out.println(""please enter either y or n."");.            }..            continueselected = userinput == ""y"" ? true : false;.        } while (!isyesorno(userinput));.        return continueselected;.    }..    public static boolean isyesorno(string userinput) {.        return userinput.tolowercase() == ""y"" || userinput.tolowercase() == ""n"";.    }.}"
