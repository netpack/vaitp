"final fields state when accessed from subclass i see a strange behaviour which seems shouldn't happen according to jmm..i have class b which extends class a, a final protected field in a which is initialized in a constructor accessed by class b in its constructor...but, in very rare cases i get a npe when accessed in b..any ideas?..part of the code:..class asyncreplicationsourcegroup extends abstractreplicationsourcegroup{..    public asyncreplicationsourcegroup(dynamicsourcegroupconfigholder groupconfig){.        super(groupconfig);.        createreplicationchannels();  .    }..    protected void createreplicationchannels(){.        //....        specificlogger.finest(""created channel"");  // this is where the npe is thrown from.        //....    }.}..abstract class abstractreplicationsourcegroup{..    protected final logger specificlogger;..    public abstractreplicationsourcegroup(dynamicsourcegroupconfigholder groupconfigholder){.        specificlogger = logger.getlogger(constants.logger_replication_group + ""."" + _groupconfigholder.getconfig().getname());.        //....    }..}"
