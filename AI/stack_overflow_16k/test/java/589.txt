"override and overload my question is: why a4.equals(a2) causes method1 to execute and not method2?.a2 points to aa and it is the parameter..and the same about a2.equals(b1)..it seems that when it doesnt points to bb(to the class where all the equals methods are) it will cause only method1 to execute and it doesnt matter which type of parameter a method gets...public class aa.{.    public int getval().    {.       return 5;.    }.}..public class bb extends aa.{.    private string _st = ""bb"";..    public boolean equals(object ob)  //method1.    {.      system.out.println(""method 1"");.        if((ob != null) &amp;&amp; (ob instanceof bb)).        {.            if(_st.equals(((bb)ob)._st) &amp;&amp; (getval() == ((bb)ob).getval())).                return true;.        }.        return false;.    }...    public boolean equals(aa ob)  //method2.    {.    system.out.println(""method 2"");.        if((ob != null) &amp;&amp; (ob instanceof bb)).        {.            if(_st.equals(((bb)ob)._st) &amp;&amp; (getval() == ((bb)ob).getval())).            return true;.        }.        return false;.    }..    public boolean equals(bb ob)  //method3.    {.        system.out.println(""method 3"");.        if(ob != null).            if(_st.equals(((bb)ob)._st) &amp;&amp; (getval() == ((bb)ob).getval())).                return true;..        return false;.    }.}..public class driver.{.    public static void main(string[] args).    {.        aa a2 = new bb();.        aa a4 = new bb();   .        bb b1 = new bb();  ..        system.out.println(a4.equals(a2));.        system.out.println(a2.equals(b1));.    }.}"
