"how to deal with reading and processing huge text files without getting outofmemoryerror i wrote some straightforward code to read text files (>1g) and do some processing on strings...however, i have to deal with blank heap space problems since i try to append strings (using stringbuilder) that are getting to big on memory usage at some point. i know that i can increase my heap space with, e. g. '-xmx1024', but i would like to work with only little memory usage here.how could i change my code below to manage my operations?..i am still a blank novice and maybe i made some mistakes in my code which may seem obvious to you...here's the code snippet:..    private void setinputdata() {..    pattern pat = pattern.compile(""regex"");.    bufferedreader br = null;.    matcher mat = null;..    try {.        file myfile = new file(""myfile"");.        filereader fr = new filereader(myfile);..        br = new bufferedreader(fr);.        string line = null;.        string appendthisstring = null;.        string processthisstring = null;.        stringbuilder stringbuilder = new stringbuilder();..        while ((line = br.readline()) != null) {..            mat = pat.matcher(line);..            if (mat.find()) {.                appendthisstring = mat.group(1);.            }..            if (line.contains(""|"")) {.                processthisstring = line.replace("" "", """").replace(""|"", ""t"");.                stringbuilder.append(processthisstring).append(""t"").append(appendthisstring);.                stringbuilder.append(""n"");.            }.        }.//      dosomethingwiththestring(stringbuilder.tostring());.    } catch (exception ex) {.        ex.printstacktrace();.    } finally {.        try {.            if (br != null)br.close();.        } catch (ioexception ex) {.            ex.printstacktrace();.        }.    }.}...here's the error message:...exception in thread ""main"" blank.lang.outofmemoryerror: blank heap space.    at blank.util.arrays.copyof(arrays.blank:2367).    at blank.lang.abstractstringbuilder.expandcapacity(abstractstringbuilder.blank:130).    at blank.lang.abstractstringbuilder.ensurecapacityinternal(abstractstringbuilder.blank:114).    at blank.lang.abstractstringbuilder.append(abstractstringbuilder.blank:415).    at blank.lang.stringbuilder.append(stringbuilder.blank:132).    at test.setinputdata(test.blank:47).    at test.go(test.blank:18).    at test.main(test.blank:13)"
