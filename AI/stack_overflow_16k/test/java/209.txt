"how to address this warning? - is a raw type. references to generic type should be parameterized i have created a custom table cell in blankfx, pursuant to this answer, so i can have different font styling for different parts of the cell's text...i use this custom table cell on two different types of tableviews:tableview&lt;track&gt; and tableview&lt;album&gt;...both track and album implement the interface albuminfosource:..public interface albuminfosource {.    public string getalbumtitle();.    public string getfullalbumtitle();.    public string getreleasetype();.    public string getdiscsubtitle();.    public integer getdisccount();.    public integer getdiscnumber();..}...my custom tablecell is typed with that albuminfosource, so it can render cells for both a tableview&lt;album&gt; and a tableview&lt;track&gt;. ..here is the basic code:..public class formattedalbumcell&lt;t, s&gt; extends tablecell &lt;albuminfosource, string&gt; {..    private textflow flow;.    private label albumname, albumtype, albumdisc;..    public formattedalbumcell () {.        /* do constructor stuff */.    }..    @override.    protected void updateitem ( string text, boolean empty ) {.        super.updateitem ( text, empty );.        /* do pretty rendering stuff */.    }.}...and then i apply it to a column like this:..tablecolumn&lt;album, string&gt; albumcolumn;.albumcolumn = new tablecolumn&lt;album, string&gt;( ""album"" );.albumcolumn.setcellfactory( e -&gt; new formattedalbumcell () );...which works perfectly fine, but i get a warning on that last line, which says:...  warning: formattedalbumcell is a raw type. references to generic type formattedalbumcell&lt; t ,s > should be parameterized...if i change my formattedalbumcell class such that it extends tablecell &lt;album, string&gt;, then the warning goes away. but then i can't use the formattedalbumcell for a tableview&lt;track&gt;, i would have to duplicate the formattedalbumcell class make it extend tablecell, which seems dumb to me. ..is there a way to get these parameters straight without creating two separate classes?  it seems like the issue comes from the paramaterizing stuff having trouble with interfaces."
