"misleading behavior with jar in blank with abstract classes i faced a very strange behavior that i created 2 class in a package say aa.bb..code of class aa..         package aa.bb;.         public abstract class aa {.        abstract void deep();.          }...code of class bb..       public class bb extends aa{.            @override.        void deep() {.        }.            }...now i created another package say bbc.cc and created one class inside this package...code of class cc..          package bbc.cc;.           import aa.bb.bb;.           public class cc extends bb {.            }...now the cc class is showing the error this class must implement the inherited abstract method aa.deep(), but cannot override it since it is not visible from cc. either make the type abstract or make the inherited method visible..now a make the jar file of package aa.bb and deleted the aa.bb package from the source code. and added the jar file in the build path. after this the error is coming as previously. now i added the source code of bb class in aa.bb package and error resolved..i do not know what is happening behind this...this is the final directory structure of the project..please help me to clear the concept"
