"solitaire game using tads(stack, queue, deque, list ) in blank - classe implemented by stack i've already started work on drafting game solitario with tads and patterns of software in blank and i already started to make the stack interface..public interface stack &lt;e&gt; {..// number of elements in the stack.     public int size ();..// does not contain elements?.     public boolean isempty ();..// returns next object to come out without removing.     public e peek () throws emptystackexception;..// add new stack element.      public void push (e elem) throws fullstackexception;..// pops or drop next element.     public e pop () throws emptystackexception;..}...and here i have a calsss lotofcard has a collection of cards and have the lifo behavior and you can check if a lot of cards is empty, put or add new cards in the lot and removing cards from the stack...public class lotofcards implements stack &lt;card&gt; {.     //.     private hashset &lt;card&gt; cards;//contains collections of card..     //.     public lotofcards() {.         this.cards= new hashset &lt;&gt; ();.     }..     //.     public hashset &lt;card&gt; getcards () {.         return cards;.     }..     //.     public void setcards (hashset &lt;card&gt; cards) {.         this.cards= cards;.     }..     // return number of elements in the stack.     override.     public int size() {.         return this.cards.size();.     }..     // does not contain elements?.     override.     public boolean isempty () {.         return (this.cards.isempty () || this.cards == null) ;.     }..     // add new stack element.     override.     public void push (card element) throws fullstackexception{.         this.cards.add (element);.     }..     // returns next object to come out without removing.     override.     public card peek () throws emptystackexception{//doubt here.         if (this.isempty ()) {.             throw new emptystackexception ();.         }.         return (card) null;.     }...     // pops or drop element.     override.     public card pop () throws emptystackexception{//doubt here..         if (this.isempty ()) {.             throw new emptystackexception ();.         }.         // returns the first letter is removed.         card card = this.peek();..         // after the card is removed.         this.cards.remove (card); // doubt..         // return card.         return card;..     }...and i doubt the class lotofcard in methods peek() and pop(), ie, the method peek () returns the top object () and the method pop () since i've been deleting a chart object within the collection of cards and i have no idea how to do, thanked some explanation about creating the algorithm to develop these methods"
