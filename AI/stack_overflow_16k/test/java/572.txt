"how to wait current thread execution and execute another thread completedly public class thread1 extends thread {.    public void run() {.         testfun1();.    }..     public void testfun1(){.          for(int i=1;i&lt;10;i++){.              try {  .                  thread.sleep(1000);.                      system.out.println(""from testfun1() = ""+i);.               } catch (exception e) {.           }  ..        }..      } ..    }..class thread2 extends thread {.    public void run(){.        testfun2();.    }..    public synchronized void testfun2() {.        try {.              for(int i=20;i&lt;=25;i++){.               thread.sleep(1000);  .               system.out.println(""from testfun2() = ""+i);           .        }.      }.    }.....mainclass.blank..public class mainclass{.    public static void main(string[] args) {.       try{ .        thread1 thread1 = new thread1();.        thread2 thread1 = new thread2();.        thread1.start();.        thread.sleep(3000);.        thread1.join();.        thread2.start();.     }catch(exception e){.     }..   }.}.....required output:..from testfun1() 1.from testfun1() 2.from testfun1() 3.from testfun2() 20.from testfun2() 21.from testfun2() 22.from testfun2() 23.from testfun2() 24.from testfun2() 25.from testfun1() 4.from testfun1() 5.from testfun1() 6.from testfun1() 7.from testfun1() 8.from testfun1() 9.from testfun1() 10...but didn't get the above out put."
