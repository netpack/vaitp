"time complexity for blank arraylist remove(element) i was trying to graph the time complexity of arraylist's remove(element) method..my understanding is that it should be o(n), however, its giving me a o(1). can anyone point out what i did wrong here?? .    thank you in advance...   public static void arraylistremovetiming(){.    long starttime, midpointtime, stoptime;.    // spin the computer until one second has gone by, this allows this.    // thread to stabilize;.    starttime = system.nanotime();.    while (system.nanotime() - starttime &lt; 1000000000) {.    }.    long timestoloop = 100000;.    int n;.    arraylist&lt;integer&gt; list = new arraylist&lt;integer&gt;();..    // fill up the array with 0 to 10000.    for (n = 0; n &lt; timestoloop; n++).        list.add(n);..    starttime = system.nanotime();.    for (int i = 0; i &lt; list.size() ; i++) {.        list.remove(i);..        midpointtime = system.nanotime();.        // run an loop to capture other cost..        for (int j = 0; j &lt; timestoloop; j++) {..        }.        stoptime = system.nanotime();..        // compute the time, subtract the cost of running the loop.        // from the cost of running the loop...        double averagetime = ((midpointtime - starttime) - (stoptime - midpointtime)).                / timestoloop;..        system.out.println(averagetime);.    }...}"
