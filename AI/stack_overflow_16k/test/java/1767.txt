"two players fighting with multiple attack options blank i am trying to create a game where there is two fighters. a warrior versus gladiator. .both of the fighters have 1000 health. when the battle starts, player 1 gets to choose between three options: 1 - thrust 2 - slice 3 - drink potion... ..lets say player 1 chooses thrust and attacks 55 (using random) then my code prints player 2's new health which is now 945. then it's player two's turn and lets say he does the exact same thing and takes off some health from player 1. ..now it will go back to player 1's turn. this is where it gets complicated. now player 1 attacks for the second time and lets say he does 80 damage. it will print out that player two has 920 health. it doesn't have the previous attack subtracted off. i want them to fight until one of there health goes down to 0 and dies. ..so how can i fix my code so the health doesn't restart at 1000 after each attack and it subtracts from the new health that was already been lowered from the previous attacks. like this: 1000 hp - 55 = 945 hp - 80 = 865 hp etc. i' new to coding. started in january. any help would be amazing!..import blank.util.random;..public class duel .{.random hit = new random();.random hit1 = new random();..int newhealth, newhealth1;.int outcome, outcome1, outcome2, outcome3;.int attack, attack1;.int defense, defense1;.int health, health1;..void calculatewinner().{.  do.  { .     outcome = hit1.nextint(100) - hit1.nextint(15);.     newhealth1 = health1 - outcome;..     system.out.println(""your attack does "" + outcome + "" damage!"");.     system.out.println("""");.     system.out.print(""warrior health: "" + newhealth1 + ""n"");.     break;.  }     ..  while(newhealth1 == 0);.  //system.out.println(""gladiator is the winner!"");..}..void calculatewinner1().{.  do.  { .     outcome1 = hit.nextint(100) - hit.nextint(15);.     newhealth = health - outcome1;..     system.out.println(""your attack does "" + outcome1 + "" damage!"");.     system.out.println("""");.     system.out.print(""gladiator health: "" + newhealth + ""nn"");.     break;.  }     ..  while(newhealth == 0);.  //system.out.println(""warrior is the winner!"");.}..void calculatehealth().{.  do.  { .     newhealth = health + hit.nextint(35);.     system.out.println(""you drink the potion."");.     system.out.println(""your health is now at "" + newhealth + ""!"");.     break;.  }     ..  while(newhealth1 &gt; 0 &amp;&amp; newhealth &gt; 0);.}.. void calculatehealth1().{.  do.  { .     newhealth1 = health1 + hit.nextint(35);.     system.out.println(""you drink the potion."");.     system.out.println(""your health is now at "" + newhealth1 + ""!"");.     break;.  }     ..  while(newhealth1 &gt; 0 &amp;&amp; newhealth &gt; 0);.}.}...import blank.util.random;.import blank.util.scanner;..public class duelmain .{.public static void main(string[] args) .{.  // random + scanner.  random hit = new random();.  random hit1 = new random();.  scanner input = new scanner(system.in);..  // string + int.  string player1name = """";.  string player2name = """";.  int restart;.  int player1option;.  int player2option;.  int fight = 0;..  duel warrior = new duel();.  duel gladiator = new duel();..  gladiator.attack = hit.nextint(100);.  gladiator.defense = hit.nextint(15);.  gladiator.health = 1000;..  warrior.attack1 = hit1.nextint(100);.  warrior.defense1 = hit1.nextint(15);;.  warrior.health1 = 1000;..  // printing names.  system.out.print(""gladiator enter name: "");.  player1name = input.nextline();..  system.out.print(""warrior enter name: "");.  player2name = input.nextline();..  while(fight == 0).  {.     // choose moves (player1).     system.out.printf(""%n%s, choose your move! n"", player1name);.     system.out.println(""1: thrust 2: slice 3: drink potion"");.     player1option = input.nextint();..     if(player1option == 1).     {.        system.out.printf(""you thrust your sword at %s! n"", player2name);..        warrior.attack1 = hit1.nextint(100);.        warrior.defense1 = hit1.nextint(15);.        warrior.health1 = 1000;.        warrior.calculatewinner();.     }..     if(player1option == 2).     {.        system.out.printf(""you slice your sword at %s! n"", player2name);..        warrior.attack1 = hit1.nextint(100);.        warrior.defense1 = hit1.nextint(15);.        warrior.health1 = 1000;.        warrior.calculatewinner();.     }..     if(player1option == 3).     {.        warrior.calculatehealth();.     }..     // choose moves (player2).     system.out.printf(""%n%s, choose your move! n"", player2name);.     system.out.println(""1: thrust 2: slice 3: drink potion"");.     player2option = input.nextint();..     if(player2option == 1).     {.        system.out.printf(""you thrust your sword at %s! n"", player1name);..        gladiator.attack = hit.nextint(100);.        gladiator.defense = hit.nextint(15);.        gladiator.health = 1000;.        gladiator.calculatewinner1();.     }..     if(player2option == 2).     {.        system.out.printf(""you slice your sword at %s! n"", player1name);..        gladiator.attack = hit.nextint(100);.        gladiator.defense = hit.nextint(15);.        gladiator.health = 1000;.        gladiator.calculatewinner1();;.     }..     if(player2option == 3).     {.        gladiator.calculatehealth1();.     }.  }        .}.}"
