"how to reference a method from a class with < > and pass in variables i'm trying to reference the method shortestpathbetween(n from, n to) from the class ..public class dijkstragraphanalyzer&lt;n extends node&lt;n, e&gt;, e extends edge&lt;n, e&gt;&gt; implements graphanalyzer&lt;n, e&gt;...in the class mainmenucontroller to pass in variables so that the method can run on input derived from choiceboxes...i've tried creating a local variable of the class but it then wants me to add the exact same parameters &lt;n, e&gt; to the mainmenucontroller..mainmenucontroller.blank..public &lt;mappoint&gt; list&lt;mappoint&gt; shortestpathbetween(mappoint from, mappoint to) {.  from = (mappoint) mainmenucontroller.source;.  to = (mappoint) mainmenucontroller.target;.  list&lt;mappoint&gt; shortestpathbetween = dga.shortestpathbetween(from, to);.  shortestpathbetween = shortestpathbetween(from, to);..  system.out.println(""source : n"" + from + "" target : n"" + to);..  return shortestpathbetween;.}...dijsktragraphanalyzer.blank..public class dijkstragraphanalyzer&lt;n extends node&lt;n, e&gt;, e extends edge&lt;n, e&gt;&gt; implements graphanalyzer&lt;n, e&gt; {..    private final graph&lt;n, e&gt; graph;.    // store the default node/distance mapping for efficiency..    private final map&lt;n, double&gt; defaultnodedistancemapping;.    private final map&lt;n, n&gt; defaultpreviousnodemapping;..    public dijkstragraphanalyzer(final graph&lt;n, e&gt; graph) {.        this.graph = graph;.        this.defaultnodedistancemapping = new hashmap&lt;n, double&gt;();.        this.defaultpreviousnodemapping = new hashmap&lt;n, n&gt;();.        for (final n n : this.graph.getnodes()) {.            this.defaultnodedistancemapping.put(n, double.max_value);.            this.defaultpreviousnodemapping.put(n, null);.        }.    }..    @override.    public list&lt;n&gt; shortestpathbetween(n from, n to) {.        final map&lt;n, double&gt; nodedistancemapping = buildnodedistancemapping(from);.        final map&lt;n, n&gt; previousnodemapping = new hashmap&lt;n, n&gt;(defaultpreviousnodemapping);..        final set&lt;n&gt; unsettled = new hashset&lt;n&gt;();.        unsettled.add(from); ...........ideally, i want to be able to pass in two mappoints into the method so that it can run in its respective class."
