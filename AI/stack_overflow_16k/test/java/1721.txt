"could not load com.sun.org.apache.xalan.internal.xsltc.trax.transformerfactoryimpl i have written a class to pre-compile the xsl stylesheets and load them into the application. this class runs in a thread. but i am getting the following error while starting tomcat. ..jul 16, 2016 11:21:36 pm org.apache.catalina.loader.webappclassloader loadclass.info: illegal access: this web application instance has been stopped already.  could not load com.sun.org.apache.xalan.internal.xsltc.trax.transformerfactoryimpl.  the eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact..blank.lang.illegalstateexception.    at org.apache.catalina.loader.webappclassloader.loadclass(webappclassloader.blank:1600).    at org.apache.catalina.loader.webappclassloader.loadclass(webappclassloader.blank:1559).    at blankx.xml.transform.factoryfinder.getproviderclass(factoryfinder.blank:109).    at blankx.xml.transform.factoryfinder.newinstance(factoryfinder.blank:144).    at blankx.xml.transform.factoryfinder.find(factoryfinder.blank:231).    at blankx.xml.transform.transformerfactory.newinstance(transformerfactory.blank:101).    at ccbeans.compilestylesheet$pollthread.run(compilestylesheet.blank:187)...here i am also attaching the code snippet..public void run() {.    while (development) {.        try {..            string str1 = ""blankx.xml.transform.transformerfactory"";.            string str2 = ""com.sun.org.apache.xalan.internal.xsltc.trax.transformerfactoryimpl"";.            blank.util.properties properties = system.getproperties();.            properties.put(str2, str2);.            system.setproperties(properties);..            transformerfactory tfactory = transformerfactory.newinstance();.            // transformerfactory tfactory = transformerfactory.newinstance(""com.sun.org.apache.xalan.internal.xsltc.trax.transformerfactoryimpl"", null);.            file lfilexsldirectory = new file(ifilexsldirectorypath);..            if (lfilexsldirectory.isdirectory()) {.                string[] lfilelistarray = lfilexsldirectory.list();.                int lfilelistcount = lfilelistarray.length;..                for (int i = 0; i &lt; lfilelistcount; i++) {.                    if (lfilelistarray[i].endswith("".xsl"")) {.                        file lfilexsl = new file(ifilexsldirectorypath + ""/"" + lfilelistarray[i]);..                        if (ihashstyletimestamp.get(ifilexslhttppath + ""/"" + lfilelistarray[i]) == null) {.                            templates templates = tfactory.newtemplates(new streamsource(ifilexslhttppath + ""/"" + lfilelistarray[i]));.                            ihashstyleobject.put(ifilexslhttppath + ""/"" + lfilelistarray[i], templates);.                            ihashstyletimestamp.put(ifilexslhttppath + ""/"" + lfilelistarray[i], new long(lfilexsl.lastmodified()));.                        } else {.                            long filelastmodifiedtime = ((long) ihashstyletimestamp.get(ifilexslhttppath + ""/"" + lfilelistarray[i])).longvalue();..                            if (lfilexsl.lastmodified() &gt; filelastmodifiedtime) {.                                templates templates = tfactory.newtemplates(new streamsource(ifilexslhttppath + ""/"" + lfilelistarray[i]));.                                ihashstyleobject.put(ifilexslhttppath + ""/"" + lfilelistarray[i], templates);.                                ihashstyletimestamp.put(ifilexslhttppath + ""/"" + lfilelistarray[i], new long(lfilexsl.lastmodified()));.                                system.out.println(""refreshing file :: "" + lfilelistarray[i]);.                            }.                        }.                    }.                }.            }.            sleep(new long(utility.propval.getpropval(""wsc.xsldirectoryrefreshtime"")).longvalue());.        } catch (exception e) {.            e.printstacktrace();.        }.    }.}"
