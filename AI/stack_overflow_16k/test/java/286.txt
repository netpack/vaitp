"doubt in build.xml file in apache-ant1.6.5 i have used collections in my code with generics. when try to compile that blank file in build.xml, its showing error at generics and its saying its not a statement. i am using apache-ant-1.6.5 and  i have installed jdk 1.5 only . i know generic will support in jdk1.5 but its showing error. the below is the error i am getting for the code..code :..map&lt;string, string&gt; inputconfigmap = .    new linkedhashmap&lt;string, string&gt;();...exception :..compile:.    [mkdir] created dir: d:genericpreprocessorsourceclasses.    [blankc] compiling 49 source files to d:genericpreprocessorsourceclasses.    [blankc] d:genericpreprocessorsourcesrccomdnbgenericpreprocessorfileprocessorfixedlength.fileprocessor.blank:187: not a statement.    [blankc] map&lt;string, string&gt; inputconfigmap = .                new linkedhashmap&lt;string, string&gt;();.....i did as per your suggestion but i got the following in the console...console :.d:genericpreprocessorsource>ant.buildfile: build.xml.     [echo] jvm version is 1.5.     [echo] target compilation is ${ant.build.blankc.target}..clean:.   [delete] deleting directory d:genericpreprocessorsourceclasses..cleanjar:..compile:.    [mkdir] created dir: d:genericpreprocessorsourceclasses.    [blankc] compiling 49 source files to d:genericpreprocessorsourceclasses.    [blankc] blankc: invalid target release: 1.5.    [blankc] usage: blankc  .    [blankc] where possible options include:.    [blankc]   -g                        generate all debugging info.    [blankc]   -g:none                   generate no debugging info.    [blankc]   -g:{lines,vars,source}    generate only some debugging info.    [blankc]   -nowarn                   generate no warnings.    [blankc]   -verbose                  output messages about what the compiler is doing.    [blankc]   -deprecation              output source locations where deprecated apis are used.    [blankc]   -classpath          specify where to find user class files.    [blankc]   -sourcepath         specify where to find input source files.    [blankc]   -bootclasspath      override location of bootstrap class files.    [blankc]   -extdirs            override location of installed extensions.    [blankc]   -d             specify where to place generated class files.    [blankc]   -encoding       specify character encoding used by source files.    [blankc]   -source          provide source compatibility with specified release.    [blankc]   -target          generate class files for specific vm version.    [blankc]   -help                     print a synopsis of standard options..build failed"
