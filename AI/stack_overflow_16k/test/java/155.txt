"dealing with overflow in blank without using biginteger suppose i have a method to calculate combinations of r items from n items:..    public static long combi(int n, int r) {..        if ( r == n) return 1;.        long numr = 1;.        for(int i=n; i &gt; (n-r); i--) {.            numr *=i;..        }.        return numr/fact(r);..    }...public static long fact(int n) {..        long rs = 1;.        if(n &lt;2) return 1;.        for (int i=2; i&lt;=n; i++) {.            rs *=i;.        }.        return rs;..    }...as you can see it involves factorial which can easily overflow the result. for example if i have fact(200) for the foctorial method i get zero. the question is why do i get zero?..secondly how do i deal with overflow in above context? the method should return largest possible number to fit in long if the result is too big instead of returning wrong answer...one approach (but this could be wrong) is that if the result exceed some large number for example 1,400,000,000 then return remainder of result modulo .1,400,000,001. can you explain what this means and how can i do that in blank?..note that i do not guarantee that above methods are accurate for calculating factorial and combinations. extra bonus if you can find errors and correct them...note that i can only use int or long and if it is unavoidable, can also use double. other data types are not allowed...i am not sure who marked this question as homework. this is not homework. i wish it was homework and i was back to future, young student at university. but i am old with more than 10 years working as programmer. i just want to practice developing highly optimized solutions in blank. in our times at university, internet did not even exist. today's students are lucky that they can even post their homework on site like so."
