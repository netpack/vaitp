"to find a subset from a set whose sum equals to zero? i have a set of integers like this..{1,4,5,2,7,8,-3,-5,-6,9,3,-7,-1,5,6} ...the set can contain any number of items as input is taken from the user i need to find all possible subsets from this set whose sum equals to zero for example in this case in the above set the subsets will be..{(1,2,-3)}..{(1,-1)}..{(3,-3)}..{(5,-5)}..etc etc..i have tried this code but it is not returning me answer when i am setting target equal to zero...import blank.util.arraylist;.import blank.util.arrays;..class sumset {..    static void sum_up_recursive(arraylist&lt;integer&gt; numbers, int target,.                                 arraylist &lt;integer&gt; partial).    {.        int s=0;.        for (int x: partial) s += x;.        if (s == target).            system.out.println(""sum(""+arrays.tostring(partial.toarray())+"")=""+target);..        if (s &gt;= target).            return;..        for(int i=0;i&lt;numbers.size();i++) {.            arraylist&lt;integer&gt; remaining = new arraylist&lt;integer&gt;();.            int n = numbers.get(i);.            for (int j=i+1; j&lt;numbers.size();j++) remaining.add(numbers.get(j));.            arraylist&lt;integer&gt; partial_rec = new arraylist&lt;integer&gt;(partial);.            partial_rec.add(n);.            sum_up_recursive(remaining,target,partial_rec);.        }.    }..    static void sum_up(arraylist&lt;integer&gt; numbers, int target) .    {.        sum_up_recursive(numbers,target,new arraylist&lt;integer&gt;());.    }..    public static void main(string args[]) {.        integer[] numbers = {3,4,6,4,5,2,6};.        int target = 9;.        sum_up(new arraylist&lt;integer&gt;(arrays.aslist(numbers)),target);.    }.}"
