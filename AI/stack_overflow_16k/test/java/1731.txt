"creating hashset object in method decreases the stack memory in blank i have read that only primitives are stored in stack memory and objects are stored in heap memory. in the following program i am recursively calling a method to check the maximum stack size before stackoverflow error occurs...public class maxstacksize {.static int i =0;.public static void main(string[] args) {.    method1();.}..public static void method1().{.    i++;.    system.out.println(i);.    method1();.}.}...here the max output for 'i' is 53481...if i add hashset object to the method and populate it:..public class maxstacksize {.static int i =0;.public static void main(string[] args) {.    method1();.}.public static void method1().{.    hashset&lt;string&gt; set = new hashset&lt;string&gt;();.    set.add(""one"");.    set.add(""two"");.    set.add(""three"");.    set.add(""four"");.    set.add(""five"");.    set.add(""six"");.    set.add(""seven"");.    set.add(""eight"");.    set.add(""nine"");..    i++;.    system.out.println(i);.    method1();.}.}...the max output for 'i' is 25403...for both the cases vm arg is -xss5m...if only primitives are stored on stack why does the stacksize decrease when object of hashset is created."
