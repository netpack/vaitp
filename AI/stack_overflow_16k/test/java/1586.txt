"reset button in blank i'm trying to create a reset button for a grid of rectangles. when running it, you'll be able to click rectangles and turn them blue - the reset button is supposed to turn them all back to white. i'm stuck at what to put in the reset method in lifeform. it currently does nothing. i appreciate any help!..class grid:..import blank.awt.borderlayout;.import blank.awt.color;.import blank.awt.graphics;.import blank.awt.point;.import blank.awt.rectangle;.import blank.awt.event.actionevent;.import blank.awt.event.actionlistener;.import blank.awt.event.mouseevent;.import blank.awt.event.mouselistener;.import blank.util.arraylist;..import blankx.swing.jbutton;.import blankx.swing.timer;.import blankx.swing.jframe;.import blankx.swing.jpanel;..public class grid extends jpanel{..private int a = 50;.private int b = 50;.private lifeform[][] life;.private lifeform ife;..private boolean[][] life = new boolean[a][b];.private timer t;.private jbutton reset;.private jbutton run;.private jpanel panel;.grid(){.    ife = new lifeform();..    run = new jbutton(""run"");.    reset = new jbutton(""reset"");.    reset.addactionlistener(new resetlistener());.//creates grid of rectangles.    life = new lifeform[a][b];..    int ypos = 0;.    for(int i = 0; i &lt; life.length; i++){.        int xpos = 0;.        for(int j = 0; j &lt; life[0].length; j++){..            rectangle r = new lifeform();.            r.setbounds(xpos, ypos, 50, 50);.            life[i][j] = (lifeform) r;.            xpos += 50;.        }.        ypos += 50;.    }.    t = new timer(64, new movement());.    this.addmouselistener(new mouse());.}..public void paintcomponent(graphics g){..    for(lifeform[] n : life){.        for(lifeform lf : n){.            g.setcolor(lf.getcolor());.            g.fillrect((int)lf.getx(), (int)lf.gety(), (int)lf.getwidth(), (int)lf.getheight());.        }.    }..    for (int i = 0; i &lt;= 25; i++){.        g.drawline(0, 50*i, 1500, 50*i);.        g.setcolor(color.black);.    }.    for (int i = 0; i &lt;= 25; i++){.        g.drawline(50*i, 0, 50*i, 750);.        g.setcolor(color.black);.    }.}..private jframe creategrid(){.    jpanel panel = new jpanel();.    jframe frame = new jframe(""alveolate"");.    frame.add(run, borderlayout.north);.    frame.add(panel, borderlayout.center);.    frame.add(reset, borderlayout.south);.    frame.add(this);.    frame.setdefaultcloseoperation(jframe.exit_on_close);.    frame.setsize(700,700);.    frame.setvisible(true);     .    return frame;.}..public class mouse implements mouselistener{.//turns rectangles blue.    public void mouseclicked(mouseevent e) {.        for(int i = 0; i &lt; life.length; i++){.            for(int j = 0; j &lt; life[i].length; j++){.                lifeform spot = life[i][j];..                if (spot.contains(e.getpoint())) {.                    color b = color.blue;.                    if( spot.getcolor().equals( color.blue ) ) {.                        b = color.white;.                    }.                    spot.setcolor(b);.                }   .            }.        }..        repaint();.    }..    public void mousepressed(mouseevent e) {}.    public void mousereleased(mouseevent e) {}.    public void mouseentered(mouseevent e) {}       .    public void mouseexited(mouseevent e) {}..}.public class movement implements actionlistener{.    public void actionperformed ( actionevent e ){..            }       .            updateui();..        }                   .        repaint();.    }.}.public void starttimer(){.    t.start();.}..public void stoptimer(){.    t.stop();.}.private class resetlistener implements actionlistener{.    public void actionperformed( actionevent e ) {.        ife.reset();.        updateui();.        }.}.public static void main(string[] args) {..    grid abc = new grid();.    abc.creategrid();.    abc.starttimer();.    }.}...class lifeform:..import blank.awt.color;.import blank.awt.rectangle;..public class lifeform extends rectangle {.    private color c;.    public lifeform() {.        c = color.white;.    }.    public lifeform(int width){.        reset();.    }.    public color getcolor() {.        return c;.    }..    public boolean setcolor( color c ) {.        boolean rtn = false;.        if( c != null ) {.            this.c = c;.            rtn = true;.        }..        return rtn;.    }.    public void reset() {..    }..    }"
