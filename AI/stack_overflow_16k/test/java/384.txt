"is there a blank function that can change the mouse coordinates to the center of a screen when the mouse enters the screen? i know there is a mouse motion listener that checks when the mouse enters the application. is there a way to make the mouse move to the center of the screen when the user enters the application? an example of this is from the game minecraft. once the user hovers the mouse pointer inside the application than the mouse points is in the center of the screen and any mouse movements dictate what you are looking at. i am trying to achieve this, but i only want to know how to make the mouse coordinates change to the origin of the screen without making the mouse pointer itself go to the screen from physical human action...    public static void main(string[] args) {.    jogl3dapp display = new jogl3dapp();.    // make display listen for mouse events.    display.addmouselistener(display);.    // make display listen for keyboard events.    display.addkeylistener(display);.    // uncomment the following line to create a timer object and start it.    // generating events, one every 30 milliseconds.    new timer(10, display).start();.    // make display listen for the opengl graphics events.    display.addgleventlistener(display);..    // create a gui window.    jframe window = new jframe(""jogl application"");.    // make window contain the display object.    window.setcontentpane(display);..    window.setlocation(100, 100);.    window.setvisible(true);.    // a jframe object's size includes the window decorations, like.    // the title bar and borders. so if you want a 500x500 drawing space,.    // you must set the window size a little bit bigger than that. insets.    // gives.    // you the size of the decorations, so you make the window of size.    // 500x500.    // plus the size of the decorations..    insets insets = window.getinsets();.    window.setsize(500 + insets.right + insets.left, 500 + insets.top.            + insets.bottom);..    // kills thread (in particular the timer event thread) when window is.    // closed.    window.setdefaultcloseoperation(jframe.exit_on_close);..}.     public void display(glautodrawable drawable) {..    // get the opengl context object.    gl gl = drawable.getgl();.    glu glu = new glu();.    glut glut = new glut();.    // clear the window.    gl.glclear(gl.gl_color_buffer_bit | gl.gl_depth_buffer_bit);..    // replace what follows with your own drawing code.    gl.glmatrixmode(gl.gl_modelview);.    gl.glloadidentity();. }"
