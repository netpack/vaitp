"how to define/implement this interface with generics in a simpler way? i'm working in a genetic algorithm and i want it as abstract as possible to be able to reuse the ga. i defined and implemented a population interface, and well it works, but i'm sure that's not the best way to do it. i don't have great experience with blank generics. is there an easier way of defining and implementing the population interface (e.g. maybe avoid a cast conversion? avoid a new list in getchromosomes() ?)..public interface population.{.    void addchromosomes(list&lt;? extends chromosome&gt; chromosomes);..    list&lt;chromosome&gt; getchromosomes();..    // more code here ....}..public class tsppopulation implements population.{.    private list&lt;tspchromosome&gt; chromosomes;..    @override.    public void addchromosomes(list&lt;? extends chromosome&gt; chromosomes) {.        for (chromosome chromosome : chromosomes) {.            this.chromosomes.add((tspchromosome) chromosome);.        }.    }..    @override.    public list&lt;chromosome&gt; getchromosomes() {.        list&lt;chromosome&gt; newlist = new arraylist&lt;chromosome&gt;();.        for (tspchromosome chromosome : chromosomes) {.            newlist.add(chromosome);.        }.        return newlist;.    }.}"
