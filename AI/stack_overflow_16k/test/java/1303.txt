"incorrect return in levenshtien distance algorithm this is levenshtien algorithm in dynamic programming strategy. in my code when str1 want convert to str2 must changed.insertion 1 char has 2 cost and delete 1 char cost 1.the example of code must print 2 but print 1.why?thanks for any help...public class distance {.    static int min(int x,int y).    {.        if (x &lt; y ) return x;.        else return y;.    }..    static int editdistdp(string str1, string str2, int m, int n).    {.        int dp[][] = new int[m+1][n+1];..        for (int i=0; i&lt;=m; i++).        {.            for (int j=0; j&lt;=n; j++).            {.                if (i==0).                    dp[i][j] = j;  // min. operations = j..                else if (j==0).                    dp[i][j] = i; // min. operations = i..                else if (str1.charat(i-1) == str2.charat(j-1)).                    dp[i][j] = dp[i-1][j-1];..                else.                    dp[i][j] = min(dp[i][j-1] + 2,  // insert.                            dp[i-1][j] + 1);  // remove.            }.        }..        return dp[m][n];.    }..    public static void main(string args[]).    {.        string str1 = ""pple"";.        string str2 = ""apple"";.        system.out.println( editdistdp( str1 , str2 , str1.length(), str2.length()) );.    }.}"
