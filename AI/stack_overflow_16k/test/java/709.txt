"letter positions, figuring out a smart way for a word guess game i am learning blank and in the process i am writing a word guess game. .now mine problem is the following:..assume the word to guess is ""lingo"". and assume ""oodle"" is a word you suggested..on processing your guess, the following should be output:.correct letters: none.wrong position letters: 'o' at first position, 'l' at fourth position.note that the second 'o' should not be mentioned as a letter in the wrong position, as we already have reported an 'o' prior to that. so if you enter 'ooooo', only the last letter should be highlighted as it is in the correct position, and if you enter 'ooooz', only the first letter should be highlighted, and not the other 'o's. ..i have tried some solutions but all seem to fail. i know there is a smart/not so complex way to do this. so could anyone help me with that? ..the code:..// / indicates whether a letter has been accounted for.// / while highlighting letters in the guess that are not.// / in the correct position.private boolean[][] marked = new boolean[wordlength][5];..// / holds which all letters have been solved so far.private boolean[][] solved = new boolean[wordlength][6];...public void checkletters() {..    for (int j = 0; j &lt; currentattempt; j++) {.        tempword = list.get(j); //the guessed words..        for (int i = 0; i &lt; wordlength; i++) {..            if (tempword.charat(i) == currentpuzzleword.charat(i)) {.                solved[i][j] = true; //currentpuzzleword is the string with the hidden word..            } else if (currentpuzzleword.indexof(tempword.charat(i)) != -1) {.                marked[i][j] = true;.            }.        }.    }"
