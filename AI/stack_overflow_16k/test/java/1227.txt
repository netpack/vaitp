"is there a way to specify the interface/class being overrode using blank's override annotation? some classes have many interfaces that they inherit from...i want to make it explicit in my overrided methods what interface or class my method overrides so that when i look back at my code a month from now, i don't have to do a linear search over every interface being implemented and class being extended to find which interface or class the method is being overrode for...situation:..class foo extends bar implements foo1, foo2, bar1, bar2.{.    public foo(){}..    @override.    void foo1() {}..    @override.    void foo2() {}..    @override.    void bar1() {}..    @override.    void bar2() {}.}...i want to do something like:..class foo extends bar implements foo1, foo2, bar1, bar2.{.    public foo(){}..    @overrides(source=""foo2"").    void foo1() {}..    @overrides(source=""bar1"").    void foo2() {}..    @overrides(source=""bar2"").    void bar1() {}..    @overrides(source=""foo1"").    void bar2() {}.}...is there a way to accomplish this?..solution (thanks nikem):..can create a custom annotation (overrides.blank)..public @interface overrides .{.    string source() default """"; .}"
