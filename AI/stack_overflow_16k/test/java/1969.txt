"arraylist is adding only one element in my main method:..public class tester {..    public static void main(string[] args).    {.          iminimap&lt;string,integer&gt; map = new simplelistmm&lt;string,integer&gt;();.            map.put(""b"",15);.            map.put(""a"",5);.            map.put(""r"",-5);.            map.put(""d"",55);.            map.put(""poems"",128);.            map.put(""plays"",256);..            system.out.println(map.size());.            system.out.println(map.keys());..    }.}...when map calls put and adds elements in arraylist, in my method it only adds one element. when i call map.size it returs me only 1 and when i call map.keys it returns only ""b"". here's the code:.class simplelistmm..    public class simplelistmm&lt;k,v&gt; extends abstractlistmm&lt;k,v&gt; {.    public simplelistmm().        {.            super(new arraylist&lt;k&gt;(), new arraylist&lt;v&gt;());.        }.    public v put(k key, v value).        {.            if(keys.size() == 0).            {.                keys.add(key);.                vals.add(value);.            }.            for(int i = 0; i &lt; keys.size(); i++).            {.                if(keys.get(i).equals(key)).                    vals.set(i, value);.                /*else.                {.                    keys.add(key);.                    vals.add(value);.                }*/.            }.            return (v)vals;.        }.}...class abstractlistmm..public abstract class abstractlistmm&lt;k,v&gt; implements iminimap&lt;k,v&gt;{..    protected list &lt;k&gt; keys; .    protected list &lt;v&gt; vals;..// initialize the lists of keys and values with a concrete instance.public abstractlistmm().{.    this.keys = new arraylist&lt;k&gt;();.    this.vals = new arraylist&lt;v&gt;();.}.public abstractlistmm(list &lt;k&gt; keys, list &lt;v&gt; vals).{.    this.keys = keys;.    this.vals = vals;.}..// return the number of bindings based on the size of the key list.public int size().{.    return keys.size();.}.public list&lt;k&gt; keys().{.     list&lt;k&gt; newkeys = this.keys;.     return newkeys;.} .public abstract v put(k key, v value);..}.}"
