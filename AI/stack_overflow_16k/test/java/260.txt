"accessing method inside of class a without instantiating or extending class a? i'm running into a problem here. i want to access the method toggletimer() inside of my elevators class from my input class. however, i have redefined public elevators() so that it has arguments, and i think that is causing the problem. i cannot extend nor instantiate the class elevators without causing public elevators() to execute. is there any way to access the method toggletimer() without executing public elevators()?..for example: when i try to create a new object of elevators:..elevators e = new elevators().e.toggletimer()..however, creating a new elevators object causes public elevators() to run, which i don't want to happen...example 2:..public class input **extends** elevators {..i cannot extend the elevators class without adding identical constructors to public input(), which i do not want to do...what i need is a way to access, from another class, the toggletimer() method in class elevators without calling public elevators()...elevators class:..public class elevators extends jpanel {..boolean toggletimer = true;.private int y = 0;.private int elevatordirection = 1;.private color fillcolor;.private static timer timer;..public elevators(color color, boolean goingdown) {.    fillcolor = color;..    if (goingdown) {.        y = 0;.        elevatordirection = 1;.    } else {.        y = getpreferredsize().height - 120;.        elevatordirection = -1;.    }..    timer = new timer(20, new actionlistener() {.        @override.        public void actionperformed(actionevent e) {.            y += elevatordirection;.            if (y + 120 &gt; getheight()) {.                y = getheight() - 120;.                elevatordirection *= -1;.            } else if (y &lt; 0) {.                y = 0;.                elevatordirection *= -1;.            }.            repaint();.        }.    });.    timer.start();.}..public void toggletimer() { //i want to access this method without executing public elevators().    toggletimer = !toggletimer;.    if(toggletimer) {.        timer.start();.    } else {.        timer.stop();.    }.}.}...input class:..public class input {.boolean toggleelevatorbutton = true;.jbutton toggleelevators = new jbutton(""click to stop elevators."");..public void changetoggleelevatorbutton() {.    toggleelevatorbutton = !toggleelevatorbutton;.    toggleelevators.settext(toggleelevatorbutton ? ""elevators enabled. click to disable."" : ""elevators disabled. click to enable."");..toggleelevators(); //this is where i want to call the method from the elevators class.}.}"
