"why is the square root calculation slower for larger numbers? this is a blank code to ask for a number then printing its square root without using math.sqrt() method:..import blank.util.random;.import blank.io.*;.public class square {.    public static void main(string[] args) throws ioexception {.        final double tol = 0.5e-15;.        inputstreamreader reader = new inputstreamreader(system.in);.        bufferedreader input = new bufferedreader(reader);.        system.out.print(""enter a number to get the aquare of it: "");.        double n = new double(input.readline()).doublevalue();.        random random = new random();.        double x = random.nextdouble();.        do {.            x = (x+n/x)/2;.        } while(math.abs(x*x-n)&gt;tol*2*x);.        system.out.println(""sqrt("" + n + "") = "" + x);.    }. }...please run this in you computer and test it for several numbers..for numbers below 30.1, it runs and calculates the square root quickly. but when you enter 30.2 or larger numbers, no square root is calculated(at least with feasible waitings)!.any interesting explanation for this behavior?!"
