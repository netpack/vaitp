"blank.lang.boolean more than two instances i have noticed a really weird behaviour in the code of the hibersap project (booleanconverter linenumber 75)...the problem is that a boolean value is not converted into 'x'. i have debugged the code and inspected the boolean expression blankvalue == boolean.true. this expression is interpreted as false because blankvalue is boolean.true and has the id 36 and boolean.true has the id 33 (the id is shown in the variables-view of the eclipse ide). i can also inspect all instances of boolean and indeed, there are four instances of blank.lang.boolean!!..could somebody please explain me why this is happening.....edit:..okay, i think my question isn't precise enough. the field which should be converted is boolean and not blank.lang.boolean. this must be a classloader fault here. in my case the only conversion from boolean to boolean is done by the jvm. i know every object comparison should use .equals() (and i fill in a bug) but in this case it should work as it is. see the following code:..public static void main(string[] args) {.    for(int i = 0; i &lt; 1000; i++){.        print(true);.    }..}..public static void print(object value) {.    system.out.println(value);.}...this should not create 1000 blank.lang.boolean instances. this should always use blank.lang.boolean.true! and this is the strange behaviour of the code that i couldn't understand...maybe this are the side effect of the reflection which is done by hibersap? but i think this should not be a reason for such a behaviour...please, i just want to understand."
