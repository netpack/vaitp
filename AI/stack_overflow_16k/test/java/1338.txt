"error in retrieving value of image array after setting value in image array i am using following code for setting the initial 8*8 pixels position of an image array with new value,but unfortunately it returns me the initial value. example i have change initial .8* 8 values of image  array with 16 and constructed the image..when i am retrieving that image and read first 8*8 values.i have seen that those values are same to image array previous values.(before setting values at 8*8 array)it means 16 is not assign to image arrays 8*8 block..please suggest me the changes i have to make in my code..  /*. * to change this template, choose tools | templates. * and open the template in the editor.. */.package testing;..import blank.awt.color;.import blank.awt.image.bufferedimage;.import blank.io.file;.import blankx.imageio.imageio;../**. *. * @author pratibha. */.public class constructimage{.    int[][] pixelarray;.    public constructimage(){.        try{..      bufferedimage bufferimage=imageio.read(new file(""c:\image_1.jpg""));.       int height=bufferimage.getheight();.       int width=bufferimage.getwidth();.       pixelarray=new int[width][height];.       for(int i=0;i&lt;width;i++){.            for(int j=0;j&lt;height;j++){.                pixelarray[i][j]=bufferimage.getrgb(i, j);.            }.        }..        for(int i=0;i&lt;8;i++){.            for(int j=0;j&lt;8;j++){.           //   system.out.print(pixelarray[i][j]+"" , "");.                pixelarray[i][j]=16;.            }.            system.out.println("""");.        }..        int[][] newpixel=pixelarray; .....      bufferedimage bufferimage2=new bufferedimage(width, height,bufferedimage.type_int_rgb);.          for(int x=0;x&lt;width;x++){.                for(int y=0;y&lt;height;y++){.          bufferimage2.setrgb(x, y,newpixel[x][y]);.          color c=new color(newpixel[x][y]);.          system.out.println("" , ""+newpixel[x][y]+"" , ""+c.getrgb());..            }.                system.out.println();.         }..         file outputfile = new file(""c:\img.jpg"");.         imageio.write(bufferimage2,""jpg"", outputfile);....////        ///////////////////////////////////////////////////////////////////.   bufferedimage bufferimage1=imageio.read(new file(""c:\img.jpg""));.        int height1=0;.        height1=bufferimage1.getheight();.        int width1=0;.        width1=bufferimage1.getwidth();.        int[][] pixelarray1=new int[width1][height1];.        for(int i=0;i&lt;width1;i++){.            for(int j=0;j&lt;height1;j++){.                pixelarray1[i][j]=bufferimage1.getrgb(i, j);.            }.        }.        ///////create image from this pixelarray.        int[][] retrivepixel=pixelarray1;.         for(int i=0;i&lt;1;i++){.            for(int j=0;j&lt;8;j++){.               //olor c=new color(pixelarray1[i][j]);.                int var=retrivepixel[i][j] &amp; 0x00ffffff;.              //  color v=new color(pixelarray[i][j]);.                system.out.print("" , ""+var+"" =&gt; ""+retrivepixel[i][j]+"" pixelarray ""+pixelarray1[i][j]);.            }.            system.out.println();.        }.        system.out.println(integer.tobinarystring(222));.        system.out.println(integer.signum(93226268));;.         color c=new color(16);.       system.err.println(c.getrgb());.//        system.out.println(c.getred()+"" ""+c.getgreen()+"" ""+c.getblue()+"" ""+c.getalpha());.        system.out.println(c.tostring());.        int colorint =-16645630 &amp; 0x00ffffff;//c.getred()+c.getgreen()+c.getblue()+c.getalpha();.        system.out.println("" colorint ""+colorint);.        }.        catch(exception ee){.            ee.printstacktrace();.        }.    }..    public static void main(string args[]){.        constructimage c=new constructimage();.    }.}"
