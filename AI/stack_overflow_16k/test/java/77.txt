"line finding according to a point i have still trouble also i want to show you my code. if you can run it, that would be great. it is a little bit complicated. maybe when you see all of it, you may find another error that causes finding wrong line.still giving the last line as the closest one. another question when yo run the program after creating a line, jmenu duplicates itself but i can draw a line over the second jmenu. i belive that it is not about my coding. could you please look at my code. thank you for your previous answers. sorry about my posts, this is the first time that i'm asking a question...  import blank.awt.color;.  import blank.awt.point;..   public class lines {..public int id;.public point point1;.public point point2;.public int[] denklem;...}..first class ends here..   import blankx.swing.*;.   import blank.awt.*;.   import blank.awt.event.*;.   import blank.util.arraylist;.   import blank.util.collections;.   import blank.util.iterator;...  public class tester{..public tester() {.    cizer test = new cizer();.    jframe frame = new jframe();.//  frame.setbackground(color.dark_gray);.    frame.setjmenubar(test.jmb);.    frame.add(test.statusbar, borderlayout.south );.    container  c = frame.getcontentpane();.    c.add(test);.    c.setsize(700, 700);.    frame.setdefaultcloseoperation(jframe.exit_on_close);.    frame.setsize(700,700);.    frame.setvisible(true);.}.public static void main(string[] args) {.    tester a = new tester();.}.  }.   class cizer extends jpanel implements mousemotionlistener, mouselistener {..int mouseclicks = 0;.boolean begin = true;.boolean linesegmentci = false;.boolean lineci = false;.boolean chooser = false;.boolean deleter = false;.boolean digerinde = false;.arraylist&lt;lines&gt; array = new arraylist&lt;lines&gt;();.arraylist&lt;lines&gt; array3 = new arraylist&lt;lines&gt;();.devline devarray = new devline();.arraylist&lt;devline&gt; devarray2 = new arraylist&lt;devline&gt;();.jmenubar jmb = new jmenubar();.jmenu menu = new jmenu(""secenekler"");.jmenu menu2 = new jmenu(""renk"");.jmenu menu3 = new jmenu(""kalınlık"");.jmenu menu4 = new jmenu(""sec"");.jmenuitem item = new jmenuitem(""linesegments drawer"");.jmenuitem item2 = new jmenuitem(""line drawer"");.jmenuitem item3 = new jmenuitem(""black"");.jmenuitem item4 = new jmenuitem(""blue"");.jmenuitem item5 = new jmenuitem(""red"");.jmenuitem item6 = new jmenuitem(""green"");.//jmenuitem item13 = new jmenuitem(""hepsinin rengini degistir"");.jmenuitem item7 = new jmenuitem(""3"");.jmenuitem item8 = new jmenuitem(""5"");.jmenuitem item9 = new jmenuitem(""7"");.jmenuitem item10 = new jmenuitem(""10"");.jmenuitem item11 = new jmenuitem(""find closest line"");.//jmenuitem item12 = new jmenuitem(""sil"");.jlabel statusbar = new jlabel( ""mouse outside jpanel"" );.lines l1 = new lines();.int minvalue = integer.max_value;.lines min = null;.arraylist&lt;integer&gt; minimum = new arraylist&lt;integer&gt;();.graphics2d g2d;.color color;.basicstroke stroke;.int minx = 0;.boolean deneme = false;.public cizer(){.    menu.add(item);.    menu.add(item2);.    menu2.add(item3);.    menu2.add(item4);.    menu2.add(item5);.    menu2.add(item6);.//  menu2.add(item13);.    menu3.add(item7);.    menu3.add(item8);.    menu3.add(item9);.    menu3.add(item10);.    menu4.add(item11);.//  menu.add(item12);.    jmb.add(menu);.    jmb.add(menu2);.    jmb.add(menu3);.    jmb.add(menu4);.    l1.point1 = new point();.    l1.point2 = new point();.//  min.point1 = new point();.//  min.point2 = new point();.    l1.denklem = new int[3];.    stroke = new basicstroke();...    item.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            linesegmentci = true;.            lineci = false;.            chooser = false;.            deleter = false;.        }.    });.    item2.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            begin = true;.            lineci = true;.            linesegmentci = false;.            chooser = false;.            deleter = false;.        }.    });.    item3.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            color = color.black;...        }.    });.    item4.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            color = color.blue;..        }.    });.    item5.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            color = color.red;..        }.    });.    item6.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            color = color.green;..        }.    });.    item7.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            stroke = new basicstroke(3.f);...        }.    });.    item8.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            stroke = new basicstroke(5.f);..        }.    });.    item9.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            stroke = new basicstroke(7.f);..        }.    });.    item10.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            stroke = new basicstroke(10.f);..        }.    });.    item11.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            chooser = true;.            linesegmentci = false;.            lineci = false;.            deleter = false;..        }.    });./*  item12.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            deleter = true;.            chooser = false;..        }.    });*/./*  item13.addactionlistener(new actionlistener() {.        public void actionperformed(actionevent arg0) { .            deneme = true;.        }.    });*/.    addmouselistener(this);.    addmousemotionlistener(this);..}..public void paint(graphics g) {..    g2d = (graphics2d) g;.    devarray.segmentim.add(l1);..    if(linesegmentci == true){.        iterator&lt;lines&gt; itr = devarray.segmentim.iterator();.            while(itr.hasnext()){.                lines l = itr.next();.                g.setcolor(color);.                g2d.setstroke(stroke);.                g2d.drawline(l.point1.x,l.point1.y,l.point2.x,l.point2.y);...            }.            devarray2.add(devarray);..    }.    else if(lineci == true){.        array3.add(l1);.        g2d.setpaint(color);.        g2d.setstroke(stroke);.        g2d.drawline(l1.point1.x,l1.point1.y,l1.point2.x,l1.point2.y);.    }.}.public void mouseentered(mouseevent e) { }.public void mouseexited(mouseevent e) { }.public void mousepressed(mouseevent e) {}.public void mousereleased(mouseevent e) { }.public void mouseclicked(mouseevent e) {.    if(chooser == true){.        iterator&lt;lines&gt; itr2 = array.iterator();.        while(itr2.hasnext()){.            lines l2 = itr2.next();.            minx = (int) (math.abs((l2.denklem[0] * e.getx()) + (l2.denklem[1] * e.gety()) +.                    l2.denklem[2]) / (math.sqrt((l2.denklem[0] *l2.denklem[0]) + (l2.denklem[1] * l2.denklem[1]) )));..             if (minx &lt; minvalue){.                   minvalue = minx;.                   min = l2;.               }.        }.        system.out.println(""closest line coordinates"");.        system.out.println(min.point1.x);.        system.out.println(min.point1.y);.    }.    else if(linesegmentci == true){..        if(begin == true){.            if(mouseclicks == 0){.                l1.point1.x = e.getx();.                l1.point1.y = e.gety();..                statusbar.settext( string.format( ""clicked at [%d, %d]"", .                        e.getx(), e.gety() ) );..                mouseclicks++;.            }.            else if(mouseclicks == 1){.                l1.point2.x = e.getx();.                l1.point2.y = e.gety();.                statusbar.settext( string.format( ""clicked at [%d, %d]"", .                        e.getx(), e.gety() ) );.                mouseclicks = 0;.                begin = false;.                repaint();..            }.            //  array2.devarray.add(l1);.            array.add(l1);.            int a = l1.point1.y - l1.point2.y;.            int b = l1.point2.x - l1.point1.x;.            int c = (l1.point1.x * l1.point2.y) - (l1.point2.x * l1.point1.y);.            l1.denklem[0] = a;.            l1.denklem[1] = b;.            l1.denklem[2] = c;.        }.        else{.            l1.point1.x = l1.point2.x;.            l1.point1.y = l1.point2.y;.            l1.point2.x = e.getx();.            l1.point2.y = e.gety();.            statusbar.settext( string.format( ""clicked at [%d, %d]"", .                    e.getx(), e.gety() ) );.            repaint();.            //  array2.devarray.add(l1);.            array.add(l1);.            int a = l1.point1.y - l1.point2.y;.            int b = l1.point2.x - l1.point1.x;.            int c = (l1.point1.x * l1.point2.y) - (l1.point2.x * l1.point1.y);.            l1.denklem[0] = a;.            l1.denklem[1] = b;.            l1.denklem[2] = c;.        }.    }.    else if(lineci == true){..        if(mouseclicks == 0){.            l1.point1.x = e.getx();.            l1.point1.y = e.gety();.            statusbar.settext( string.format( ""clicked at [%d, %d]"", .                    e.getx(), e.gety() ) );.            mouseclicks++;.        }.        else if(mouseclicks == 1){.            l1.point2.x = e.getx();.            l1.point2.y = e.gety();.            statusbar.settext( string.format( ""clicked at [%d, %d]"", .                    e.getx(), e.gety() ) );.            mouseclicks = 0;.        //  begin = false;.            repaint();..        }.        array.add(l1);.        int a = l1.point1.y - l1.point2.y;.        int b = l1.point2.x - l1.point1.x;.        int c = (l1.point1.x * l1.point2.y) - (l1.point2.x * l1.point1.y);.        l1.denklem[0] = a;.        l1.denklem[1] = b;.        l1.denklem[2] = c;..    }.}..public void mousemoved(mouseevent e) { }.public void mousedragged(mouseevent e) {}...}..sry i forgot also this one..   import blank.util.arraylist;...  public class devline {.arraylist&lt;lines&gt; segmentim = new arraylist&lt;lines&gt;();..   }"
