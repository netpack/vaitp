"can someone help me make my snake move i have been working on my first project: a snake game. i have looked at a video and i made this. however it doesn't work, when i run it my snake doesn't move. could someone please help me how i get it to work. ..package game;..import blank.awt.color;.import blank.awt.dimension;.import blank.awt.graphics;.import blank.awt.graphics2d;.import blank.awt.event.keyevent;.import blank.awt.event.keylistener;.import blank.awt.image.bufferedimage;.import blank.util.arraylist;..import blankx.swing.jpanel;..public class gamepanel extends jpanel implements runnable, keylistener {..    public static final int width = 400;.    public static final int height = 400;..    //render.    private graphics2d g2d;.    private bufferedimage image;..    //game loop.    private thread thread;.    private boolean running;.    private long targettime;..    //game stuff.    private final int size = 10;.    private entity head, apple;.    private arraylist&lt;entity&gt; snake;.    private int score;.    private int level;.    private boolean gameover;..    //movement.    private int dx,dy;.    //key input.    private boolean up,down,right,left,start;..    public gamepanel() {.        setpreferredsize(new dimension(width, height));.        setfocusable(true);.        requestfocus();.        addkeylistener(this);.    }.    @override.    public void addnotify() {.        super.addnotify();.        thread = new thread(this);.        thread.start();.    }.    private void setfps(int fps) {.        targettime = 1000 / fps;.    }.    // toetsenbord input --&gt; beweging van de snake.    @override.    public void keypressed(keyevent e) {.        int k = e.getkeycode();..        if (k == keyevent.vk_up) up = true;.        if (k == keyevent.vk_down) down = true;.        if (k == keyevent.vk_left) left = true;.        if (k == keyevent.vk_right) right = true;.        if (k == keyevent.vk_enter) start = true;..    }..    @override.    public void keyreleased(keyevent e) {.        int k = e.getkeycode();..        if (k == keyevent.vk_up) up = false;.        if (k == keyevent.vk_down) down = false;.        if (k == keyevent.vk_left) left = false;.        if (k == keyevent.vk_right) right = false;.        if (k == keyevent.vk_enter) start = false;..    }..    @override.    public void keytyped(keyevent e) {.        // todo auto-generated method stub..    }.    //snelheid van de snake.    @override.    public void run() {.        if (running) return;.        init();.        long starttime;.        long elapsed;.        long wait;.        while (running) {.            starttime = system.nanotime();.            update();.            requestrender();..            elapsed = system.nanotime() - starttime;.            wait = targettime - elapsed / 1000000;.            if (wait&gt;0) {.                try{.                    thread.sleep(wait);.                } catch(exception e) {.                    e.printstacktrace();.                }.            }.        }.    }..    private void init() {.        image = new bufferedimage(width, height, bufferedimage.type_int_argb);.        g2d = image.creategraphics();.        running = true;.        setuplevel();.    }.    //hoe het level eruit ziet.    private void setuplevel() {.        snake = new arraylist&lt;entity&gt;();.        head = new entity(size);.        head.setposition(width / 2,  height / 2);.        snake.add(head);.        for (int i = 1;i &lt; 3; i++) {.            entity e = new entity(size);.            e.setposition(head.getx() + (i * size),  head.gety());.            snake.add(e);.        }.        apple = new entity(size);.        score = 0;.        gameover = false;.        level = 1;.        dx = dy = 0;.        setfps(level*10);.    }.    //waar het fruit komt.    public void setapple() {.        int x = (int)(math.random() * (width - size));.        int y = (int)(math.random() * (height - size));.        x = x - (x%size);.        y = y - (y%size);.        apple.setposition(x,y);.    }.    private void requestrender() {.        render(g2d);.        graphics g = getgraphics();.        g.drawimage(image, 0,0,null);.        g.dispose();.    }.    //hoe dat ding beweegt.    private void update() {.        if (gameover) {.            if (start) {.                setuplevel();.            }.            return;.        }..        if (up &amp;&amp; dy == 0) {.            dy = -size;.            dx = 0;.        }.        if (down &amp;&amp; dy == 0) {.            dy = size;.            dx = 0;.        }.        if (left &amp;&amp; dx == 0) {.            dy = 0;.            dx = -size;.        }.        if (right &amp;&amp; dx == 0 &amp;&amp; dy != 0) {.            dy = 0;.            dx = -size; .        }.        if (dx !=0 || dy != 0) {..            for (int i = snake.size() - 1; i&gt;0; i--) {.                snake.get(i).setposition(snake.get(i - 1).getx(), snake.get(i - 1).gety());.            }.            head.move(dx, dy);.        }..        for (entity e : snake) {.            if (e.iscollision(head)) {.                gameover = true;.                break;.            }.        }.        //punten erbij en langer worden als de snake fruit eet.        if (apple.iscollision(head)) {.            score++;.            setapple();..            entity e = new entity(size);.            e.setposition(-100, -100);.            snake.add(e);.            if (score % 10 == 0) {.                level++;.                if (level &gt; 10) level = 10;.                setfps(level*10);.            }.        }.        if (head.getx() &lt; 0) head.setx(width);.        if (head.gety() &lt; 0) head.sety(height);.        if (head.getx() &gt; 0) head.setx(0);.        if (head.gety() &gt; 0) head.sety(0);.    }..    public void render(graphics2d g2d) {.        g2d.clearrect(0, 0, width, height);.        g2d.setcolor(color.green);.        for (entity e : snake) {.            e.render(g2d);.        }.        g2d.setcolor(color.red);.        apple.render(g2d);.        //tekst voor en na je doodgaat.        g2d.setcolor(color.white);.        g2d.drawstring(""score :"" + score + ""level : "" + level, 10, 10);.    }.}...entity class..package snake;..import blank.awt.graphics2d;.import blank.awt.rectangle;..public class entity {.    private int x,y,size;..    public entity(int size) {.        this.size = size;.    }.    public int getx() {.        return x;.    }.    public int gety() {.        return y;.    }.    public void setx(int x) {.        this.x = x;.    }.    public void sety(int y) {.        this.y = y;.    }.    public void setposition(int x, int y) {.        this.x = x;.        this.y = y;.    }..    public void move(int dx, int dy) {.        x += dx;.        y += dy;.    }.    public rectangle getbound() {.        return new rectangle(x, y, size, size);.    }.    public boolean iscollision(entity o) {.        if(o == this) return false;.        return getbound().intersects(o.getbound());.    }.    public void render(graphics2d g2d) {.        g2d.fillrect(x + 1, y + 1, size - 2, size - 2);.    }.}"
