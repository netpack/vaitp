"conditional compilation in blank: will compiler omit ""always false"" blocks from class? below is a snippet of my code:..class a { ..   private boolean debug = false;..   // called when server boots up..   public void init (property) { .      debug = property.getboolean (""debug_var""); // read debug from a config file..   }..   // some other function  .   public void foo () { .       if (debug) { .                 system.out.println (""from inside the debug block"");.       }.   }. }...when i run the code, if (debug) actually prints out ""from inside debug block"" if debug == true in the config file. ..two questions:...so, in this case does the compiler include the if block in the .class file just because the value of variable debug might change on run time? .if this is true, then how can i eliminate some code from being added to the .class file on certain environments?"
