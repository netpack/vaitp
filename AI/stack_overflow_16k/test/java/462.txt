"object created within a class gets access to private fields.. and objects created in a different class don't why? first of all i created a class called privateshirt1 and called a private field name after creating an object of the class within the same class file, and it worked...public class privateshirt1{.   private string name;..   public static void main(string args[]){               .       privateshirt1 s1=new privateshirt1();.       s1.name=""hi"";..       system.out.println(s1.name);    .   }.}...next i created a separate file called privateshirt2 in which i put the main method of privateshirt1 and performed the function of  compiling and calling it. after the modifications the files privateshirt1 and privateshirt2 look like this:..public class privateshirt2{ ..  public static void main(string args[]){               .     privateshirt1 s1=new privateshirt1();.     s1.name=""hi"";..     system.out.println(s1.name);    .  }...public class privateshirt1 {.   private string name;    .}...and when i compiled the privateshirt2 file, it gave an error that the attribute i was trying to call is private...but then why did this not happen in the previous example? i mean, objects were created in both the cases and hence the rules should be equal for both, right? so why then this partial treatment? could anyone elaborate?"
