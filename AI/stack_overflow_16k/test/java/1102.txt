"can't delete an existing file in blank i have this blank class..    package com.cf.utils;..import blank.io.file;.import blank.io.filereader;.import blank.io.filewriter;.import blank.io.ioexception;.import blank.util.arraylist;.import blank.util.uuid;..import org.json.simple.jsonarray;.import org.json.simple.jsonobject;.import org.json.simple.parser.jsonparser;..import com.cf.corefaction;.import com.cf.faction.faction;..import net.minecraft.util.text.textformatting;.import net.minecraftforge.common.dimensionmanager;.import net.minecraftforge.fml.common.fmlcommonhandler;.import net.minecraftforge.fml.relauncher.side;..public class factionutils {..    public static boolean savefaction(faction f) {.        if (utils.isserver()) {.            jsonobject obj = new jsonobject();.            obj.put(""name"", f.getname());.            obj.put(""owner"", f.getowner().tostring());..            jsonarray members = new jsonarray();.            for (uuid u : f.getmembers()) {.                members.add(u.tostring());.            }..            obj.put(""members"", members);..            file dir = new file(dimensionmanager.getcurrentsaverootdirectory() + ""/factions"");.            if (!dir.exists()).                dir.mkdirs();..            try (filewriter file = new filewriter(.                    dimensionmanager.getcurrentsaverootdirectory() + ""/factions/"" + f.getname() + "".json"")) {.                file.write(obj.tojsonstring());.                file.close();.                return true;.            } catch (ioexception e) {.                e.printstacktrace();.            }.        }.        return false;.    }..    public static void deletefaction(faction f) {.        if (utils.isserver()) {.            file file = new file(dimensionmanager.getcurrentsaverootdirectory() + ""/factions/"" + f.getname() + "".json"");.            if (file.exists()) {.                if(file.delete()) { //this returns false.                    for (uuid p : f.getmembers()) {.                        utils.sendmessage(p, utils.gettranslation(""faction.disbanded"", textformatting.red));.                    }.                } else.                    utils.sendmessage(f.getowner(), utils.gettranslation(""faction.disband.error"", textformatting.red));..            } else.                system.out.println(""can't find the file"");.        }.    }..    public static faction getfaction(uuid player) {.        for (faction f : getallfactions()) {.            if (f.getmembers().contains(player)).                return f;.        }.        return null;.    }..    public static faction getfaction(string name) {.        for (faction f : getallfactions()) {.            if (f.getname().equalsignorecase(name)).                return f;.        }.        return null;.    }..    public static arraylist&lt;faction&gt; getallfactions() {.        arraylist&lt;faction&gt; list = new arraylist&lt;faction&gt;();.        if (utils.isserver()) {.            file dir = new file(dimensionmanager.getcurrentsaverootdirectory() + ""/factions"");.            if (!dir.exists()).                return list;.            file[] factions = dir.listfiles();.            for (file f : factions) {.                jsonparser parser = new jsonparser();..                try {.                    object obj = parser.parse(new filereader(f));.                    jsonobject jsonobject = (jsonobject) obj;..                    jsonarray members = (jsonarray) jsonobject.get(""members"");.                    faction faction = new faction((string) jsonobject.get(""name""),.                            uuid.fromstring((string) jsonobject.get(""owner"")));.                    arraylist&lt;uuid&gt; ids = new arraylist&lt;uuid&gt;();.                    for (int i = 0; i &lt; members.size(); i++) {.                        ids.add(uuid.fromstring(members.get(i).tostring()));.                    }.                    faction.setmembers(ids);.                    list.add(faction);.                } catch (exception e) {.                    e.printstacktrace();.                }.            }.        }.        return list;.    }.}...when i call the method deletefaction i want to delete a specific file, but despite the file.exists() returns true, the file.delete() returns false and i can't figure out why. so why the file i'm pointing cannot be deleted?"
