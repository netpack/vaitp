"combine same elements with same power value in linkedlist i have this polynode class:..public class polynode.{.    private int _power;.    private double _coefficient;.    private polynode _next;..        public polynode (int power, double coefficient)....        public polynode(int power, double coefficient,polynode next)....        public polynode(polynode p)....        public int getpower()....        public double getcoefficient()....        public  polynode getnext()....        public void setpower(int power)....        public void setcoefficient (double coefficient)....        public void setnext(polynode next)....}...and this polynom class:..public class polynom.{.   private polynode _head;..   methods...  ..}...one of my methods is public polynom multpol (polynom other) that multiple this polynom with onother polynom for example:..pol1 = ....pol2 = ....so pol1 * pol2 = 9x^5 + 18x^3 -6x^3 -18x^2.and i want to combine same power value so 18x^3 -6x^3 become 12x^3...this is my function that do the multiple:..    public polynom multpol (polynom other).    {   ..        if (other != null).        {.            // define new polynom.            polynom pol = new polynom();..            for (polynode tmp = _head; tmp != null; tmp = tmp.getnext()).            {.                for (polynode otherlist = other._head; otherlist != null; otherlist = otherlist.getnext()).                {.                    double coefficient = tmp.getcoefficient() * otherlist.getcoefficient();.                    int power = tmp.getpower() + otherlist.getpower();.                    polynode node = new polynode(power, coefficient);.                    pol.addnode(node);.                }.            }..            // make our new polynom this (move pointer).            _head = pol._head;.        }..        return this;.    }...and this is what i have try to shrink my list:..    private void shrinklist().    {.        int listlength = getlistlength(this);.        polynom pol = new polynom();.        polynode cur = _head;.        int count = 0;..        while (count &lt; listlength).        {.            for (polynode tmp = _head.getnext(); tmp != null; tmp = tmp.getnext()).            {           .                if (cur.getpower() == tmp.getpower()).                {.                    double coefficient = tmp.getcoefficient();.                    int power = tmp.getpower();.                    polynode node = new polynode(power, coefficient);.                    pol.addnode(node);.                }.            }..            cur = cur.getnext();.            count++;.        }.    }"
