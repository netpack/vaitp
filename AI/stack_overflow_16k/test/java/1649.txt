"blank threads and synchronize i'm working on a lab assignment and i'm a bit stuck on how to implement a specific class. my task is to create a program that simulates ""trolls"" crossing a bridge. the trolls are represented by threads. this is part of the troll class i've written:..public class troll implements runnable {.// instance variables..// constructor..    public void run() {.        system.out.println( name + "" has arrived at the bridge."");.        system.out.println( name + "" is starting to cross."");..        // simulate crossing time.        for( int i = 1; i &lt;= crossingtime; ++i ) {.            try{.                thread.sleep( 1000 ); .            }.            catch( interruptedexception e ) {}.            system.out.println( ""t"" + name + "" "" + i + "" seconds."" );.        }.        system.out.println( name + "" leaves at "" + destination + ""."" );.    }.}...now the part i'm stuck on is my ""bridge"" class. the bridge class is suppose to ensure only 1 troll crosses the bridge at a time. the bridge class must only have these 2 methods with the same method signature:..//request permission to enter bridge.public void enterbridge() {}.//notify bridge that troll is leaving.public void leavebridge() {}...the problem i'm having is figuring out how to make use of these methods. the hint i got from the instructions is to use synchronize. i believe this means to use a synchronized block in enterbridge, but i don't see how this would work. the code that simulates the actual crossing is in the troll's run method (this is required by the lab). so to begin crossing, you have to exit the synchronized block. this would release the ""lock"" and then other trolls will begin crossing before the previous troll has finished, which is not wanted...i don't really see the need of the bridge methods in the first place, since i can just put the code in my troll's run method in a synchronized block: ..public void run() {.    system.out.println( name + "" has arrived at the bridge."");.    synchronized( bridge ) {.        //code from before.   }.}...this ensures only one trolls is crossing at a time without needing to call the bridge class methods. so can someone tell me what the lab is getting at with the bridge class? i feel like i'm overlooking something obvious or maybe i'm misunderstanding how synchronize works."
