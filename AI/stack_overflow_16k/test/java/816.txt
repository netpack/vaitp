"storing temporary data even after program exists i have a program that parses through hundreds of thousands of files, stores data from each file and towards the end, prints some of the data extracted into an excel document...these are some of the errors i encountered and handled in regards to memory:...blank.lang.outofmemoryerror: blank heap space.increased memory to 2gb.error occurred during initialization of vm. could not reserve enough space for 2097152kb object heap.downloaded jre8 for 64 bit machine. set -d64 as one of the default vm arguments.blank.lang.ourofmemoryerror: gc overhead limit exceeded.increased blank heap memory from 2gb to 3g and included this argument -xx:-usegcoverheadlimit...so now my default vm arguments are: -d64 -xmx3g -xx:-usegcoverheadlimit..the issue is that my program runs for several hours, reads in and stores all of the information i need from all of these files and then throws an error at the end when it's trying to print everything if a memory error occurs...what i'm wondering is if there is a way to store the data extracted and then access it again even if the program exits due to an error. the way i want to store the data is in the same format i use it in the program. for instance, let's say i have several hundred thousand files of user records and i traversed through all of them, stored the data i extracted in user objects and i have these user and other personally defined objects stored in hashmaps and linkedlists. is there a way to store these user objects and hashmaps and linkedlists in a way that even if the program exits due to an error i can write another program that will go through the objects stored so far and printing out the information that i want without having to go through the process of reading in, extracting and storing the information over again?"
