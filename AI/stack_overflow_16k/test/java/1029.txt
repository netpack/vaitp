getting stackoverflowerror i have created class.when i run the main method i get stack overflow error at the line if(this.compareto(other) &gt; 0) . not sure i am doing the compareto method right for generics..what is the correct way ?..what may be wrong in the code?..public class stackmin&lt;t extends comparable&lt;t&gt;&gt; {.    private static class stacknode&lt;t extends comparable&gt; implements comparable {..        private t data;.        private stacknode&lt;t&gt; next;..        public stacknode(t data) {.            this.data = data;.        }..        @override.        public int compareto(object other) {..            if(this.compareto(other) &gt; 0).                return 1;.            else if(this.compareto(other) == 0).                return 0;.            else.                return -1;.        }..        public string tostring() {.            return this.data.tostring();.        }.    }..    private stacknode&lt;t&gt; top = null;.    private stack&lt;stacknode&lt;t&gt;&gt; min = new stack&lt;stacknode&lt;t&gt;&gt;();...    public void push(t data) {..        stacknode node = new stacknode(data);..        if ( top == null) {.            top = node;.            min.push(node);.        }.        else {.            if ( node.compareto(top) &lt; 0) {.                min.push(node);.            }.            top.next = top;.            top = node;.        }..    }..    public t pop() throws emptystackexception {..        if (top == null) {.            throw new emptystackexception();.        }..        t data = top.data;.        top = top.next;.        min.pop();.        return data;.    }..    public t min() {.        return min.peek().data;..    }..    public boolean empty() {..        return (top == null);..    }..    public static void main(string [] args) {.        stackmin min = new stackmin();.        try {.            min.push(10);.            min.push(9);.            min.push(6);.            min.push(7);.            min.pop();.            system.out.println(min.min());.            min.pop();.            system.out.println(min.min());.            min.pop();.            system.out.println(min.min());.            min.pop();.            system.out.println(min.min());.            min.pop();.            system.out.println(min.min());.        } catch (emptystackexception e) {.            // todo auto-generated catch block.            e.printstacktrace();.        }.    }..}
