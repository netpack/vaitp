"sorting bank accounts algorithm could anyone please help me with the code below which aims to solve this problem http://www.spoj.com/problems/sbank/ . i am getting wrong answer although the tests show that the code is working properly as per the requirement. please do not thick minus for my post as i am quite new to blank. thanks in advance...import blank.util.*;.import blank.io.*;.class exercise .{.bufferedreader input = new bufferedreader(new inputstreamreader(system.in));.int pos;.string line;.int notimes = 0;.int btimes;.int first = 0;.int m;.// creating an arraylist to store the result and then print it off.list&lt;string&gt; arr = new arraylist&lt;string&gt;(100000);..// list used for carrying out the checks.list&lt;exercise&gt; list = new linkedlist&lt;exercise&gt;();..    public string bankaccount;.    public int counter;..    // object template.    public exercise (string bank).    {.        bankaccount = bank;.        counter = 0;.    }..    // filling the list and the arraylist.    public void fillinlist() throws ioexception.    {.        line = input.readline();..        // no of test cases to follow.        notimes = integer.parseint(line);..        if (notimes &lt;= 5).        {..            for (int p = 1; p &lt;= notimes; p++).            {.                line = input.readline();..                // no of bank accounts.                btimes = integer.parseint(line);..                if (btimes &lt; 100000).                {.                    for (int j = 1; j &lt;= btimes; j++).                    {.                        // read the next line.                        line = input.readline();..                        // putting the first object in the list.                        if (first == 0).                        {.                            exercise element = new exercise(line);.                            list.add(element);.                            first++;.                        }.                        // carrying out the checks.                        compare(line);.                    }.                    // filling the first portion of items in the arraylist.                    fill();..                    // creating space line for the next that follows.                    system.out.print(""n"");.                    first = 0;.                    // clearing the list items in preparation for the next set.                    list.clear();.                }.            }.        }.    }...    public void compare(string linet) throws ioexception.    {.        for(int i = 0; i &lt; list.size(); i++).        {.            exercise object = list.get(i);..            int result = object.bankaccount.compareto(linet);..            // if item already present then increment counter.            if (result == 0).            {.                object.counter++;.                break;.            }   ..            // if the item is greater than the last one in the list then add it last.            else if(result &lt; 0 &amp;&amp; i == list.size() - 1).            {                       .                exercise newelement = new exercise (linet);.                list.add(newelement);.                newelement.counter++;.                break;.            }..            // if the input is less than item then add it right before it.            else if(result &gt; 0).            {.                pos = list.indexof(object);.                exercise newelement = new exercise(linet);.                list.add(pos,  newelement);.                newelement.counter++;.                break;.            }.        }.    }..    // filling the array list.    public void fill() throws ioexception.    {.        for(int i = 0; i &lt; list.size(); i++).        {.            exercise printobject = list.get(i);.            arr.add(printobject.bankaccount + "" "" + printobject.counter);.        }.        arr.add("""");.    }..    // printing the arraylist.    public void print() throws ioexception.    {.        for(int i = 0; i &lt; arr.size(); i++).        {.            system.out.println(arr.get(i));.        }.    }.. public static void main(string[] args) throws ioexception. {.     try.     {.        exercise obj = new exercise(""test"");.        obj.fillinlist();.        obj.print();.     }.     catch(exception e).     {.       return;.     }. }  . }...the results i get (copy paste from eclipse are):..  2.  6.  03 10103538 2222 1233 6160 0142.  03 10103538 2222 1233 6160 0141.  30 10103538 2222 1233 6160 0141.  30 10103538 2222 1233 6160 0142.  30 10103538 2222 1233 6160 0141.  30 10103538 2222 1233 6160 0142..  5.  30 10103538 2222 1233 6160 0144.  30 10103538 2222 1233 6160 0142.  30 10103538 2222 1233 6160 0145.  30 10103538 2222 1233 6160 0146.  30 10103538 2222 1233 6160 0143..  03 10103538 2222 1233 6160 0141 1.  03 10103538 2222 1233 6160 0142 1.  30 10103538 2222 1233 6160 0141 2.  30 10103538 2222 1233 6160 0142 2..  30 10103538 2222 1233 6160 0142 1.  30 10103538 2222 1233 6160 0143 1.  30 10103538 2222 1233 6160 0144 1.  30 10103538 2222 1233 6160 0145 1.  30 10103538 2222 1233 6160 0146 1"
