"can you override multiple methods with the same superclass method in blank? if i want to have children with different parameters and different fill methods, what is the best way to be able to do the following, keeping in mind that i would have more than this one child with different methods.. i'd have, say, 8 children, all with different methods and params...the below code is just something i wrote now as an illustration.. i know there is probably errors.. just wrote it real fast:..class superclass{.    void fill(){.        //generic .    }.    get(){//generic }.}..class child{.     variables a, b, c;.     @override.     void fill(a, b, c).     @override.     int get_a(){.           return a;.     }.     @override.     int get_b(){.          return b;.     }.     //etc....}...main...main(){. int a = 0, b = 0, c = 1;. superclass s = new child.fill(a,b,c);. int i = s.get_a(); .}...i guessed override probbably wouldn't work because the method is different, but how could i accomplish this?..edit:..i realize the code has provlems (ie. extend), but i wrote it in 45 seconds.. i am looking for a way to inherit in multiple children that hold different variables and need different setters/getters"
