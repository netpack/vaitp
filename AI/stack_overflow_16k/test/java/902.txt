"nzec error in blank.checked all possible ones but couldnt find the glitch the following blank code is throwing an nzec runtime error when i attempt to run it.  i have checked through all of it, and i am unable to locate where the error could be taking place.  the formatted code can also  be found here:../* package whatever; // don't place package name! */.import blank.util.*;.import blank.lang.*;.import blank.io.*;./* name of the class has to be ""main"" only if the class is public. */.class quad implements comparable {.    int x,y;.    public quad(int i,int j) {.        x = i;.        y = j;.    }.    int dist = y-x;.    public int compareto(object obj) {.        quad q;.        q = (quad) obj;.        if((integer) (this.x) == (integer) (q.x)) {.            if(this.dist&gt;q.dist).                return -1;.        }.        if(this.x&lt;q.x).            return -1;.        return 1;.    }.}.class ideone {.    public static void main (string[] args) throws blank.lang.exception {.        scanner sc = new scanner(system.in);.        int t = sc.nextint();.        while (t --&gt; 0) {.            int n = sc.nextint();.            quad[] q = new quad[n];.            for(int i = 0;i &lt; n; i++) {.                int u = sc.nextint();.                int v = sc.nextint();.                q[i] = new quad(u,v);.            } arrays.sort(q);.            int max = q[0].y, k=0;.            for(int i = 0;i &lt; n - 1;i++) {.                if(q[k].x == q[i+1].x) {.                    if(max &lt; q[i+1].y) {.                        q[k].y = q[k].y^q[i + 1].y;.                        q[i + 1].y=q[k].y^q[i + 1].y;.                        q[k].y=q[k].y^q[i+1].y;.                        max = q[k].y;.                    }.                } else {.                    k = i+1;.                    max = q[k].y;.                }.            }.            //for(int i =0;i&lt;n;i++){.            // out.print(q[i].x +"" "");.            // out.println(q[i].y);.            //}.            int count = 1, flag = 0;.            int y1 = q[0].y;.            for(int i = 0;i &lt; n - 1;i++) {.                if(y1 - q[i+1].x&lt;0) {.                    count++;.                    y1 = q[i + 1].y;.                    flag = 1;.                }.                if(q[i].x == q[i + 1].x &amp;&amp; y1-q[i + 1].y &lt; 0 &amp;&amp; flag == 0) {.                    y1 = q[i+1].y;.                    continue;.                }.                //if(y1-q[i+1].x&gt;0&amp;&amp;flag == 0&amp;&amp;q[i].x!=q[i+1].x&amp;&amp;){.                // y1 = q[i+1].y;.                //} } system.out.println(count);.            }.        }.    }.}"
