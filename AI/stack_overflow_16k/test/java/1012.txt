"inserthisotry() call only when some fields changes i have update() api's in my program, where if i change something then inside it the inserthistory() api get calls..i want to make my program like if any fields get change then only inserthistory() get call otherwise not...my intension is to when user do not do anything on the edit page and click on save button then the update method should not run...my original programm for update() is this:..public static boolean updatedetails(studentsvo svo, connection con, applogger logger) {..        boolean returnvalue = true;..        preparedstatement ps = null;.        stringbuffer updatequery = new stringbuffer();..        updatequery.append(""nupdate student_detail set name = ? ,roll_no = ? ,last_updated_by = ? ,last_updated_on = ? where id = ? "");.        updatequery.append(""n "");..        try {..            vocmastersvo currentsvo = getbyid(svo.getid(), con, logger);.            if(currentsvo!=null){.                inserthistory(currentsvo, con, logger);.            }..            ps = con.preparestatement(updatequery.tostring());..            ps.setint(dbmanager.rs_index_1, svo.getname());.            ps.setint(dbmanager.rs_index_2, svo.getrollno());.            ps.setint(dbmanager.rs_index_3, svo.getlastupdatedby());.            ps.setlong(dbmanager.rs_index_4, svo.getlastupdatedon());.            ps.setint(dbmanager.rs_index_5, svo.getid());.            ps.executeupdate();..        } catch (sqlexception ex) {.            logger.error(""exception occured in updatedetails method:"" + ex, ex);.            return false;.        } catch (exception ex) {.            logger.error(""exception occured in updatedetails method:"" + ex, ex);.            return false;.        } finally {.            try {.                if (ps != null) {.                    ps.close();.                }.            } catch (exception ex) {}.        }.        return returnvalue;.    }...i tried this:..public static boolean updatedetails(studentsvo svo, connection con, applogger logger) {..        boolean returnvalue = true;..        preparedstatement ps = null;.        stringbuffer updatequery = new stringbuffer();..        updatequery.append(""nupdate student_detail set name = ? ,roll_no = ? ,last_updated_by = ? ,last_updated_on = ? where id = ? "");.        updatequery.append(""n "");..        try {..            studentsvo currentsvo = getbyid(svo.getid(), con, logger);.            if(currentsvo!=null){..                if(!currentsvo.getname().equalsignorecase(svo.getname()) || currentsvo.getrollno()!=svo.getrollno() ) {..                    ps = con.preparestatement(updateresolutiondetailsquery.tostring());..                    ps.setint(dbmanager.rs_index_1, svo.getname());.                    ps.setint(dbmanager.rs_index_2, svo.getrollno());.                    ps.setint(dbmanager.rs_index_3, svo.getlastupdatedby());.                    ps.setlong(dbmanager.rs_index_4, svo.getlastupdatedon());.                    ps.setint(dbmanager.rs_index_5, svo.getid());.                    ps.executeupdate();..                    inserthistory(currentsvo, con, logger);.                }..            } catch (sqlexception ex) {.            logger.error(""exception occured in updatedetails method:"" + ex, ex);.            return false;.        } catch (exception ex) {.            logger.error(""exception occured in updatedetails method:"" + ex, ex);.            return false;.        } finally {.            try {.                if (ps != null) {.                    ps.close();.                }.            } catch (exception ex) {}.        }.        return returnvalue;.    }...any suggestions?"
