"how to get all the solutions of topological sorting hi everyone i was trying to solve this problem http://uva.onlinejudge.org/index.php?option=onlinejudge&amp;page=show_problem&amp;problem=813 and i realized that it wants to get all the solutions of topological sorting problem, i know how to get only one possible solution and this is my code http://ideone.com/iiqxiu..static arraylist&lt;integer&gt; [] arr;  .static int visited [];.static stack&lt;integer&gt; a = new stack&lt;integer&gt;();.static boolean flag=false;..public static void graphcheck(int node){  //method to check if there is a cycle in the graph.    visited[node] = 2;.    for(int i=0;i&lt;arr[node].size();i++){.        int u =arr[node].get(i);.        if(visited[u]==0){.            graphcheck(u);.        }else if(visited[u]==2){.                flag=true;.                return; .            }.    }.    visited[node] = 1;.}..public static void dfs2(int node){            //method to get one possible topological sort which i want to extend to get all posibilites.    visited[node] = 1;.    for(int i=0;i&lt;arr[node].size();i++){.        int u =arr[node].get(i);.        if(visited[u]==0){.            dfs2(u);.        }   .    }.    a.push(node);.}..public static void main(string[] args) throws numberformatexception, ioexception {.    bufferedreader br = new bufferedreader(new inputstreamreader(system.in));.    int tc = integer.parseint(br.readline());.    for(int k=0;k&lt;tc;k++){.        br.readline();..        string h[]= br.readline().split("" "");.        int n= h.length;.        arr=new arraylist[n];.        visited = new int[n];.        for( int i = 0; i &lt; n; i++) {.            arr[ i] = new arraylist&lt;integer&gt;();.        }.        string q[]=br.readline().split("" "");.        int y=q.length;.        for(int i=0;i&lt;y;i++){.            int x=0;.            int z=0;.            for(int j=0;j&lt;n;j++){.                if(q[i].charat(0)==h[j].charat(0)){.                    x=j;.                }else if(q[i].charat(2)==h[j].charat(0)){.                    z=j;.                }.            }.            if(q[i].charat(1)=='&lt;'){.                        arr[x].add(z);.            }.        }.        for(int i=0;i&lt;n;i++){.            if(visited[i]==0).                graphcheck(i);.        }.        if(flag){.            system.out.println(""no"");.        }else{.        a.clear();.        arrays.fill(visited, 0);.        for(int i=0;i&lt;n;i++){.            if(visited[i]==0){.                dfs2(i);.            }   .        }.        int z= a.size();.        for(int i=0;i&lt;z;i++){.            int x =a.pop();.            system.out.print(h[x]+"" "");.        }.        system.out.println();.    }...}.}"
