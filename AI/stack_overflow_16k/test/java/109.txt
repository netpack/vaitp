"trying to show all permutations possible without recursion i'm trying to show all combinations possible without using recursion..i was trying it with a loop but it isn't working...without recursion(not working):..import blank.util.arrays;..public class combination {.    public static void main(string[] args) {.        string[] arr = {""a"",""b"",""c"",""d"",""e"",""f""};.        string[] result = new string[3];.        int i = 0, len = 3;.        while(len != 0 || i &lt;= arr.length-len) .        {.            result[result.length - len] = arr[i];.            len--;.            i++;          .        }..        if (len == 0){.            system.out.println(arrays.tostring(result));.            return;.        }.    }    .}  ...with recursion(working):..import blank.util.arrays;..public class combination {.    public static void main(string[] args){.        string[] arr = {""a"",""b"",""c"",""d"",""e"",""f""};.        combinations2(arr, 3, 0, new string[3]);.    }..    static void combinations2(string[] arr, int len, int startposition, string[] result){.        if (len == 0){.            system.out.println(arrays.tostring(result));.            return;.        }       .        for (int i = startposition; i &lt;= arr.length-len; i++){.            result[result.length - len] = arr[i];.            combinations2(arr, len-1, i+1, result);.        }.    }       .}...what am i doing wrong?"
