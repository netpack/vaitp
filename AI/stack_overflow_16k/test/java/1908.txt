"code analysis/this, objects and lists i need some help in understanding the code. i'm struggling with this one..i'm curious why in output there are one by one values ""d15, d10, d5"". i understand that we are holding values 'x' on list, but why there is letter ""d"", which is given in ""tostring"" method. i don't see anywhere, where it is brought on. is it something with ""this"" in b.make().add(this)? i'd really grateful if someone could help me...output: h1 g0 c b a f15 g0 c a f10 g0 c a f5 c d15 d10 d5 (in new lines)..public class main {.public static void main(string[] args) {.    int mat[][] = {.            {1, 2, 3, 4},.            {5, 6, 7, 8},.            {9, 10, 11, 12}.    };..    try {.        fun(mat, 0, 0);.    } catch (exception ex) {.        system.out.println(ex);.    }...    a a = new a(15);.    new a(10);.    new a(5);..    b.make().show();...}..public static void fun(int[] tab, int i, int j){.    for(int k = 0; k&lt;i;k++){.        system.out.print(""i""+tab[k]+"" , "");.    }.    system.out.println();.}..public static int fun(int[][] tab, int i, int j) {.    if (i == 0 &amp;&amp; j == 0) {.        system.out.println(""h"" + tab[i][j]);.        return tab[i][j] + fun(tab, i - 1, j + 1);.    } else.        return 0;.}.}..class a {.int x;.a next;..private a() {.    system.out.println(""g"" + x);.    b.make().add(this); .}..public a(int x) {.    this();.    this.x = x;.    system.out.println(""f"" + x);.}..public a(a obja) {.        this(obja.x - 1);.    system.out.println(""e"" + x);.}..public string tostring() {.    return ""d"" + x;.}..}..class b {.private static b struct;..public static b make() {.    system.out.println(""c"");.    if (struct == null).        struct = new b();.    return struct;.}..private a head;..private b() {.    head = null;.    system.out.println(""b"");.}..public void add(a obj) {.    if (head == null) {.        head = obj;.    } else {.        a tmp = head;.        while (tmp.next != null) {.            tmp = tmp.next;.        }.        tmp.next = obj;.    }.    system.out.println(""a"");.}..public void show() {.    a tmp = head;.    while (tmp != null) {.        system.out.println(tmp);.        tmp = tmp.next;.    }.}.}"
