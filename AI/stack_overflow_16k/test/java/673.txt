"run time polymorphism class a {.    public void display(){.        system.out.println(""from class a"");.    }.}..class b extends a {.    public void display() {.        system.out.println(""from class b"");.    }.}..public class test {.    public static void main(strings[] args){..        a a = new a();.        a b = new b().        a.display();.        b.display();.    }.}...output:..from class a    .from class b...now, i am getting the output as expected..but i want to know why i am using a b = new b(), when same thing i can achieve by using.b b = new b()..what is the advantage of using former techniques, where and when it is beneficial for me?"
