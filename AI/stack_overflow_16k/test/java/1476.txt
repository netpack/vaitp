"print large number without showing e notation i wanted to print a large number(11541160618999999999999999999999999999999948447989) without e in blank. is there any method.. first i take a large number from user (may be 45 digit) and display it on console....package arraycalc;../**. *. * @author gaurav. */..import blank.util.scanner;..class arraycalc {..    /**.     * @param args.     */.    public static void main(string[] args) {..        double input1, input2;.        char operator;.        operation o = new operation();.        scanner input = new scanner(system.in);.        system.out.println(""please enter first number"");.        input1 = input.nextdouble();.        system.out.println(""please enter second number"");.        input2 = input.nextdouble();.        system.out.println(""press + for addition"");.        system.out.println(""press - for subtraction"");.        system.out.println(""press * for multiplication"");.        system.out.println(""press / for divide"");.        operator = input.next().charat(0);.        if ((input1 == math.round(input1)) &amp;&amp; (input2 == math.round(input2))) {.            long a = (long) input1;.            long b = (long) input2;.            switch (operator) {..                case '+':.                    o.add(a, b);..                    system.exit(0);.                case '-':.                    o.sub(a, b);.                    system.exit(0);..                case '*':.                    o.multi(a, b);.                    system.exit(0);..                case '/':.                    o.div(a, b);.                    system.exit(0);.                default:.                    o.error();.                    system.exit(0);..            }.        } else {.            double a = input1;.            double b = input2;.            switch (operator) {..                case '+':.                    o.add(a, b);..                    system.exit(0);.                case '-':.                    o.sub(a, b);.                    system.exit(0);..                case '*':.                    o.multi(a, b);.                    system.exit(0);..                case '/':.                    o.div(a, b);.                    system.exit(0);.                default:.                    o.error();.                    system.exit(0);..            }.        }..    }.}..//interface declared in our class..interface addtion {.    void add(double a, double b);..    void add(long a, long b);..}..interface subtraction {.    void sub(double a, double b);..    void sub(long a, long b);.}..interface multiplication {.    void multi(double a, double b);..    void multi(long a, long b);.}..interface division {.    void div(double a, double b);..    void div(long a, long b);.}...class operation implements addtion, subtraction, multiplication, division {.    @override.    public void add(double a, double b) {.        try..        {.            double c = 0;.            c = a + b;.            result(c);.            //system.out.println(""addition of given numbers is "" + c);..        } catch (arithmeticexception e) {.            system.out.println(e);.        }.    }..    @override.    public void add(long a, long b) {.        try {.            long c = 0;.            c = a + b;.            result(c);.            //system.out.println(""addition of given numbers is "" + c);.        } catch (arithmeticexception e) {.            system.out.println(e);.        }.    }..    @override.    public void sub(double a, double b) {.        double c = 0;.        c = a - b;.        //system.out.println(""subtraction of given numbers is "" + c);.        result(c);.    }..    @override.    public void sub(long a, long b) {.        long c = 0;.        c = a - b;.//  system.out.println(""subtraction of given numbers is "" + c);.        result(c);.    }..    @override.    public void multi(long a, long b) {.        long c = 0;.        c = a * b;.//  system.out.println(""multiplication of given numbers is "" + c);.        result(c);..    }...    @override.    public void multi(double a, double b) {.        double c = 0;.        c = a * b;.        //system.out.println(""multiplication of given numbers is "" + c);.        result(c);.    }..    @override.    public void div(double a, double b) {.        double c = 0;.        c = a / b;.        result(c);.    }..    @override.    public void div(long a, long b) {.        double c = 0;.        double divident = (double) a;.        double divisor = (double) b;.        c = divident / divisor;.        if (c == math.round(c)) {.            result((long) c);.        } else {.            result(c);.        }.    }..    void error() {.        system.out.println(""invalid operator"");.    }..    void result(double d) {.        string e = string.valueof(d);.        //boolean g= e.matches("".*[a-za-z]+.*"");       .        //system.out.println(g);.        if (e.matches("".*[ee]+.*"") == true) {.            system.out.println(""result is in expoential power "" + d);..        } else {.            system.out.println(""result is "" + d);.        }.    }..    void result(long d) {.        string e = string.valueof(d);.        //boolean g= e.matches("".*[a-za-z]+.*"");       .        //system.out.println(g);.        if (e.matches("".*[ee]+.*"") == true) {.            system.out.println(""result is in expoential power "" + d);..        } else {.            system.out.println(""result is "" + d);.        }.    }..}"
