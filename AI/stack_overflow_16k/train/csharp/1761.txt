"program stops working after minimizing any window in windows the program uses two threads: one for collecting the data from usb, and the other writes/displays the data. it seems to work as expected, however, as soon as i minimize/restore any windows on the pc, or press any buttons on the form, it stops working properly (it stops receiving data). i use link list to keep the data streaming in order. i suspect that maybe the link is lost somewhere because of improper variable declaration. is there an obvious mistake in my code that could be causing this?..namespace streamer.{.    public class form1 : system.windows.forms.form.    {..        thread tlisten;.        thread tdisplay;..        public class my_data_buffer.        {            .            public byte[] buffer;.            public int length;.            public my_data_buffer nextbuff;.        }..        private object thislock = new object();.        my_data_buffer phead = null;.        private static autoresetevent dataqueueevent = new autoresetevent(false);..        public form1().        {.            // some settings;.        }..        public unsafe void datadisplaythread().        {.             my_data_buffer pworkingset = phead;..             if (pworkingset == null).             {.                  // make sure link list head is initialized............                  do {dataqueueevent.waitone();} while (phead == null);..                  // wait till the two datas are available to write..                  if (phead.nextbuff == null){ dataqueueevent.waitone(); }..                  if (pworkingset == null) { pworkingset = phead; }.             }..             // let's start the data write loop .             while (brunning || (pworkingset != null)).             {.                  // copy small array to a bigger array.                  for (int i = 0; i &lt; pworkingset.length; i++).                  {.                      pixelvalues[pixptr] = pworkingset.buffer[i];.                      pixptr++;.                  }..                 if (pixptr &gt;= imwidth * imheight).                 {.                      pixptr = 0;.                      // show data in pixelvalues.                 }..                 // traverse through the link list data structure..                 if (pworkingset.nextbuff == null).                 {.                    do.                    {.                        if (pworkingset.nextbuff == null dataqueueevent.waitone();..                        lock (thislock).                        {.                            if (pworkingset.nextbuff == null &amp;&amp; !brunning).                            break;.                        }.                     } while (pworkingset.nextbuff == null);.                 }..                 // we are good to loop for the next operation.                 lock (thislock).                 {.                     phead = phead.nextbuff;.                     pworkingset = phead;.                 }.             }.             // all write operation is at completion.             phead = null;.         }..         public unsafe void xferdata(...).         {.             my_data_buffer tempbuff = null;..             for (; brunning; ).             {.                // .... do something .                // push the data to a link list for.                lock (thislock).                {.                    my_data_buffer newbuff = new my_data_buffer();.                    newbuff.nextbuff = null;.                    newbuff.buffer = xbufs[k];.                    newbuff.length = len;..                    if (tempbuff == null) tempbuff = newbuff;.                    else.                    {.                        tempbuff.nextbuff = newbuff;.                        tempbuff = newbuff;.                    }..                    if (phead == null) phead = newbuff;.                    else.                    {.                        dataqueueevent.set();.                    }.                }.                ///////////////////link list population completes///////////.                thread.sleep(0);.             } // end infinite loop                      .         }..         private void startbtn_click(object sender, system.eventargs e).         {..            if (startbtn.text.equals(""start"")).            {.                // ....                phead = null;.                brunning = true;..                tlisten = new thread(new threadstart(xferthread));.                tlisten.isbackground = true;.                tlisten.priority = threadpriority.highest;.                tlisten.start();..                tdisplay = new thread(new threadstart(datadisplaythread));.                tdisplay.isbackground = true;.                tdisplay.priority = threadpriority.highest;.                tdisplay.start();.            }.            else.            {.                if (tlisten.isalive).                {.                    // ....                    brunning = false;.                    if (tlisten.join(5000) == false ).                    tlisten.abort();.                    tlisten = null;.                }.                if (tdisplay.isalive).                { .                    if (tdisplay.join(5000) == false ).                         tdisplay.abort();..                    display = null;.                }.            }.         }.     }. }"
