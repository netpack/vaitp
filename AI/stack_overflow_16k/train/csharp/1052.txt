"two properties update each other i have two properties in a class that update each other: binary and value, where binary is the binary value and value is the base 10 value. each updates each other such that when the set method of value is called, binary is updated, and vice versa. ..private uint64 _binary;.public uint64 binary {.    get { return _binary; }.    set .    { .        if (_binary != value) {.            _binary = value; .            binarytovalue(); .            updateui(); .        }.    }.}..private double _value;.public double value {.    get { return _value; }.    set .    { .        if (_value != value) {.            _value = value;.            valuetobinary(); .        }.    }.}..private void valuetobinary() {.    // loop through and set each bit high or low as needed.}...if the current value is a decimal 1 and just the lsb of binary is set high, then if i change the value to 6, now i am setting 3 bits to different values, meaning the set method of binary is seeing a different value each time (set bit 0 low (value = 0), set bit 1 high (value = 2), set bit 2 high (value = 4)). in this scenario, binarytovalue() is also called three times, so the value property is changing when each of the the three bits is set to a different state, which it should not be because the value property initially contained the correct value. ..how do i prevent this from occurring?..i can't update the backing field because i need the ui to be updated when binary is modified. i took a look at this question: properties that update each other, but the solution there does not apply here because i can't update the backing field only."
