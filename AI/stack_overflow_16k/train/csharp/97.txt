"complex use of delegates blank newbie here...in one of my classes (an entity class, to be precise), i have a delegate that takes in an entity and another related class:..public delegate void firingfunc(entity e, bulletfactory fact)...and a loop in the entity class that calls this function every frame (if its defined):..firingfunc firingfunc = null; //defined later.if(firingfunc).    firingfunc(this, somebulletfactory);    ...as one could probably tell, this is a delegate that serves as a bullet firing function (you would code something like a timer for the bullet, the angles to fire at, etc). however, a thought occurred to me: what if i wanted the bullet to have a slight difference, but still remain the same (something like a tad bit slower, a slightly different color, in a different direction, etc). i would have to create another function to serve as the delegate - this seemed wrong to me...here is an example of what creating and setting the delegate would look like:..entity e = new entity( ... ).e.firingfunc = firingfunctions.somefiringfunctionname;...is there a way i could add parameters to this? it would be great if i could do something akin to the following:..e.firingfunc = firingfunctions.somefiringfunctionname(somechange1, somechange2);"
