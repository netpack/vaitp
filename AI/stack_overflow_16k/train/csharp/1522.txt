"singleton pattern confusion as per the singleton pattern, ..public sealed class singleton.{.    static singleton instance=null;..    singleton().    {.    }..    public void abc(){.    }..    public static singleton instance.    {.        get.        {.            if (instance==null).            {.                instance = new singleton();.            }.            return instance;.        }.    }.}...the above is not thread-safe.two different threads could both have evaluated the test if (instance==null) and found it to be true, then both create instances, which violates the singleton pattern. ..confusion is instance is static, how this can be null once it is called on ui thread or other threads?..edit..i meant to said that once i have called singleton.instance.abc();.singleton.instance should not be null until it is disposed manually. right?"
