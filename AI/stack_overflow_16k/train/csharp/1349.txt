"don't execute next line until process.start is complete i'm writing a simple blank console application which opens up four instances of windows explorer and uses pinvoke's movewindow to place them around the screen. my problem is that the process.start command seems to run too slowly, and the movewindow function cannot find the process unless i deliberately slow the program down. here is my code:..process.start(new processstartinfo().{.    filename = ""explorer"",.    arguments = location,  //defined elsewhere (for testing just ""."").    useshellexecute = false.});.int[] pos = getpositions(position); //little function which gets the positions i want for this window.system.threading.thread.sleep(500);.intptr hnd = getforegroundwindow();.bool ok = movewindow(hnd, pos[0], pos[1], pos[2], pos[3], false);...see how i'm having to sleep for an (arbitrary) half second. it's not ideal, because i don't know the specifications of the machine it will be running on. it could end up being either inefficient on a fast machine or could break on a slower machine. is there a more concrete way of waiting until a process has started where i don't have to arbitrarily wait for a set time?....also, on a semi-related note, you may notice a bit of cowboy code which just gets the foreground window to grab the window i want moved. this is because i had an absolute mare trying to pick out specific window explorer processes. from what i can tell they just don't work the same way as anything else (like when i was testing with notepad or ie) and just passing a handle doesn't work. anyone who's familiar with this problem, feel free to contribute, but if not don't spend any time on it - clunky as this solution is, it works, and for a little application i don't want to spend hours bashing my head against the keyboard trying to figure out the proper way of doing it."
