"automatic desktop wallpaper change i am trying to change the desktop wallpaper in every 5 mins automatically (for debugging purpose it's configured to 5 seconds)...i found some standard method for calling systemparametersinfo() api from .net code with standard parameters to it. ..i did them. but i found that it picks up only the bmp files. i am having a huge collection of jpg which i prefer to put on desktop...well i found some suggestions to convert the jpg into bmp using image.save() method. i don't prefer this...what is the direct method to have the jpg set on the desktop? i guess user32.dll should provide a way to it...here is the code for your reference:..using system;.using system.collections.generic;.using system.text;.using system.runtime.interopservices;.using system.io;.using system.timers;..namespace changewallpaper.{.    class program.    {.        [dllimport(""user32.dll"")].        public static extern bool systemparametersinfo(uint32 uiaction, uint32 uiparam, string pvparam, uint32 fwinini);.        static fileinfo[] images;.        static int currentimage;..        static void main(string[] args).        {.            directoryinfo dirinfo = new directoryinfo(@""c:temp"");.            images = dirinfo.getfiles(""*.jpg"", searchoption.topdirectoryonly);..            currentimage = 0;..            timer imagechangetimer = new timer(5000);.            imagechangetimer.elapsed += new elapsedeventhandler(imagechangetimer_elapsed);.            imagechangetimer.start();..            console.readline();.        }..        static void imagechangetimer_elapsed(object sender, elapsedeventargs e).        {.            const uint spi_setdeskwallpaper = 20;.            const int spif_updateinifile = 0x01;.            const int spif_sendwininichange = 0x02;..            systemparametersinfo(spi_setdeskwallpaper, 0, images[currentimage++].fullname, spif_sendwininichange | spif_updateinifile);            .            currentimage = (currentimage &gt;= images.length) ? 0 : currentimage;.        }.    }.}"
