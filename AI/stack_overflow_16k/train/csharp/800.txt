"ability to create class instance with and without generics i have a question about generics in blank i want to create command class that can be called with generic type and without it something like:..public class command : icommand.{.    private readonly action&lt;object&gt; execute;..    private readonly predicate&lt;object&gt; canexecute;..    private readonly action&lt;tclass&gt; texecute;..    private readonly predicate&lt;tclass&gt; tcanexecute;..    public command(action&lt;object&gt; execute, predicate&lt;object&gt; canexecute = null).    {.        this.execute = execute;.        this.canexecute = canexecute;.    }..    public command(action&lt;tclass&gt; execute, predicate&lt;tclass&gt; canexecute = null).    {.        texecute = execute;.        tcanexecute = canexecute;.    }..    public bool canexecute(object parameter).    {.        return this.canexecute == null || (this.canexecute != null &amp;&amp; this.canexecute(parameter));.    }..    public bool canexecute&lt;tclass&gt;(tclass parameter).    {.        return canexecute == null || (canexecute != null &amp;&amp; canexecute(parameter));.    }..    public void execute(object parameter).    {.        this.execute(parameter);.    }..    public void execute&lt;tclass&gt;(tclass parameter).    {.        execute(parameter);.    }..    public event eventhandler canexecutechanged.    {.        add =&gt; commandmanager.requerysuggested += value;.        remove =&gt; commandmanager.requerysuggested -= value;.    }.}...so i can use this this way:..new command(p =&gt; some instructions);...or..new command&lt;class&gt; (p =&gt; some instructions p.property)...problem is that class instance in this case always needs generic type in &lt;>, and i know i can just cast p to certain type like (class)p, but just wondering if this is possible?"
