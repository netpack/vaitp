"blank run application as another user fails with system.componentmodel.win32exception i work with emergency services and they have an application that uses map files to let them know where they need to go and it uses gps to let them know where they are. we have to update the map files as things change and before i started here they were being done through vb scripts which started to fail. i decided to code my own app in blank to do this which works fine. ..i created a package in sccm 2012 that caches all of the files locally and then it compares the files in the cache to what is on the machine and then replaces any older files. this all works fine but the application they use called mobilecad locks the files so i have to kill this process and then do the file copy and start the application again. we never know when an emergency happens so this update may start when they are on the road so it is important that it starts the application again as soon as possible. if it does not start the application then the emergency services people may try to do so manually but if core files are being updated then it may not start or cause issues...i coded my application which uses an app manifest to force it to run as an administrator for the file copy. this application is run through sccm which uses the local 'system' account to do all of the work and killing mobilecad and copying files which works great. what i originally found was that it does start mobilecad but it does so under the system account and the process would be there but it was not visible. i think this is the same problem they were originally having so the emergency services people would need to reboot the computer and wait for it to log back in and then start the wireless service so they could get back into mobilecad. ..to address this issue i did research and found that i could use the processstartinfo in .net and force it to use another account. as we use an automatic logon for these machines the users name, password, and domain are all in the registry so it was easy to pull it out and inject it into the code. awesome, looks like it is easy enough so i code it up and sure enough it works perfectly when run under my admin account. in my basic testing everything worked perfectly until i try the same in sccm, now it fails with the following error message. ..system.componentmodel.win32exception (0x80004005): access is denied.at system.diagnostics.process.startwithcreateprocess(processstartinfo    startinfo).at system.diagnostics.process.start().at system.diagnostics.process.start(processstartinfo startinfo).at updatefdm.program.startprocess(string processname)...i am sorry for all of the words but i believe it helps if you have a good understanding of the issue and what i am trying to do. i have also hard coded the user information into the code instead of pulling it from the registry but i get the same error. again, this works fine under my admin account but fails when it is pushed through sccm and it is only launching mobilecad that fails. ..this is the code i am using for launching moblecad, do you see where my issue may lie? i know sccm confuses it but sccm basically runs things just as you would from the command line but it uses the local system account...thanks for any help...// declares the new start instance.processstartinfo process = new processstartinfo();..// gets the process to start.process.filename = processname;.// maximizes the process windows at start-up.process.windowstyle = processwindowstyle.maximized;..// gets the user name from the autologon information.process.username = getdefaultuserinfo(""defaultusername"");.// gets the domain for the user.process.domain = getdefaultuserinfo(""defaultdomainname"");..// holds the password for the default user.securestring password = new securestring();.// gets the raw password from the registry.string rawpassword = getdefaultuserinfo(""defaultpassword"");..// copies the password in a secure string.foreach (char ch in rawpassword).{.    password.appendchar(ch);.}..// sets the password.process.password = password;..// needed to launch the app as the logged on user.process.loaduserprofile = true;.process.useshellexecute = false;..// starts the process.process.start(process);..// process started, return true.return true;"
