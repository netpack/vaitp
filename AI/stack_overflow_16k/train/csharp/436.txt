"is it possible to use a comparator to delete items from a list? i have a poco like this:..class poco{.    int first;.    int last;.    int category;.}...and a list..list&lt;poco&gt; pocolist;...i need to remove items from the list where they overlap with an item with a specified category, overlap being defined as:..if (a.category!=category &amp;&amp; (a.first &gt;= b.first &amp;&amp; a.first &lt;= b.last) || (a.last &gt;= b.first &amp;&amp; a.last &lt;= b.last)){.  // delete item a .}...two overlapping items will never have the same category.  last is always greater than first.  first and last define a range.  it is possible that there is more than one overlap...the list is sorted such that list[n].start &lt; list[n+1].start is always true...for example, given a category of 10, i need to delete all items that do not have a category of 10 and where any part of the range of that item overlaps with the range of an item with category 10...my current implementation is crude and in profiling my app, i can see that >65% of the entire time of the processing branch where it's used is spent in this loop, not surprisingly...for (int i=object.pojolist.count-1;i&gt;=0;i--){.    for (int j=object.pocolist.count-1;j&gt;=0;j--){.        if (pocolist[i].overlaps(pocolist[j],category){.            pocolist.removeat(j);.        }            .    }.}...i feel that there must be a way to delete items using a comparator or linq but i can't figure it out...any suggestions?  thank you."
