"is there a way to count the index values of duplicate numbers in a binary search? i want to be able to count multiple entries in an already sorted array. in previous attempts, i've tried to use a list like this...public static list&lt;int&gt; duplicate = new list&lt;int&gt;();...however, it wouldn't count properly and kept printing the same index number. i'm pretty much stumped on what to do at this point any help would be appreciated. ..class binarysearch.{.    public static int lowestindex = 0;.    public static int highestindex;.    public static int middleindex = 0;.    public static int indexvalue = -1;..    public static int binarysearch(double[] data, double target).    {.        int highestindex = data.length - 1;..        while (lowestindex &lt; highestindex).        {.            middleindex = lowestindex + (highestindex - lowestindex) / 2;.            if (data[middleindex] == target).            {.                indexvalue = middleindex;.                highestindex = middleindex;.            }.            else if (data[middleindex] &gt; target).            {.                highestindex = middleindex;.            }.            else.            {.                lowestindex = middleindex + 1;.            }   .        }..        return indexvalue;.    }.}...edit ..public static list&lt;int&gt; duplicate = new list&lt;int&gt;();...is declared earlier in the code in..class dataset.{.   public static list&lt;int&gt; duplicate = new list&lt;int&gt;();.}...then printed later in the main method..foreach (object dupes in dataset.duplicate).{. console.writeline(dupes);.}"
