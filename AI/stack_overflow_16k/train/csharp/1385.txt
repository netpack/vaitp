"using microsoft graph api in a daemon i am trying to write a daemon that uses the graph api to populate items into a shared outlook calendar. i have created an app at apps.dev.microsoft.com, given it graph permissions (delegated user.read, directory.read.all, user.read.all) and app perms (calendars.readwrite, directory.read.all, user.read.all), and generated a secret...our azure admin has gone through the admin consent process, and validated that an aad serviceprincipal has been created...in the following code, graphclient gets created but when i try to use it (to list users here) i get the exception authorization_identitynotfound, ""the identity of the calling application could not be established"". what am i missing?..i have used the same clientid in an interactive authentication flow example successfully, so the app setup in aad appears to be ok...using system;.using system.collections.generic;.using system.linq;.using system.text;.using system.threading.tasks;.using microsoft.identity.client;.using microsoft.graph;.using system.net.http.headers;..namespace ccsync.{.    class program.    {.        private static string clientid = ""e914fd5d-xxx-xxxx-xxxx-xxxxxxxxxxxx"";.        private static string clientsecret = ""..."";.        private static graphserviceclient graphclient = null;    ..        static async task main(string[] args).        {                .            igraphserviceuserscollectionpage users = await getusersasync();    ..        }...        public static async task&lt;igraphserviceuserscollectionpage&gt; getusersasync().        {.            var graphclient = getgraphclient();..            try.            {.                var group = await graphclient.users.request().getasync();.                if (group == null) return null;.                return group;.            }.            catch (serviceexception e).            {.                console.writeline(e.message);.                return null;.            }.        }..        private static graphserviceclient getgraphclient().        {.            // get access token including application permissions.            confidentialclientapplication cl = new confidentialclientapplication(.            clientid,..              ""https://login.microsoftonline.com/mytenant.onmicrosoft.com/oauth2/v2.0/token"",.              new clientcredential(clientsecret),.              new tokencache(), null);.            authenticationresult authresult = cl.acquiretokenforclientasync(.              new string[] { ""https://graph.microsoft.com/.default"" }).result;..            if (graphclient == null).            {.                // create microsoft graph client..                try.                {.                    graphclient = new graphserviceclient(.                        ""https://graph.microsoft.com/v1.0"",.                        new delegateauthenticationprovider(.                            async (requestmessage) =&gt;.                            {.                                var token = authresult.accesstoken;.                                requestmessage.headers.authorization = new authenticationheadervalue(""bearer"", token);...                            }));.                    return graphclient;.                }..                catch (exception ex).                {.                    console.writeline(""could not create a graph client: "" + ex.message);.                    return null;.                }.            }.            else.            { return graphclient; }..        }.    }.}"
