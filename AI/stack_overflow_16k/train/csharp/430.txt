"how to enforce a derived type for a method that is implemented from abstract? my abstract class has a method that is abstract like this:.. public abstract void run(basetype basetype);...and now in my derived class which has to implement this function, i want it to only accept a specific derived type from basetype..so it would have:..public override void run(derivedtype derivedtype){}...is there any way to enforce this at all ? ..currently i have to do:..public override void run(basetype basetype) {.   if(!(basetype is derivedtype)) {.       // throw exception.   }.}...it's not very strict with enforcing the type - i was wondering if there is a way to do so without the need to constantly add a type check ?"
