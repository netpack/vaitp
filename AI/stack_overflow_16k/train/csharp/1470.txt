why in an action parameter do i sometimes need to pass a lambda and other times not? consider the following:..public void step(action code){}...to reuse this i typically pass a lambda expression through like this:..tr.step(() =&gt; statictype.somemethod(someparameter);...while at other times i can simply pass a void function without using a lambda expression :..tr.step(somenonstatictype.somemethod);...where somemethod is : ..public override void somemethod(){}...can someone please explain this to me?..edit: to be clear both have void return types. edit 2: if i'm asking these questions what book should i be reading (in the comments please).
