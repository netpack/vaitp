"list<t> vs ienumerable<t> i ran the following console application:..class program.{.    static void main(string[] args).    {.        int n = 10000;..        stopwatch s = new stopwatch();.        s.start();.        list&lt;int&gt; numbers = getlistnumber(n);.        foreach (var number in numbers).        {..        }.        s.stop();.        console.writeline(s.elapsed);.        console.writeline();..        s.restart();.        foreach (var number in getenumerator(n)).        {..        }.        s.stop();.        console.writeline(s.elapsed);.        console.readkey();.    }..    static list&lt;int&gt; getlistnumber(int n).    {.        list&lt;int&gt; numbers = new list&lt;int&gt;();.        for (int i = 0; i &lt; n; i++).            numbers.add(i);.        return numbers;.    }..    static ienumerable&lt;int&gt; getenumerator(int n).    {.        for (int i = 0; i &lt; n; i++).            yield return i;.    }.}...in order to compare the time we need to iterate through the elements of a collection and if it was better to build this collection using a list or an ienumerable. to my surprise, the result it was 00:00:00.0005504 for the list and 00:00:00.0016900 for the ienumerable. i was expecting that the second way, ienumerable, it would be faster because the values are created on the fly and we don't have to add them each one of them one  item at the time, like in the case of a list and then iterate through it. ..could please someone explain me this difference? why we got this behavior and no the opposite one. ..thanks in advance for any help!"
