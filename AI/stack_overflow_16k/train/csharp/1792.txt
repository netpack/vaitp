"nested internal class: access parent method and expose variable of nested class type i am writing a class library to interface with a piece of test equipment through ethernet commands. the device can have multiple axes defined. the main class will need to be able to send and receive commands. also, each axis will need to be able to send and receive commands. here is an example:..public class testequipment.{.    private tcpclient _tcpclient;.    private networkstream _networkstream;.    public axis[] axes; // variable should be accessible publicly..    public testequipment().    {.        axes = new axis[2];.        axes[0] = new axis();.        axes[1] = new axis();.    }..    public void initialize().    {.        // use send/receive method to initialize the device.    }..    internal string sendreceive(string command).    {.        return // uses _tcpclient and _networkstream to talk to the device.    }..    internal class axis.    {.        public double angle.        {.            get.            {.                // use send/receive method from parent class to get the axis angle.            }..            set.            {.                // use send/receive method from parent class to set the axis angle.            }.        }.    }.}...now i have two different problems. the first is that i have red squiggles under axes for line public axis[] axes because axis is less accessible than axes. the second problem is that i am not sure how to use sendreceive from the testequipment class and its inner axis class...the axes problem can be fixed if it is not nested and public, but i don't want any axis to be created outside of testequipment...i can use sendreceive in both classes if i put the method and the tcpclient and networkstream in a static class and make them static but that seems ugly...here is a quick snippet of how it is used:..var device = new testequipment();.device.initialize();.device.axes[0].angle = 90;...these should not be possible outside of the testequipment class:..device.sendreceive("""");.var newaxis = new axis();...unfortunately i am not able to share my actual code, so if needed, i can add on to my example code. if there is any more clarification needed i am happy to do so...answer..here is the working code:..public class testequipment.{.    private tcpclient _tcpclient;.    private networkstream _networkstream;.    public axis[] axes;..    public testequipment().    {.        axes = new axis[2];.        axes[0] = new axis(this);.        axes[1] = new axis(this);.    }..    public void initialize().    {.        // use send/receive method to initialize the device.    }..    private string sendreceive(string command).    {..    }..    public class axis.    {.        private testequipment _parent;..        internal axis(testequipment parent).        {.            _parent = parent;.        }..        public double angle.        {.            get.            {.                return _parent.sendreceive("""");.            }..            set.            {.                value = _parent.sendreceive("""");.            }.        }.    }.}"
