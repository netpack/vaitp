"return properties that are the same from typed collection i have a an object called fooobject:..public class fooobject.{.     public string test1 {get; set;}.     public list&lt;foosubobject&gt; subtest1 {get; set;}.}...for later in the example, i also have a differencefooobject:..public class differencefooobject.{.     public string sharedtest1 { get; set; }.     public list&lt;foosubobject&gt; subtest1 {get; set;}.}...for later in the example, i also have a foosubobject. fooobject has a property subtest1 that contains a typed collection of this type:..public class foosubobject.{.     public string test2 { get; set; }.}...i have a method that accepts a typed collection of fooobject. in this method, i need to calculate if any of the properties between the fooobjects within the typed collection parameter, have equal properties. ..public differencefooobject runpropcomparison(list&lt;fooobject&gt; foos).{.     differencefooobject difference = new differencfooobject();.     fooobject forcomparison = foos.firstordefault();.     ienumerable&lt;fooobject&gt; intersectcollection = foos.skip(1);..     // maybe do this using the first to compare the rest? no clue.}...i do not know the most efficient way to complete the above method. it is further complicated, at least imho, that the calculation has to take into account the properties of objects in collections that are a property of fooobject (looping through the properties of foosubobject). ..here is the requested in/out:..list&lt;fooobject&gt; foos = new list&lt;fooobject&gt;();...fooobject obj = new fooobject();.obj.test1= ""test1"";.obj.subtest1 = new list&lt;foosubobject&gt;();..foosubobject obj2 = new foosubobject();.obj2.test2 = ""test2"";..obj.subtest1.add(obj2);..fooobject obj3 = new fooobject();.obj3.test1= ""test1"";.obj3.subtest1 = new list&lt;foosubobject&gt;();..foosubobject obj4 = new foosubobject();.obj4.test2 = ""test3"";..obj3.subtest1.add(obj2);...that's what would go in, ideally it would return that test1 is the same across the board."
