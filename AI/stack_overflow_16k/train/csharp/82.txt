"what's the advantage in using a helper class to define a constant? it was suggested to me that to define a constant i could have a helper class, like this, where you define all your colors / values.. public static class styles.    {.         private static color _backgroundcolor = color.fromhex(""151515"");.         public static color backgroundcolor =&gt; _backgroundcolor;.    }...then, in xaml, you reference it in the header:..xmlns:local=""clr-namespace:yourprojectassembly.yourname;assembly=yourprojectassembly.yourname""...and to use it:..&lt;grid backgroundcolor=""{x:static local:styles.backgroundcolor}""/&gt;...can someone tell me what is the advantage of using a helper class like this when i could just declare a static class called styles that has static variable with the value? also is there another way that might be a better way to do this?"
