"prevent implicit cast to int when asking for expression<func<t, decimal>> so, int is implicitly convertible to decimal. this causes an issue when wanting an expression of a decimal property, where an expression of an int property with an implicit cast is passed instead. due to the implicit cast, no compiler error is given...eg:..class thing {.   public int intproperty { get; set; }.}..void dosomething(.   expression&lt;func&lt;thing, decimal&gt;&gt; pdecimalexpression.) {.   ....}..dosomething(t =&gt; t.intproperty); // compiles; intproperty is implicitly cast to decimal...is there a way at compile time that i can ensure i'm really getting a decimal property? i would like a compiler error if i pass an expression with an implicit cast in it like this...(since i'm using reflection, i end up with a runtime error saying that the property i'm using can't be given a decimal value. i feel like the best i could do is detect the type mismatch myself at runtime and throw an only slightly better error instead.)"
