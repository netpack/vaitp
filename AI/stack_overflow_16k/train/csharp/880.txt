"action on each method's return value what i'd like to do is take some action using the value returned by every method in a class...so for instance, if i have a class order which has a method..public customer getcustomer().{. customer customerinstance = // get customer. return customerinstance;.}...let's say i want to log the creation of these - log(customerinstance);..my options (afaik) are:...call log() in each of these methods before returning the object. i'm not a fan of this because it gets unwieldy if used on a lot of classes with a lot of methods. it also is not an intrinsic part of the method's purpose..use composition or inheritance to layer the log callon the order class similar to:..public customer getcustomer().{. customer customerinstance = this.originalcustomer.getcustomer();. log(customerinstance);. return customerinstance;. }.i don't think this buys me anything over #1..create extension methods on each of the returned types:..customer customerinstance = order.getcustomer().log();.which has just as many downsides....i'm looking to do this for every (or almost every) object returned, automatically if possible, without having to write double the amount of code. i feel like i'm either trying to bend the language into doing something it's not supposed to, or failing to recognize some language feature that would enable this. possible solutions would be greatly appreciated."
