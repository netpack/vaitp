"setting property of dictionary type works in constructor but not when using property default i have a class that has a property of type dictionary&lt;object, func&lt;object, treenode&gt;&gt;. i can happily set this property from the constructor (or by using an expression body), but not as a default value of the property (it doesn't change if the property is readonly, or have public get/set). this issue also occurs if the dictionary is instead stored in a field...it comes up with an error saying cannot access non-static method 'methodname' in static context...this is the code that fails:..public class treeviewbuilder.{.    public dictionary&lt;type, func&lt;object, treenode&gt;&gt; objecttreenodebuilder { get; set; }.        = new dictionary&lt;type, func&lt;object, treenode&gt;&gt;.    {.        {typeof(type1), t =&gt; buildtype1treenode((type1) t)},.        {typeof(type2), t =&gt; buildtype2treenode((type2) t)},.    };..    public treenode buildtype1treenode(type1 type1).    {.        return new treenode { tag = type1 };.    }..    public treenode buildtype2treenode(type2 type2).    {.        return new treenode { tag = type2 };.    }.}...but this code is fine:..public class treeviewbuilder.{.    public dictionary&lt;type, func&lt;object, treenode&gt;&gt; objecttreenodebuilder { get; set; }..    public treeviewbuilder().    {.        objecttreenodebuilder = new dictionary&lt;type, func&lt;object, treenode&gt;&gt;.        {.            {typeof(type1), t =&gt; buildtype1treenode((type1) t)},.            {typeof(type2), t =&gt; buildtype2treenode((type2) t)},.        };.    }..    public treenode buildtype1treenode(type1 type1).    {.        return new treenode { tag = type1 };.    }..    public treenode buildtype2treenode(type2 type2).    {.        return new treenode { tag = type2 };.    }.}...i'm guessing that the objecttreenodebuilder property is being initialised before the treeviewbuilder object is fully instantiated/constructed, therefore the methods aren't yet known about; and this is why it complains that the methods should be static. is this correct, or is something else going on under the hood?"
