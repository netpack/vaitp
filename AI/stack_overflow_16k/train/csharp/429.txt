"updating total causing infinite loop i current have 3 telerik:radmaskedcurrencyinput. ..the first one is the principal..the first and second are the disbursals..at the moment i have it set up such that principal = first disbursal + second disbursal...i'm trying to have a case such that if i update principal it updates first disbursal and sets second disbursal to zero. so principal = disbursalone and disbursaltwo = 0..// pv is principal.private decimal?_pv;.public decimal? pv { get { return _pv; } set { _pv = value; onpropertychanged(""pv""); } }..private decimal? _disbursalone;.public decimal? disbursalone.{.    get.    {.        return _disbursalone;.    }.    set.    {.        _disbursalone = value;.        if (_disbursalone != null).            disbursaltotal = _disbursalone + disbursaltwo;.        else.        {.            _disbursalone = 0;.        }.        onpropertychanged(""disbursalone"");.    }.}...disbursal two essentially almost identical to disbursal one so the code is not necessary...private decimal? _disbursaltotal;.public decimal? disbursaltotal .{ .    get { return _disbursaltotal; } .    set.    { .        _disbursaltotal = value;.        if (_disbursaltotal != null) updatedisbursaltotal(_disbursaltotal); .            else updatedisbursaltotal(0);.        pv = _disbursaltotal;.        onpropertychanged(""disbursaltotal""); .    } .}...i apologize for the bad title. ..// updates the total disbursed fields on the ui .public void updatedisbursaltotal(decimal? total).{.    var cultureinfo       = thread.currentthread.currentculture;   // you can also hardcode the culture, e.g. var cultureinfo = new cultureinfo(""fr-fr""), but then you lose culture-specific formatting such as decimal point (. or ,) or the position of the currency symbol (before or after).    var numberformatinfo  = (numberformatinfo)cultureinfo.numberformat.clone();.    numberformatinfo.currencysymbol = ""$""; // replace with ""$"" or ""Â£"" or whatever you need.    double _total         = (double) total;.    disbursestring        = _total.tostring(""c"", numberformatinfo);.}..private string _disbursestring;.public string disbursestring { get { return _disbursestring; } set { _disbursestring = value; onpropertychanged(""disbursestring""); } }"
