"how can i create a class that caches objects? im new to generics in blank, and i'm trying to create a storage that other parts of my program can ask for models objects..the idea was that if my cache class has the object, it checks its date and returns it if the object is not older then 10 min. .if it is older then 10 min it downloads a updated model from the server online. .it it does not have the object is downloads it and returns it...but i'm having some problems pairing my objects with a datetime, makeing it all generic. ..// model.public class person.{.    public string name { get; set; }.    public int age { get; set; }.}..class program.{.    static void main(string[] args).    {.        person p = new person();..        cache c = new cache();..        p = c.get&lt;person&gt;(p);.    }.}..public class cache.{.    struct datedobject&lt;t&gt;.    {.        public datetime time { get; set; }.        public t obj { get; set; }.    }..    list&lt;datedobject&lt;t&gt;&gt; objects;..    public cache() .    {.        objects = new list&lt;datedobject&lt;t&gt;&gt;();.    }..    public t get&lt;t&gt;(t obj).    {.        bool found = false;..        // search to see if the object is stored.        foreach(var elem in objects).            if( elem.tostring().equals(obj.tostring() ) ).            {.                // the object is found.                found = true;..                // check to see if it is fresh.                timespan sp = datetime.now - elem.time;..                if( sp.totalminutes &lt;= 10 ).                    return elem;.            }...        // object was not found or out of date..        // download object from server.        var ret = jsonconvert.deserializeobject&lt;t&gt;(""downloaded json string"");..        if( found ).        {.            // redate the object and replace it in list.            foreach(var elem in objects).                if( elem.obj.tostring().equals(obj.tostring() ) ).                {.                    elem.obj = ret;.                    elem.time = datetime.now;.                }.        }.        else.        {.            // add the object to the list.            objects.add( new datedobject&lt;t&gt;() { time = datetime.now, obj = ret });                .        }..        return ret;.    }.}"
