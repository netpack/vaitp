"sendkey to hidden cmd i recently created a ui tool that contains a recreated command prompt. the problem is, i have no way of killing, for example, a continuous ping. the normal method of doing that would be to press ctrl+c to kill the running command. i am trying to find a way to send a keypress, for example, ctrl+c, to the hidden cmd from my ui...so you can visualize in your head what is going on here, i have a side panel where you select which tool in the ui you want to use. i have a richtextbox named doallthethingstextbox which i use to, well, do all the things. i also have another box that is mainly used to enter the name of a computer but i repurposed it so i wouldn't have to make another textbox, which is called compnamebox. if i type ping 8.8.8.8 into compnamebox and press enter, it works like a cmd and displays the output in doallthethingstextbox. say i type ping 8.8.8.8 -t. it will start a continuous ping that you can stop by pressing ctrl+c. since i am not typing directly into cmd, i can't stop the command once it has started unless i kill it from task manager. but that kills the whole cmd which i was using...i have tried to use the sendkey code but have not been able to figure out how to send it to the running cmd on button press...    private void toolselectionbox_selectedindexchanged(object sender, eventargs e).    {.        //display panel.        if (toolselectionbox.selecteditem != null &amp;&amp; toolselectionbox.selecteditem.tostring() == ""command prompt"").        {.            cmdprompt = new process();.            cmdprompt.startinfo.filename = ""cmd.exe"";.            cmdprompt.startinfo.createnowindow = true;.            cmdprompt.startinfo.useshellexecute = false;.            cmdprompt.startinfo.redirectstandardoutput = true;.            cmdprompt.startinfo.redirectstandarderror = true;.            cmdprompt.startinfo.redirectstandardinput = true;.            cmdoutput = new stringbuilder("""");.            cmdprompt.outputdatareceived += new datareceivedeventhandler(sortoutputhandler);.            cmdprompt.errordatareceived += new datareceivedeventhandler(sorterrorhandler);.            cmdprompt.start();.            cmdprompt.beginoutputreadline();.            while (!cmdprompt.hasexited).            {.                application.doevents();.            }.        }.    }..    private void checkenter(object sender, system.windows.forms.keypresseventargs e).    {.        if (e.keychar == (char)13).        {.            if (doallthethingsbutton.visible == false).            {.                //this is to check if a button used for other function is the ui is visible.                //if it isn't then you are likely using the cmd option..                cmdprompt.standardinput.writeline(compnamebox.text);.                compnamebox.text = """";.            }.            else.            {.                //do nothing.            }.        }.    }..    private void sortoutputhandler(object sendingprocess, datareceivedeventargs outline).    {.        if (doallthethingstextbox.invokerequired) { doallthethingstextbox.begininvoke(new datareceivedeventhandler(sortoutputhandler), new[] { sendingprocess, outline }); }.        else.        {.            doallthethingstextbox.appendtext(environment.newline + outline.data);.            doallthethingstextbox.selectionstart = doallthethingstextbox.textlength;.            doallthethingstextbox.scrolltocaret();.        }.    }.    private void sorterrorhandler(object sendingprocess, datareceivedeventargs outline).    {.        if (doallthethingstextbox.invokerequired) { doallthethingstextbox.begininvoke(new datareceivedeventhandler(sorterrorhandler), new[] { sendingprocess, outline }); }.        else.        {.            doallthethingstextbox.appendtext(environment.newline + outline.data);.            doallthethingstextbox.selectionstart = doallthethingstextbox.textlength;.            doallthethingstextbox.scrolltocaret();.        }.    }"
