"blank how to handle 1 million lines without crashing the program? i have a file with 1 million lines. my program is made to check line by line if it contains one of the words that the user requests to be removed. if the line contains the word, it has to be removed and added into the list. everytime i press start, the program freezes and nothing shows up in the listbox. however if i add like 1k it will clean the file and display the new file in list. what's the best way to handle this?..my code :..    using system;.using system.collections.generic;.using system.componentmodel;.using system.data;.using system.drawing;.using system.linq;.using system.text;.using system.threading.tasks;.using system.windows.forms;.using system.io;..namespace boringasscombotool.{.    public partial class form2 : form.    {.        list&lt;string&gt; list;.        string myfile = null;.        string[] line = null;.        int linecount = 0;.        public form2().        {.            initializecomponent();.        }..        private void groupbox1_enter(object sender, eventargs e).        {..        }..        private void label1_click(object sender, eventargs e).        {..        }..        private void textbox1_textchanged(object sender, eventargs e).        {..        }.        public void button1_click(object sender, eventargs e).        {..            openfiledialog openfiledialog = new openfiledialog();.            openfiledialog.restoredirectory = true;.            openfiledialog.multiselect = false;.            openfiledialog.filter = ""combo list (*.txt)|*.txt"";.            openfiledialog.filterindex = 1;.            if (openfiledialog.showdialog() == dialogresult.ok).            {.                myfile = openfiledialog.filename;.                messagebox.show(""you selected "" + openfiledialog.filename);....                linecount = file.readalllines(myfile).length;.                label3.text = ""total loaded : "" + linecount;.                line = file.readalllines(myfile);.                //messagebox.show(line[0]);.                //messagebox.show(line[4]);.                list = file.readalllines(myfile).tolist();.              //  streamreader sr = new streamreader(myfile);.            }..        }..        private void button3_click(object sender, eventargs e).        {.            int removedlines = 0;...            string domainsplitted = textbox1.text;.            string[] splitdomain = domainsplitted.split(',');.            //messagebox.show(splitdomain[2]);.            //messagebox.show(splitdomain[3]);.            //messagebox.show(line[2]);.            int sizeofarray = splitdomain.length;.            // messagebox.show(""length is "" + sizeofarray);.            for (int x = 0; x &lt; sizeofarray - 1; x++).            {.              //  for (int i = 0; i &lt; linecount - 1; i++) .              for ( int i = linecount - 1; i&gt;=0; i--).                {.                    if (line[i].contains(splitdomain[x])).                    {..                        list.removeat(i);.                        string[] lines = list.toarray();.                        removedlines++;.                        label4.text = ""total removed = "" + removedlines;.                        listbox1.datasource = list;.                        // messagebox.show(""there is a match on "" + line[i]);.                    }.                }.            }.          // listbox1.datasource = list;.        }..        private void picturebox3_click(object sender, eventargs e).        {.            this.windowstate = formwindowstate.minimized;.        }..        private void picturebox2_click(object sender, eventargs e).        {.            application.exit();.        }....        private void label3_click(object sender, eventargs e).        {..        }..        private void button2_click(object sender, eventargs e).        {.            // system.io.file.writealllines(""cleaned combo file.txt"", list);.            savefiledialog save = new savefiledialog();..            save.filename = ""cleaned combo file.txt"";..            save.filter = ""text file | *.txt"";..            if (save.showdialog() == dialogresult.ok)..            {..                streamwriter writer = new streamwriter(save.openfile());..                for (int i = 0; i &lt; listbox1.items.count; i++)..                {..                    writer.writeline(listbox1.items[i].tostring());..                }..                writer.dispose();..                writer.close();..                messagebox.show(""saved succesfully"");..            }.        }.        // messagebox.show(""=="" + line[27]);..        protected override void wndproc(ref message m).        {.            base.wndproc(ref m);.            if (m.msg == wm_nchittest).                m.result = (intptr)(ht_caption);.        }..        private const int wm_nchittest = 0x84;.        private const int ht_client = 0x1;.        private const int ht_caption = 0x2;..        private void form2_load(object sender, eventargs e).        {..        }.    }.    }"
