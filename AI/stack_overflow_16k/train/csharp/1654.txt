"using reflection foreach through ienumerable or propertyinfo[] i've never worked with reflection but i have a situation where i think it would be useful without being too expensive as a process. i have five different list&lt;.object> where each one has different properties and i have a webmethod that returns only one of these types of list&lt;.object>'s based on a switch statement and passes the resulting list to a method that should iterate through the values and write them out to a stringbuilder that is passed back to the webmethod. i did not want to have to write five different methods to iterate through each object and write out the string. ..looking through so resulted in this code as a good start for the method (below) however, i don't understand the best way to get what i need after that. i tried using propertyinfo[] but it threw errors while casting the object. ienumerable doesn't throw errors but i can't seem to access the values either. ..private stringbuilder generatestring&lt;t&gt;(t obj) where t : class.{.    //trying to use propertyinfo[] example.    type type = obj.gettype();.    propertyinfo[] properties = type.getproperties();.    foreach(propertyinfo p in properties).        sb.append(""{0},{1}"", p.name, p.getvalue(obj,null));..   //trying to use ienumerable example.   ienumerable enumerable = (ienumerable)obj; .   foreach(var x in enumerable).        sb.append(x);..}...when i try to look at the values in the propertyinfo[] array it shows me that it has three items, the last being my object type but i can't seem to find any of the actual values. it throws two errors targetparametercountexception and targetinvocationexception. ..however, when i look at the ienumerable data of x it shows me what i expect to see except not in a format where i think can access the individual pieces, for example: ..x. {base.datatype.myobject}.    age: 24.    name: helen smith.    cost: 24.00.    date: 2/25/2012...which is the correct way to try and access this data? and how do i do it correctly?"
