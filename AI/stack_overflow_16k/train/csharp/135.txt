"am i setting the value of the reference when changing a field of my class, or just the value of a value? i am writing a piece of code which involve a lot of duplication of data and operations and it is important to me that i minimise this as much as possible. the msdn support doc, to me, implies that when i set the field of my class foo as an instance of some class bar i am setting this as a reference to this instance, rather than the value, which is exactly what i want to do. given how important this feature is to me however (it will affect the runtime of my program by orders) could someone wiser please confirm for me...code example:..public class foo.{.    public bar childbar {get;set;}..    public void setchildbarvalue (int value).    {.        this.childbar.value = value;.    }.}..public class bar.{.    public int value {get;set;}.}..var foo1 = new foo();.var foo2 = new foo();.var bar = new bar();..foo1.childbar = bar;.foo2.childbar = bar;..foo1.setchildbarvalue(1);.console.writeline(foo2.childbar.value);...my question is, will the writeline return 1 or null?..thanks in advance."
