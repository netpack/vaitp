"split strings into 2 parts (strings have different patterns) i need help to develop a logic that allow me to locate the first part of a string in a collection of strings. below are a few real sample data:..string s1 = ""dark blue          |d rbh 775  green          |v bhm 554       |r 0012"".string s2 = ""mega |m rmv 451x"".string s3 = ""upr  int|c 0124  upr|r 0006"".string s4 = ""dark green  021|r 0004"".string s5 = ""02.80|r x12  03.00|r calc"".string s6 = ""03.33|r calc""...expected output:..string out1[] = ""dark blue          "", ""|d rbh 775  green          |v bhm 554       |r 0012"""".string out2[] = ""mega "", ""|m rmv 451x"".string out3[] = ""upr  "", ""int|c 0124  upr|r 0006"".string out4[] = ""dark green  "", ""021|r 0004"".string out5[] = ""02.80"", ""|r x12  03.00|r calc"".string out6[] = ""03.33"", ""|r calc""...in general, all the strings comes with 2 patterns:..pattern 1: (value)(| with a letter)(value)(| with a letter).....pattern 2: (value) (value)(| with a letter)(key)(value)(| with a letter)(key).....it is also possible to have the combination of pattern 1 and 2, i.e.: (value)(| with a letter)(value)(| with a letter)(key)(value)(| with a letter)..., but i don't think it matters too much because i just need to identify the pattern of the ""first part""..notes:.i was able to solve the problem on case by case basis:..for s1, s2, s5 and s6, i can just locate the index of first |, then take the substring of 0 to first pipe, and then the rest; for s3, i can locate the first ""empty space"" and take the substring; then for s4, i will locate the first |, and then locate the last ""empty space"" before the |, and take the substring...the problem is: there are about 40,000+ strings, so it is almost impossible for me to split the string on case by case basis. i'm wondering if it is possible to write a logic that can split the string into 2 parts automatically?...  .    updated: despite the 2 general patters, there are some slight variation for each pattern. for example, s1 and s2: there are spaces before the |, but s5 and s6 do not."
