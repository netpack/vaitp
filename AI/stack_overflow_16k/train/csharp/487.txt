"are the keywords ""in"" and ""out"" redundant in generic delegates? i am wondering why the keywords ""in"" and ""out"" are even used in generic delegates, e.g... public delegate tresult func1&lt;in t1, in t2, out tresult&gt;(t1 arg1, t2 arg2);. public delegate tresult func2&lt;in t1, tresult, t2&gt;(t1 arg1, t2 arg2);. public delegate tresult func3&lt;tresult, t2, t1&gt;(t1 arg1, t2 arg2);...all of them compile with the same result. clearly, the compiler treats .all the identifiers inside (....) as ""in"", and the return type in front.of delegate name as ""out"", so it is redundant to use ""in"" and ""out"".inside &lt;....>. as a matter of fact, if you use ""in"" and ""out"" incorrectly.then the compiler will not compile. so what is the point of having them.in the first place?"
