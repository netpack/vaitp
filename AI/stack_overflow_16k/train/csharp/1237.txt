"mouseinput moves mouse to the left at start of loop when i do this;..point startpoint = cursor.position;.startpoint.y -= 1;.domouse(mouseeventf.move | mouseeventf.absolute, startpoint);...the mouse doesn't just move up.. it moves a bit to the left as well. but if i do it in a loop, it only moves to the left at the first iteration...here is a fully working console program presenting the problem. you have to add reference -&gt; .net -&gt; system.drawing and system.windows.forms to get it to compile...when starting the program type start to move the mouse up 5 pixels once or type start x (x being a number) to move the mouse up 5 pixels x times. you will see that each new loop the mouse will move a bit to the left; it shouldn't be doing that at all...using system;.using system.text.regularexpressions;.using system.threading;.using system.drawing;.using system.windows.forms;.using system.runtime.interopservices;..namespace mousemove_temp.{.    class program.    {.        //capture user input.        static void main(string[] args).        {.            while (true).            {.                string s = console.readline();..                switch (s).                {.                    case(""start""):.                        movemousetest(1);.                        break;.                    default:.                        //get # of times to run function.                        match match = regex.match(s, @""start (.+)"", regexoptions.ignorecase);.                        if (!match.success || match.groups.count != 2) break;..                        //copy # to int.                        int amnt = -1;.                        try.                        {.                            amnt = int32.parse(match.groups[1].value);.                        }.                        catch (exception) { break; } //fail.                        if (amnt &lt;= -1) break; //fail.                        movemousetest(amnt); //aaaawww yeah..                        break;.                }..                thread.sleep(10);.            }.        }..        //move the mouse.        static void movemousetest(int repeat).        {.            int countrepeat = 0;..            //loop entire function x times.            while (countrepeat &lt; repeat).            {.                point startpoint = cursor.position;.                int amount = 5; //move 5 pixels.                int counter = 0;..                //move 1 pixel up each loop.                while (counter &lt; amount).                {.                    startpoint.y -= 1;.                    domouse(mouseeventf.move | mouseeventf.absolute, startpoint);..                    counter++;.                    thread.sleep(100); //slow down so you can see it only jumps left the first time.                }..                countrepeat++;.                console.writeline(string.format(""{0}/{1}"", countrepeat, repeat));.                thread.sleep(1000); //wait a second before next loop.            }.        }..        /*.         * function stuff .        */..        //control the mouse.        private static object mouselock = new object(); //for use with multithreading.        public static void domouse(mouseeventf flags, point newpoint).        {.            lock (mouselock).            {.                input input = new input();.                mouseinput mi = new mouseinput();.                input.dwtype = inputtype.mouse;.                input.mi = mi;.                input.mi.dwextrainfo = intptr.zero;.                // mouse co-ords: top left is (0,0), bottom right is (65535, 65535).                // convert screen co-ord to mouse co-ords....                input.mi.dx = newpoint.x * (65535 / screen.primaryscreen.bounds.width);.                input.mi.dy = newpoint.y * (65535 / screen.primaryscreen.bounds.height);.                input.mi.time = 0;.                input.mi.mousedata = 0;.                // can be used for wheel event see msdn.                input.mi.dwflags = flags;.                int cbsize = marshal.sizeof(typeof(input));.                int result = sendinput(1, ref input, cbsize);.                if (result == 0).                    console.writeline(""domouse error:"" + marshal.getlastwin32error());.            }.        }..        /*.         * native methods .        */..        [dllimport(""user32.dll"", setlasterror = true)].        static internal extern int32 sendinput(int32 cinputs, ref input pinputs, int32 cbsize);..        [dllimport(""user32.dll"")].        public static extern bool getasynckeystate(int32 vkey);..        [structlayout(layoutkind.explicit, pack = 1, size = 28)].        internal struct input.        {.            [fieldoffset(0)].            public inputtype dwtype;.            [fieldoffset(4)].            public mouseinput mi;.            [fieldoffset(4)].            public keybdinput ki;.            [fieldoffset(4)].            public hardwareinput hi;.        }..        [structlayout(layoutkind.sequential, pack = 1)].        internal struct mouseinput.        {.            public int32 dx;.            public int32 dy;.            public int32 mousedata;.            public mouseeventf dwflags;.            public int32 time;.            public intptr dwextrainfo;.        }..        [structlayout(layoutkind.sequential, pack = 1)].        internal struct keybdinput.        {.            public int16 wvk;.            public int16 wscan;.            public keyeventf dwflags;.            public int32 time;.            public intptr dwextrainfo;.        }..        [structlayout(layoutkind.sequential, pack = 1)].        internal struct hardwareinput.        {.            public int32 umsg;.            public int16 wparaml;.            public int16 wparamh;.        }..        internal enum inputtype : int.        {.            mouse = 0,.            keyboard = 1,.            hardware = 2.        }..        [flags()].        internal enum mouseeventf : int.        {.            move = 0x1,.            leftdown = 0x2,.            leftup = 0x4,.            rightdown = 0x8,.            rightup = 0x10,.            middledown = 0x20,.            middleup = 0x40,.            xdown = 0x80,.            xup = 0x100,.            virtualdesk = 0x400,.            wheel = 0x800,.            absolute = 0x8000.        }..        [flags()].        internal enum keyeventf : int.        {.            extendedkey = 1,.            keyup = 2,.            unicode = 4,.            scancode = 8.        }.    }.}...can anybody tell what's going wrong?"
