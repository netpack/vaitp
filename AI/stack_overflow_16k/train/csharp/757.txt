"reuse without casting to class from interface i want to reuse cook method functionality, but still pass different parameters to execute:..public void cook(basicrequest request,ibaseinterface base).{. // some code. // more code. request.execute(base);.}    ..public class basicrequest .{.  public abstract void execute(ibaseinterface baseinterface).}..public class requesta : basicrequest.{.  public void execute(ibaseinterface base).  {.      var derived = (derivedclassa)base;.      // do stuff with derived.  }.}..public class requestb : basicrequest.{.  public void execute(ibaseinterface base).  {.      var derived = (derivedclassb)base;.      // do stuff with derived.  }.} ..public interface iderivedclassa : ibaseinterface {}..public interface iderivedclassb : ibaseinterface {}   ...i have a design issue here that casting is needed on each of requests execute methods...how can i make this code cleaner ?"
