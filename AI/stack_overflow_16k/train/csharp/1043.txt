"make a client download a file from a path that is not publicly accessible? i'm looking to implement a way to keep files private so they cant be publicly re-downloaded and only allow the server side code (like a button) to pull them from a private directory for the client on a one time basis. ..is that even possible?..even if the folder is publicly available, what is a good way of firing an event that makes how many times the file has been downloaded so i can track that and make a service that deletes them after they've reached a download limit? i suppose i could just do a response.redirect to the file and then the logic to track how many times its been downloaded. but is that the way you would do it?..edit: after some digging i've found a solution. i know many of you have downvoted this for not including sample code but i would appreciate if you can upvote it back for sharing the code i ended up using for it, since it works quite well...string filename = ""file.zip"";.            string filepath = ""c:/test/"" + filename; //replace this.            system.web.httpresponse response = system.web.httpcontext.current.response;.            response.clearcontent();.            response.clear();.            response.contenttype = ""text/plain"";.            response.addheader(""content-disposition"", ""attachment; filename="" + filename + "";"");.            response.transmitfile(filepath);.            response.flush();.            response.end();"
