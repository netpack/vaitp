"i can not figure out how to pull the hours input into my gross pay calculation method i was given a homework problem to write some code and then the unit tests to ensure a basic pay calculator functions correctly.  most of the code was given i just needed to complete the methods for getting the gross pay, getting the taxes and getting the net pay.  when i run the program however my gross pay, taxes, and net pay all come out to be zero.  i think there is something wrong with my gross pay method. ..i will put the code i am trying below..class program.{.    /* the main() is not tested and is separate from the .     * unit tests. technically, main() is not needed for .     * unit tests. */.    static void main(string[] args).    {.        const int weeksinpayperiod = 4;.        list&lt;decimal&gt; hours = new list&lt;decimal&gt;();.        decimal hourlyrate;..        // prompt and read hourly rate of pay (same for all weeks).        console.write(""hourly rate: "");.        hourlyrate = convert.todecimal(console.readline());..        // loop to prompt for and read hours for each week.        for (int i = 0; i &lt; weeksinpayperiod; i++).        {.            console.write(""enter hours for week {0}: "", i + 1);.            decimal h = convert.todecimal(console.readline());.            hours.add(h);.        }..        // create pay object using parameterized constructor.        paycalculator totalpay = new paycalculator(hours, hourlyrate);.        // writeline() causes object's tostring() to be called.        console.writeline(totalpay);.    }.}..public class paycalculator.{.    // list holds hours by week in pay period.    private list&lt;decimal&gt; hours;.    // hourly rate is the same for whole pay period.    private decimal hourlyrate;.    private decimal grosspay = 0;.    private decimal tax = 0;.    private decimal netpay = 0;.    decimal reg_time = 40.00m;.    decimal ot = 1.5m;..    // parameterized constructor. .    public paycalculator(list&lt;decimal&gt; hours, decimal hourlyrate).    {.        this.hours = hours;.        this.hourlyrate = hourlyrate;.    }..    /* calculates the gross pay for pay period with overtime .     * paid at time and half for hours over 40 in a week. */.    public decimal getgrosspay().    {.        decimal grosspay = 0;.        foreach (decimal h in hours).        {.            if (hours[0] &lt;= reg_time).            {.                grosspay += hours[0] * hourlyrate;.            }.            else.            {.                grosspay += (reg_time * hourlyrate) + ((hours[0] - reg_time) * ot);.            }.        }.        /*========================================.         * complete code to calculate gross pay.         *========================================*/.        return grosspay;.    }..    /* calculate tax: 15% on first $600.00, 20% on .       any amount over $600.00 */.    public decimal gettax().    {.        decimal tax = 0;.        decimal surplus = 600m;..        if (grosspay &lt;= surplus).        {.            tax = grosspay * .15m;.        }.        else.        {.            tax = (surplus * .15m) + ((grosspay - surplus) * .2m);.        }..        /*========================================.         * complete code to calculate gross tax.         *========================================*/.        return tax;.    }..    public decimal getnetpay().    {.        decimal netpay = 0;..        netpay = grosspay - tax;.        /*========================================.         * complete code to calculate net pay.         *========================================*/.        return netpay;.    }..    /*.     * tostring() returns pay info in string formatted like:.     * gross pay: 830.00, tax: 136.00, net pay: 694.00.     */.    override.    public string tostring().    {.        return string.format(""gross pay: {0:f2}, tax: {1:f2}, net pay: {2:f2}"",.            this.grosspay, this.tax, this.netpay);.    }.}"
