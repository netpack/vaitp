"blank get custom attribute value by class name and method name i create class named rolecontroller.cs :..[dynaphore(id=2)].    [dynaphore(name=""role module"")].    [dynaphore(description=""role will control capability of user"")].    public class rolecontroller : basecontroller.    {..        [dynaphore(id = 20)].        [dynaphore(name = ""list of role"")].        [dynaphore(description = ""show all role in list"")].        public actionresult index().        {.            return view();.        }..        [dynaphore(id = 21)].        [dynaphore(name = ""role editor"")].        [dynaphore(description = ""edit role"")].        public actionresult editor(guid? id).        {..            var role = dbintegrated.roles.where(p =&gt; p.id == id).firstordefault();.            if (role == null).            {.                var cons = accesslogic.getallcapabilities();.                list&lt;vmrolecapabilityitem&gt; model = new list&lt;vmrolecapabilityitem&gt;();.                foreach (var c in cons).                {..                    foreach (var a in c.actions).                    {.                        vmrolecapabilityitem domain = new vmrolecapabilityitem();.                        domain.controller = c.controller.replace(""controller"", """");.                        domain.action = util.prettysplitter(a);.                        domain.isactive = false;.                        vmrolecapabilityitem result = new vmrolecapabilityitem();.                        result = domain;.                        model.add(domain);.                    }..                }.                return view(model);.            }.            else.            {.                var cons = accesslogic.getallcapabilities();.                list&lt;vmrolecapabilityitem&gt; model = new list&lt;vmrolecapabilityitem&gt;();.                foreach (var c in cons).                {..                    foreach (var a in c.actions).                    {.                        vmrolecapabilityitem domain = new vmrolecapabilityitem();.                        domain.controller = c.controller.replace(""controller"", """");.                        domain.action = util.prettysplitter(a);.                        var rc = dbintegrated.rolecapabilities.                            .where(p =&gt; p.controller == c.controller).                            .where(p =&gt; p.action == a).                            .firstordefault();.                        if (rc != null) domain.isactive = true;.                        else domain.isactive = false;.                        model.add(domain);.                    }..                }.                return view(model);.            }.        }..        [dynaphore(id = 22)].        [dynaphore(name = ""save role"")].        [dynaphore(description = ""save a role"")].        public actionresult save(vmcapabilityitem domain).        {..            return redirecttoaction(""index"");.        }..        [dynaphore(id = 298)].        [dynaphore(name = ""soft delete role"")].        [dynaphore(description = ""delete role from view"")].        public actionresult softdelete(guid id).        {..            return json(new { is_success = true });.        }..        [dynaphore(id = 299)].        [dynaphore(name = ""hard delete role"")].        [dynaphore(description = ""delete role permanently"")].        public actionresult harddelete(guid id).        {..            return json(new { is_success = true });.        }..    }...and this is my custom attribute class :../// &lt;summary&gt;.    /// .    /// &lt;/summary&gt;.    [attributeusage(attributetargets.class)].    public class dynaphoreattribute : attribute.    {.        /// &lt;summary&gt;.        /// string field..        /// &lt;/summary&gt;.        int _id;.        string _name;.        string _desc;..        /// &lt;summary&gt;.        /// attribute constructor..        /// &lt;/summary&gt;.        public dynaphoreattribute().        {.        }..        /// &lt;summary&gt;.        /// get and set..        /// &lt;/summary&gt;.        public int id.        {.            get { return this._id; }.            set { this._id = value; }.        }..        public string name.        {.            get { return this._name; }.            set { this._name = value; }.        }..        public string description {.            get { return this._desc; }.            set { this._desc = value; } .        }.    }...how to get id, name and description of class and method by class name and method name?..i create two methods for it..first to get class id :..public static int getdynaphoreclassid(string classname).        {.            return 0;.        }...second, get method id..public static int getdynaphoremethodid(string classname, string methodname).{.    return 0;.}...how to solve this problem?"
