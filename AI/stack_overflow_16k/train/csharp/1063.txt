"blank move point along an arc please see this picture:..i need to move by mouse one of the two points along an arc of 90° ..please have in mind that i can rotate the arrow and the whole thing will rotate as well...what i did:..public override bool handlemousemove(mouseeventargs e).{      .   double anglerad = 0;.   double new_cx = 0;.   double new_cy = 0;.   double currentangle = arrow.rotation.angle;.   point pt = tmemcontrol.screentoworld(new point(e.x, e.y));.   point center = tmemcontrol.screentoworld(new point(arrow.translation.x, arrow.translation.y));                        .   point c = new point(center.x + 25, center.y);..   anglerad = (-currentangle) * (math.pi / 180);.   new_cx = center.x + math.cos(anglerad) * 25;.   new_cy = center.y + math.sin(anglerad) * 25;.   c = new point(new_cx, new_cy);..   vector centerpt = new vector((pt.x-center.x),(pt.y-center.y));.   vector centerc = new vector((c.x - center.x),(c.y - center.y));.   fieldofview = vector.anglebetween(centerpt, centerc);..   if (fieldofview &gt;= 90) fieldofview = 90;.   if (fieldofview &lt;= 0) fieldofview = 0;..   tmemcontrol.settings.videooverlayhelper.fieldofview = (float)smartframe.basic.baseangle.deg2rad(fieldofview*2);..   updatefieldofview = (float)fieldofview;..   if (updatefieldofview &gt; 87) updatefieldofview = 87;.   if (updatefieldofview &lt; 0) updatefieldofview = 0;.   return true;.}..public void reset(int id, double x, double y, double angle).{  .   double angleinradians = 0;.   point center = new point(x + 15, y + 20);.   point refp = new point(x + 15, (y - 80));         .   distance = point.subtract(refp, center).length;.   double new_x = 0;.   double new_y = 0;.   controlpoint cpi = cameractrl.getcp(id);.   if (null != cpi).   {.      switch (id).      {.      case 0:.         cpi.point = new point(center.x, center.y);.         cpi.state = controlpoint.states.selectable;.         break;.      case 1:.         cpi.point = new point(x + 15, (y + 80));             .         angleinradians = (float)smartframe.basic.baseangle.deg2rad((angle + (87 - updatefieldofview)));.         new_x = center.x + math.cos(-angleinradians) * distance;.         new_y = center.y + math.sin(-angleinradians) * distance;              .         cpi.point = new point(new_x, new_y);               .         cpi.state = controlpoint.states.fixed;             .         break;.      case 2:.         cpi.point = new point(x + 15, (y - 80));.         angleinradians = (float)smartframe.basic.baseangle.deg2rad((angle + (180 - (87 - updatefieldofview))));.         new_x = center.x + math.cos(-angleinradians) * distance;.         new_y = center.y + math.sin(-angleinradians) * distance;.         cpi.point = new point(new_x, new_y);.         cpi.state = controlpoint.states.selectable;.         break;.      }            .   }.}...it's working 90% the problem is that once i snap/click on one of the red dots and move the mouse, the red dot is always few degrees ahead from the the mouse cursor. and i need to move it with the cursor position...and just for the info why i set always the angle to max 87°, is because i want to keep a little distance between the arrow and my two lines."
