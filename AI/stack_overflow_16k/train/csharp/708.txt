"filter abstract classes from list i have a new list&lt;abstractclass&gt; () that contains some different implementations. i want to filter out some implementations due to specific conditions. how to do it properly?..1) if (condition1 &amp;&amp; type is implementation1) .....2) if (condition2 &amp;&amp; implementation.name == ""implementation 1"") .....3) if (condition3 &amp;&amp; implementation.type == enumtype.type1) ......i think 1) is bad, 2) does not work at compile time 3) may be good?..any suggestions for other desgin?..(coudn't post it on programmers.se because of ban)..edit:.more details. imagine abstract class (or interface):..class abstract messageprinter.{ .    void print (string message);.}...and class consoleprinter : messageprinter which prints message on console. so when due to some reasons i want to stop printing message on console, i need to remove that implementation from my list&lt;messageprinter&gt;. but what if consoleprinter is wrapped using uppercasemessageprinter?..class uppercasemessageprinter : messageprinter.{.    public uppercasemessageprinter (messageprinter source) { /* ... */ };..    void print (string message).    {.        source.print (message.toupper());.    }. }...all that type checking will be useless. solution #3 with enum helps a bit, but is not perfect :/"
