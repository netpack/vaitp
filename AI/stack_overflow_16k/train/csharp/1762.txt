"class hierarchy, get property by priority i have class hierarchy. each classes may has configuration object. i need to get final configuration - if the configuration has the first class (a), it will be used this one. if the configuration has the second class (b), it will be used this one...here is an example:..a:     -         c23..b:     -        -..c:     c2       -..d:     c1       c4..result is c.config1.c2 and a.config2.c23. in short, i need to use first not null constant..here is my code:..enum config { c1, c2, c3, c4 }..enum config2 { c21, c22, c23, c24 }..class configuration.{.    public config const1 { get; set; }.    public config2 const2 { get; set; }.}..class a.{.    public configuration config =&gt; combineconfigs();..    public b b { get; set; }..    private configuration combineconfigs().    {.        config c1 = b.config != null &amp;&amp; b.config.const1 != null .                    ? b.config.const1 .                    : b.c.config != null &amp;&amp; b.c.config.const1 != null .                      ? b.c.config.const1 .                      : b.c.d.config != null &amp;&amp; b.c.d.config.const1 != null .                        ? b.c.d.config.const1 .                        : test.config.c1;.        config2 c2 = b.config != null &amp;&amp; b.config.const2 != null .                     ? b.config.const2 .                     : b.c.config != null &amp;&amp; b.c.config.const2 != null .                       ? b.c.config.const2 .                       : b.c.d.config != null &amp;&amp; b.c.d.config.const2 != null .                         ? b.c.d.config.const2 .                         : test.config2.c21;.        return new configuration().        {.            const1 = c1,.            const2 = c2.        };.    }.}..class b.{.    public configuration config { get; set; }.    public c c { get; set; }.}..class c.{.    public configuration config { get; set; }.    public d d { get; set; }.}..class d.{.    public configuration config { get; set; }.}...how to write better method combineconfigs?"
