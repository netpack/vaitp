"how to fix gdi+ errors when downloading files? i have been making a client that installs a program i am also making. the problem is when i go to download the files. sometimes, it gets stuck. i get thrown a error stating ...  system.runtime.interopservices.externalexception: 'a generic error occurred in gdi+.'......and my ui freaks out (buttons go blank, labels disapper, images go missing, ect). i have researched this error and it seems it happens with images, but i am downloading zip files that contain no images. i have found that it might have something to do with 5 files i am extracting from the zip files but thats not entirely accurate because it doesnt always happen and i have no real way to determine exactly whats causing it. i suspect its because i cannot download so much in a short period of time but i do not know if this is why exactly either. ..also to add to this, the files still complete downloading when in debug mode, they ever continue through the async process, awaiting properly and everything...i have tried narrowing down what file is causing it but i dont have any evidence to support it is a specific file. i have also tried spliting up the zip files to see if its the size of how much im downloading at once, still no luck...these are the download functions. .the runworkertaskasync() is a custom reference i created to allow a worker to be ""awaited"". i privide the code below.(i take no credit as its pieces of code i have pulled from others)..        private async task downloadlibs().        {.            response.text = ""updating libraries..."";.            this.update();.            string url = @""http://akumamc.com/akumamc/libraries.zip"";.            if (!string.isnullorempty(url)).            {.                uri uri = new uri(url);.                string filename = system.io.path.getfilename(uri.absolutepath);.                await dlclient.downloadfiletaskasync(uri, @""c:temp"" + filename);.                dlclient.dispose();.            }.            filezipname = @""c:templibraries.zip"";.            filezippath = @""c:temp.minecraft"";.            response.text = ""extracting libraries..."";.            this.update();.            await extractfile.runworkertaskasync();.        }.        private async task downloadmods().        {.            response.text = ""updating mods (1/2)..."";.            this.update();.            string url = @""http://akumamc.com/akumamc/mods.zip"";.            if (!string.isnullorempty(url)).            {.                uri uri = new uri(url);.                string filename = system.io.path.getfilename(uri.absolutepath);.                await dlclient.downloadfiletaskasync(uri, @""c:temp"" + filename);.                dlclient.dispose();.            }.            filezipname = @""c:tempmods.zip"";.            filezippath = @""c:temp.minecraft"";.            response.text = ""extracting mods (1/2)..."";.            this.update();.            await extractfile.runworkertaskasync();.        }.        private async task downloadextras().        {.            response.text = ""updating mods (2/2)..."";.            this.update();.            string url = @""http://akumamc.com/akumamc/mods2.zip"";.            if (!string.isnullorempty(url)).            {.                uri uri = new uri(url);.                string filename = system.io.path.getfilename(uri.absolutepath);.                await dlclient.downloadfiletaskasync(uri, @""c:temp"" + filename);.                dlclient.dispose();.            }.            filezipname = @""c:tempmods2.zip"";.            filezippath = @""c:temp.minecraft"";.            response.text = ""extracting mods (2/2)..."";.            this.update();.            await extractfile.runworkertaskasync();.        }...runworkertaskasync:..        public static task&lt;object&gt; runworkertaskasync(this backgroundworker backgroundworker).        {.            var tcs = new taskcompletionsource&lt;object&gt;();..            runworkercompletedeventhandler handler = null;.            handler = (sender, args) =&gt;.            {.                if (args.cancelled).                    tcs.trysetcanceled();.                else if (args.error != null).                    tcs.trysetexception(args.error);.                else.                    tcs.trysetresult(args.result);.            };..            backgroundworker.runworkercompleted += handler;.            try.            {.                backgroundworker.runworkerasync();.            }.            catch.            {.                backgroundworker.runworkercompleted -= handler;.                throw;.            }..            return tcs.task;.        }...i expect the files to download without the form causing ui glitches and crashing...edit: link to author's client code (taken from comment below)"
