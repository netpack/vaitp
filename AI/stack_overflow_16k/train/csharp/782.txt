"how do i manually trust a self-signed certificate embedded in my application? i am looking for some guidance here. i am embedding a self-signed ssl certificate in a simple application written in blank. i am reading the cert as bytes from the executingassembly stream and then adding it to the store.root of the current user. ..the next step is validating the entire ca chain and using a boolean as part of the verifcationcallback delegate. ..the problem is i don't think it is correct to be adding certs to the operating system. i am instead looking to manually trust the embedded cert instead of adding the cert to the computer's trusted certificates. ..application embedded cert versus adding certificates to the user's computer's certificates...any ideas on how to manually trust an embedded certificate in a blank application?..updated: per mike z i have updated my code and have this issue: the thumbprints of the splunk cert and the x509certificate2 object thumbprint do not match, don't know why...public static bool certificateverificationcallback(system.object o, x509certificate certificate, x509chain chain, sslpolicyerrors sslpolicyerrors)..    {.        cert = ""~./resources/splunk-virtualbox.crt"";.        cert1 = x509certificate.createfromcertfile(cert);..        byte[] b = cert1.getrawcertdata();..        x509certificate2 cert2 = new x509certificate2();..        cert2.import(b);.        if (sslpolicyerrors == sslpolicyerrors.none).        {.            return true;.        }.        else if (certificate is x509certificate2 cert2).        {.            c1 = cert2.thumbprint;.            c2 = cert2.thumbprint;..            return cert2.thumbprint == cert2.thumbprint;..        }..        return false;.    }.public static void main(string[] args).    {.        servicepointmanager.servercertificatevalidationcallback += certificateverificationcallback;.        console.writeline(string.format(""cert2 {0}, cert2{1}"", c1, c2));.    }"
