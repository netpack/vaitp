"remove items earlier than a fix date and replace the first occurrence based on a list of a typed class like ..class costcenter.{.    string center;.    string percentage;.    datetime start;.}...i have a list of these elements like this:...{""a"", 70, ""2019/11/10""}.{""b"", 30, ""2019/11/10""}.{""a"", 40, ""2018/10/05""}.{""b"", 60, ""2018/10/05""}.{""xx"", 10, ""2010/01/01""}.{""yy"", 90, ""2010/01/01""}.{""100"", 50, ""2009/07/03""}.{""101"", 50, ""2009/07/03""}...taking into account that i want to get rid of all of the elements (list) that have a start date earlier or equal than a fixed(_earliestdate), also this fixed data will replace the earliest match. in this example the earliest date is ""2010/11/01"", therefore ""xx"" and ""yy"" start date is replaced to ""2010/11/01""..the output should be like this:...{""a"", 70, ""2019/11/10""}.{""b"", 30, ""2019/11/10""}.{""a"", 40, ""2018/10/05""}.{""b"", 60, ""2018/10/05""}.{""xx"", 10, ""2010/11/01""}.{""yy"", 90, ""2010/11/01""}...i have created the following code:..string datetoreplace = null;.bool earliestfound = false;.foreach (var item in list.orderbydescending(x =&gt; datetime.parse(x.start)).tolist()).{.    if (earliestfound) //already marked, safe to remove others.    {.        list.remove(item);.        continue;.    }..    if (!string.isnullorempty(datetoreplace)) //remaining matches.    {.        if (string.equals(item.start, datetoreplace)).        {.            item.start = _earliestdate;.            continue;.        }.        else.        {.            earliestfound = true;.            list.remove(item);.            continue;.        }.    }.    if (item.start &lt;= _earliestdate) //first earliest or same, more required.    {.        datetoreplace = item.start;.        item.start = _earliestdate;.    }   .}...datetoreplace and earliestfound will be used as flags in the code to determine when to loop...somehow i think it is not the best option, do you have any suggestion on how to make it easier to understand or efficient?"
