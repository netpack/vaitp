"wpf statusbar update for each line read using backgroundworker after several hours of failing.  i'm at the point where i need some guidance. ..currently i'm parsing through a streamreader with line items that can be in the thousands.  i added a status bar and wanted the bar to move +1 for each item.  ..i've been trying to learn how to do this with using a background worker and now i think i got myself all twisted around. my code isn't breaking but the status bar isn't moving.  either i'm using the wrong technique all together or i just need some tweaking...{.    public partial class mainwindow : window.    {..        private backgroundworker worker = new backgroundworker();..        public mainwindow().        {.            initializecomponent();.        }..        void worker_progresschanged(object sender, progresschangedeventargs e).        {.            fileprogressbar.value = e.progresspercentage;.        }.        void worker_dowork(object sender, doworkeventargs e).        {.            worker.reportprogress(20);  // i just added a dummy value to get something..        }.        void worker_runworkercompleted(object sender, runworkercompletedeventargs e).        {.            if (e.canceled).            {.                console.writeline( ""worker task canceled."");.            }..            else if (e.error != null).            {.                console.writeline(""worker task error."");.            }.            else.            {.                console.writeline(""worker task completed."");.            }.        }...        private void button_click(object sender, routedeventargs e).        {..            filepath                     = @""c:test.txt"";.            worker.dowork               += new doworkeventhandler(worker_dowork);.            worker.progresschanged      += new progresschangedeventhandler(worker_progresschanged);.            worker.runworkercompleted   += new runworkercompletedeventhandler(worker_runworkercompleted);.            worker.workerreportsprogress = true;.            worker.runworkerasync();..            using (streamreader reader = new streamreader(filestream)).            {.                var parts = new list&lt;part&gt;();.                var mycounter = 0;.                fileprogressbar.maximum = filepath.length;..                while (true).                {.                    string line = reader.readline();.                    if (line == null).                    {.                        break;.                    }.                    parts.add(new part(line, config));                      .                }.            }           .        }.    }               .}"
