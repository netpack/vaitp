"circular double linked list infinite loop my cs professor asked us to develop our own blank program using circular linked lists. my project is to add or delete names (of type string) from a circular list. so far, my add methods work perfectly; however, my removenode() method does not work and does not remove the desired element. it also goes on an infinite loop and i have tried so many pieces of code and neither of them work. .my remove method is the following: ..public e removenode(e nodetobedeleted).{.    node&lt;e&gt; nodefound = findnode(nodetobedeleted);..    if(nodefound != null).    {.        nodefound.prev.next = nodefound.next;.        nodefound.next.prev = nodefound.prev;.        size--;.        return nodefound.data;  .    }.    return null;.}...basically, the findnode() searches for the node whose data is equal to the string plugged in as a parameter, but when i call the outputlist() method, which returns a string representation of the current nodes on screen, it goes on infinite loop...the outputlist method is:..public void outputlist().{   .    node&lt;e&gt; position = head;.    do .    {.        system.out.print(position.data + "" ==&gt; "");.        position = position.next;..    } while((position != null) &amp;&amp; (position.next != position));.}...any help would be highly appreciated.. thanks in advance...the node class is:..    static class node&lt;e&gt; {..    /** the data value. */.    private e data;.    /** the link to the next node. */.    private node&lt;e&gt; next = null;.    /** the link to the previous node. */.    private node&lt;e&gt; prev = null;..    private node(e dataitem) {.        data = dataitem;.    }...    private node(e newdata, node&lt;e&gt; noderef).    {.        data = newdata;.        next = noderef;.    }..    private node(node&lt;e&gt; prevref, e newdata).    {.        data = newdata;.        prev = prevref;.    }..   //set next link.    private node(node&lt;e&gt; newdata, node&lt;e&gt; noderef).    {.        data = (e) newdata;.        next = noderef;.    }.} //end class node"
