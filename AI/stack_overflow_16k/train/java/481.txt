"elapsed time using system.nanotime() around several method calls delivers a lower value than the sum of of the elapsed times in each method? i'm using system.nanotime() to measure the time it takes to call several methods..in each of those methods i do the same to measure how long each method takes..in the end the sum of the elapsed times should be smaller than the total elapsed time, or so i thought. however, it isn't...example:..public static void main(string[] args){.  long starttime = system.nanotime();.  method1();.  method2();.  method3();.  system.out.println( ""total time: "" + (system.nanotime() - starttime) / 1000000);.}.private void method1(){.  long starttime = system.nanotime();.  //stuff.  system.out.println( ""method 1: "" + (system.nanotime() - starttime) / 1000000);.}.// same for all other methods...in my case i get something around 950ms for the total time, but the sum of each elapsed time is 1300ms+. why is this?..edit:..okay, to be a bit clearer, i am not getting this behaviour when writing to arrays many times (which i just did as a test). when i do this, i get pretty much exact results (+-1ms)...what i am actually doing is this:..i read two pretty huge text files into string arrays (1000 * ~2000 characters in first file, 200 * ~100 characters in the second)...i then do a whole lot of comparisons on the string array i got from reading the first file and use the results to calculate some probabilities...edit2: error on my part, i was calling methods within methods and summed up those times as well, which were already included. without these double-times it all adds up. thanks for clearing this up!"
