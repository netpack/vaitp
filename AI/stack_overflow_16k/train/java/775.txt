"project euler #14: program runs for long time i'm trying to solve project euler #14:..the following iterative sequence is defined for the set of positive integers:..n → n/2 (n is even).n → 3n + 1 (n is odd)  ..using the rule above and starting with 13, we generate the following sequence:.               13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1  ..which starting number, under one million, produces the longest chain?...here's what i've tried:..public class problem14 {.    public static void main(string[] args) {.        int longestlength = 1;.        int longeststart = 1;.        for (int i = 1; i &lt; 1000000; i++) {.            int candidate = getcollatzlength(i);.            if (candidate &gt; longestlength) {.                longestlength = candidate;.                longeststart = i;.            }.        }.        system.out.println(""starting point = "" + longeststart);.    }..    public static int getcollatzlength(int startingnumber) {.        int length = 1;.        while (startingnumber != 1) {.            startingnumber = getnextcollatz(startingnumber);.            length++;.        }.        return length;.    }..    public static int getnextcollatz(int current) {.        if (current % 2 == 0) {.            return current / 2;.        } else {.            return 3 * current + 1;.        }.    }.}...unfortunately, this runs for ages (more than 5 minutes).  any idea what's going wrong here?..when i print the starting number that produces the current longest chain, the last one i get is:..new longest start is 106239"
