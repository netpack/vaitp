"hot-swapping blank classes i've been working on a small blank-based online game, which, although not finished, i want to release it at some point. i don't forsee it being finished anytime soon, however, all that's missing are some continued story parts. i thought about patching updates into the game through the internet connection (as most games do) - but i wanted to be clever with it and use some form of class hot-swapping to patch in updates without having to re-load the game. ..originally, i thought that jrebel would work for this purpose, however, as far as i know, it's not easily invoked from within the application itself...the way i envision this process is:...server tells client that there's an update available.client downloads zip/jar/whatever and extracts it.client loads in 'package class' which modifies the running image (client has specially constructed parts of it designed to handle loading in additional classes &amp; possibly overwriting existing classes.).'package class' handles overwriting of in-memory class representations....the part that's troubling me is that if i have an object, i.e. ..    //something that's called when the app loads up.    customclass drawclass = new customclass();.    drawclass.setcontext(context.main);.    //...more calls that set up drawclass...i want to be able to modify customclass and have it reflected in all instances of customclass. the only reason i am hopeful for this is that i could build in to each class a ""copyme"" thing that essentially serializes it - which could be loaded into the new class...can i do this? if so, how?"
