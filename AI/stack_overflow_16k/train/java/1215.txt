"how can i optimize my mapping rules in blank? is there any way that i can reduce the usage of if else conditions in my mapping rules.i am making mapping rules. is there any way that i store these rules in file and then read them from file, so that my code is optimized:..public string mappingcondition().{.    if (double_first_word.equals(mem) &amp;&amp; double_second_word.equals(zair)) {.        s.append(map_m_zair_with);.        flag1 = ""true"";.    } else if (double_first_word.equals(paish) &amp;&amp; double_second_word.equals(wawoo).            &amp;&amp; ((!last_string_word.equals(wawoo))) &amp;&amp; flag38 == ""false"") {.        member0 = a1.indexof(paish);.        number0 = a1.indexof(wawoo);.        s.append(map_paish_waoo_with);.        flag2 = ""true"";.    } else if (double_first_word.equals(ein) &amp;&amp; double_second_word.equals(zabar)) {.        member1 = a1.indexof(ein);.        number1 = a1.indexof(zabar);.        s.append(map_aein_zbar_with);.        flag3 = ""true"";.    } else if (double_first_word.equals(alif) &amp;&amp; double_second_word.equals(zabar)) {.        member2 = a1.indexof(alif);.        number2 = a1.indexof(zabar);.        s.append(map_alif_zabr_with);.        flag4 = ""true"";.    } else if (double_first_word.equals(kaff) &amp;&amp; double_second_word.equals(lam)) {.        member3 = a1.indexof(kaff);.        number3 = a1.indexof(lam);.        s.append(map_kaf_lam_with);.        flag5 = ""true"";.    } else if (double_first_word.equals(mem) &amp;&amp; double_second_word.equals(alif)) {.        member4 = a1.indexof(mem);.        number4 = a1.indexof(alif);.        s.append(map_mem_aif_with);.        flag6 = ""true"";.    } else if (double_first_word.equals(gim) &amp;&amp; double_second_word.equals(alif)) {.        member5 = a1.indexof(gim);.        number5 = a1.indexof(alif);.        s.append(map_jem_alif_with);.        flag7 = ""true"";.    } else if (double_first_word.equals(ray) &amp;&amp; double_second_word.equals(zair)) {.        member6 = a1.indexof(ray);.        number6 = a1.indexof(zair);.        s.append(map_ray_zair_with);.        flag8 = ""true"";.    } else if (double_first_word.equals(tay) &amp;&amp; double_second_word.equals(zair)) {.        member7 = a1.indexof(tay);.        number7 = a1.lastindexof(zair);.        s.append(map_tay_zair_with);.        flag9 = ""true"";.    } else if (double_first_word.equals(dal) &amp;&amp; double_second_word.equals(alif)) {.        member8 = a1.indexof(dal);.        number8 = a1.lastindexof(alif);.        s.append(map_daal_alif_with);.        flag10 = ""true"";.    } else if (double_first_word.equals(choti_ya) &amp;&amp; double_second_word.equals(zabar)) {.        member9 = a1.indexof(choti_ya);.        number9 = a1.indexof(zabar);.        s.append(map_yay_zabar_with);.        flag11 = ""true"";.    } else if (double_first_word.equals(wawoo) &amp;&amp; double_second_word.equals(alif)) {.        member10 = a1.indexof(wawoo);.        number10 = a1.indexof(alif);.        s.append(map_wao_alif_with);.        flag12 = ""true"";.    }..    return ""tbd"";.}"
