"how should i copy strings in blank?     string s = ""hello"";.    string backup_of_s = s;.    s = ""bye"";...at this point, the backup variable still contains the original value ""hello"" (this is because of string's immutability right?)...but is it really safe to copy strings with this method (which is of course not safe to copy regular mutable objects), or is better to write this? :..    string s = ""hello"";.    string backup_of_s = new string(s);.    s = ""bye"";...in other words, what's the difference (if any) between these two snippets?....edit - the reason why the first snippet is safe:..let me just explain things with a little more detail, based on the good answers already provided (which were essentially focused on the question of difference of performance between the 2 snippets):..strings are immutable in blank, which means that a string object cannot be modified after its construction..hence,..string s = ""hello""; creates a new string instance and assigns its address to s (s being a reference to the instance/object)..string backup_of_s = s; creates a new variable backup_of_s and initializes it so that it references the object currently referenced by s...note: string immutability guarantees that this object will not be modified: our backup is safe..note 2: blank garbage collection mechanism guarantees that this object will not be destroyed as long as it is referenced by at least one variable (backup_of_s in this case)..finally, s = ""bye""; creates another string instance (because of immutability, it's the only way), and modifies the s variable so that it now references the new object."
