"how can i make movement on a coordinate grid smooth when moving a large amount of pixels at a time? cannot have gravity as a double as that causes problems with my coordinate grid so i had to increase movement speed to make it look natural. this made movement choppy...just for fun, i was working on some blank over the summer while i have free time. i ran into a slight problem. while trying to implement gravity in my simulation, i realized that setting gravity to 1 pixel/cycle^2 was making it too strong. i couldn't set it to anything less as i was working on a coordinate grid and thus i couldn't use doubles. to remedy this, i changed my initial velocity to 3 times it's original and managed to get this working and looking natural. the caveat to this is that the movement started to look choppy as the object was now moving 15 pixels per cycle instead of 5..i don't think i did a good job of condensing the code so the full thing is available at https://github.com/hisbaan/gravity with a jar build for testing...public class gravity implements mouselistener {..    public static dimension screensize = toolkit.getdefaulttoolkit().getscreensize();..    public static final int frame_x = (int) screensize.getwidth() - 100;.    public static final int frame_y = (int) screensize.getheight() - 100;..    public static final boolean debug = true;.    public static int balldiameter = 10;.    public static int ballradius = balldiameter / 2;.    public int counter = 0;..    public static final double gravity = 1;.    public static final int terminal_velocity = 30;..    public static int xinitial = 0;.    public static int yinitial = 0;..    public static int xfinal = 0;.    public static int yfinal = 0;..    public static int xdragdelta = 0;.    public static int ydragdelta = 0;..    public static double angle = 0.0;..    public static int xpos = 400;.    public static int ypos = 400;..    public static int xvelocity = 0;.    public static int yvelocity = 0;..    public timer movement;..    public static void main(string[] args) {.        new gravity();.    }..    gravity() {.        movement = new timer(50, e -&gt; {.            move();.            collision();.            applygravity();.            applyfriction();.        });..        simulation();.    }..    public void applygravity() {.        if (yvelocity &lt; terminal_velocity) {.            yvelocity += gravity;.        }.    }..    public void applyfriction() {.        counter++;..        if (counter % 10 == 0) {.            if (xvelocity &gt; 0) {.                xvelocity -= 1;.            }..            if (xvelocity &lt; 0) {.                xvelocity += 1;.            }.        }.    }.}"
