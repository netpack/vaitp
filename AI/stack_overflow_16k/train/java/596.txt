"cancelling an infinite loop i would like to load a file into my application. the problem i'm having is that the file could take an infinite amount of time to load..i would like to allow the user to cancel a file if they would like to stop it loading into the system. after the file has stopped loading i would like to execute code straight after in the same thread.    ..i wrote out a simplified example for how this could be done. my solution is by having a nested thread for the code that could load indefinitely. if the user cancels then it interrupts the thread. ..public class infinitelooptest {..    public static void main(string args[]) throws interruptedexception.    {..        final thread[] innerthread = new thread[1];..        final thread outerthread = new thread(new runnable(){..            @override.            public void run() {.                innerthread[0] = new thread(new runnable().                {.                    @override.                    public void run().                    {   .                        try .                        {.                            // load in the file here (never finishes).                            loadfile();.                        } .                        catch (interruptedexception e) .                        {.                            e.printstacktrace();.                        }.                    }.                });..                innerthread[0].start();..                // wait for the thread to complete.                try .                {.                    innerthread[0].join();.                } .                catch (interruptedexception e) .                {.                    e.printstacktrace();.                }..                // code that must always be called whether the file isn't loaded or not.                system.out.println(""do something after loading the file"");.            }.        });..        outerthread.start();..        // wait 5 seconds then simulate the user cancelling loading the file.        thread.sleep(5000);.        innerthread[0].interrupt();.    }.}...the problem i'm having is i would like to use executor services instead of only threads and pass exceptions up if there are any issues. this means that although this solution works it will end up getting quite messy and less maintainable. ..is it possible to avoid a nested thread?"
