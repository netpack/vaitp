"how to deserialize an object from byte[] where byte[] represents an object of a class that is loaded over a network? how to deserialize an object from byte[] where byte[] represents an object of a class that is loaded over a network?..i have the following hello.blank file..import blank.io.serializable;..public class hello implements serializable {..    public integer hello = 5;..    public static void main(string... args) {.        system.out.println(sayhello());.    }..    public static string sayhello() {.        return ""hello world"";.    }.}...its compiled into hello.class and stored at /tmp/test..below is an example similar to the application i am working on...public class util {..    public static byte[] serializeobject(object object) throws exception {.        bytearrayoutputstream bytearrayoutputstream = new bytearrayoutputstream();.        objectoutputstream objectoutputstream = new objectoutputstream(bytearrayoutputstream);.        objectoutputstream.writeobject(object);.        objectoutputstream.close();.        bytearrayoutputstream.close();.        return bytearrayoutputstream.tobytearray();.    }..    public static object deserializeobject1(byte[] serializedobject) throws exception {.        bytearrayinputstream bytearrayinputstream = new bytearrayinputstream(serializedobject);.        objectinputstream objectinputstream = new objectinputstream(bytearrayinputstream);.        object object = objectinputstream.readobject();.        objectinputstream.close();.        bytearrayinputstream.close();.        return object;.    }..    public static object deserializeobject2(byte[] bytearray) {.        bytearrayinputstream bis = new bytearrayinputstream(bytearray);.        objectinput input = null;.        try {.            input = new objectinputstream(bis){.                @override protected class&lt;?&gt; resolveclass(final objectstreamclass desc) throws ioexception, classnotfoundexception {.                    classloader cl = thread.currentthread().getcontextclassloader();.                    if (cl == null)  return super.resolveclass(desc);.                    return class.forname(desc.getname(), false, cl);.                }.            };.            return input.readobject();.        } catch (classnotfoundexception | ioexception e) {.            e.printstacktrace();.            return null;.        } finally {.            try {.                bis.close();.                if (input != null).                    input.close();.            } catch (ioexception ex) {.                ex.printstacktrace();.                return null;.            }.        }.    }.}...here is my main application..public class dynamic {..     private objectmapper jsonmapper = new objectmapper();..     public static void main(string[] args) {..         file myfile=new file(""/tmp/test/"");..         try {.            urlclassloader  cl = new urlclassloader(new url[]{myfile.touri().tourl()});.            class klazz = cl.loadclass(""hello"");.            object object = klazz.getdeclaredconstructor().newinstance();.            system.out.println(jsonmapper.writevalueasstring(object)); //works.            byte[] serobjectbytes  = util.serializeobject(object);.            system.out.println(arrays.tostring(serobjectbytes)); // works.            object deserializeobject = util.deserializeobject1(serobjectbytes); //fails.            object deserializeobject2 = util.deserializeobject2(serobjectbytes); // also fails.  system.out.println(jsonmapper.writevalueasstring(deserializeobject));.        } catch (classnotfoundexception esx) {.            esx.printstacktrace();.        } catch (exception e) {.            e.printstacktrace();.        }.     }..}...so both util.deserializeobject1 and util.deserializeobject1 fails with classnotfoundexception ex i understand i am trying just deserialize bunch of bytes and blank class loader wouldn't have any idea of where the hello.class unless i defineclass again, however, my goal here is to deserialize into a hello object and repopulate to the same state as it was in before serialization. how do i do that?"
