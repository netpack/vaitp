"why is it ok when your class doesn't has parameter-less constructor? i have little confusion. as per theory if we specify any parameter constructor in class then compiler doesn't generate parameter-less construction.(that's why we get error in case of inheritance of such classes). now suppose i have one such class ..public class response.{.    string gmessage;.    string gavilableamount;..    public response( string gmessage,.        string gavilableamount ).    {.        super();.        this.gmessage = gmessage;.        this.gavilableamount = gavilableamount;.    }  .}  ...it has only one constructor, which has two parameters and its body calling super()(parameter less constructor, which is not available). now i have one main method:..public class testermain.{.    public static void main( string[] args ).    {.        response lresponse = new response( ""dd"", ""dd"" );.        system.out.println( lresponse );.    }.}...it works without any error..my question is main is calling new response( ""dd"", ""dd"" ), which again call to the two-parameter constructor of response, which has first line super()(since class doesn't has any parameter-less constructor ), then how this call stack works?"
