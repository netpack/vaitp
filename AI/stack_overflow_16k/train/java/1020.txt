"how to access the instance while using reflection? i have a class that loop through an instance's member at run-time...below is a class that contain different field with different type. assettexture is one of the type i wanted to loop through...public class a {..    public static assettexture t_bg          = new assettexture(""bg.png"");.    public static assettexture t_reels       = new assettexture(""reels.png"");.    public static assettexture t_logo        = new assettexture(""logo.png"");..    public static string things_that_should_not_inside_the_loop;..}...below is the sample code of assettexture class. it only contain a name...class assettexture {..    private string name;..    public assettexture(string name){.        this.name=name;.    }..}...below is the method i use to loop through all field at runtime. it is successful. but i have try all available method of field. it doesn't have the method to get the member...public class manager {..    public manager(){..        a a=new a();//init a..        //loop through all field of instance a.        field[] fields=this.a.getclass().getdeclaredfields();.        for(field field:fields){.        if(field.gettype().equals(assettexture.class)){.            gdx.app.debug(""debug"", field.getname());.        }.    }..}...current output:..t_bg.t_logo.t_reels...expected result:..bg.png.reels.png.logo.png...i have tried to use the tostring method and overide tostring in assettexture. like the code below..field.getname() ---&gt; field.tostring()...overrided tostring in assettexture..class assettexture {..    @override.    public string tostring() {return name;}..}...but it doesn't run the override method."
