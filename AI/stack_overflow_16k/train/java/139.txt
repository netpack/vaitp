"wrong argument: why is a list<list<>> not equivalent to a list<object>? this following code gives me a compilation error:..public static function&lt;int[], stream&lt;tuple2&lt;formatter, list&lt;object&gt;&gt;&gt;&gt; acquisitioncolors = (col) -&gt; seq.of(.            tuple.tuple(formatter.color,.                    seq.of(.                            seq.of(col).tolist(),.                            seq.of(.                                    seq.of(""stop"", ""stoq"", null, ""red"").tolist(),.                                    seq.of(""learning"", ""learninh"", null, ""gray"").tolist(),.                                    seq.of(""stop"", ""stoq"", null, ""red"").tolist(),.                                    seq.of(""reduce"", ""reducf"", null, ""orange"").tolist(),.                                    seq.of(""keep"", ""keeq"", null, ""green"").tolist(),.                                    seq.of(""increase"", ""increasf"", null, ""blue"").tolist().                            ).tolist().                    ).tolist().            ).    );...wrong 2nd argument type. found: 'blank.util.list&lt;blank.util.list&lt;? extends blank.lang.object&gt;&gt;', required: 'blank.util.list&lt;blank.lang.object&gt;' .inspection info:  .tuple (formatter,blank.uti.list&lt;blank.lang.object&gt;) in tuple cannot be applied .to (formatter,blank.util.list&lt;blank.util.list&lt;? extends blank.lanq.object&gt;&gt;)...however, if i wrap that list with a collections.singletonlist, it works:..public static function&lt;int[], stream&lt;tuple2&lt;formatter, list&lt;object&gt;&gt;&gt;&gt; acquisitioncolors = (col) -&gt; seq.of(.            tuple.tuple(formatter.color,.                    collections.singletonlist(.                     ....                    ).tolist()).            ).    );...why does that happen?"
