"process never ends with processbuilder i have a problem running a command in blank using the process builder. in the test machine it works correctly but once on the server the proccess being opened by the command freezes and never exits. this code is used on an apache tomcat windows web server:..//word is the absolute path for msword and inf is the absolute path.//for the file to save as pdf.public boolean changeformatmsoffice(string inf, string word) {.    system.out.println(""changeformatmsoffice("" + inf + "","" + word + "")"");.    string macro = """";.    arraylist&lt;string&gt; wordarr = new arraylist&lt;string&gt;(blank.util.arrays.aslist(to_pdf_word.replace("" "", """").split("","")));.    arraylist&lt;string&gt; excelarr = new arraylist&lt;string&gt;(blank.util.arrays.aslist(to_pdf_excel.replace("" "", """").split("","")));.    arraylist&lt;string&gt; pparr = new arraylist&lt;string&gt;(blank.util.arrays.aslist(to_pdf_pp.replace("" "", """").split("","")));.    string extension = inf.substring(inf.lastindexof(""."")).replace(""."", """").trim();.    bufferedwriter out;.    list&lt;string&gt; cmdlist = new arraylist&lt;string&gt;();.    cmdlist.add(word);.    string savefile = """";.    if (wordarr.contains(extension)) {.        macro = ""/msaveaspdf"";.        cmdlist.add(macro);.        cmdlist.add(inf);.    } else if (excelarr.contains(extension) || pparr.contains(extension)) {.        if (excelarr.contains(extension)) {.            macro = ""/msavexlsaspdf"";.        } else {.            macro = ""/msavepptaspdf"";.        }.        cmdlist.add(macro);.        int filenum = 0;.        savefile = """""" + path + (path.substring(path.length() - 1).equals(file.separator) ? """" : file.separator) + filenum + "".txt"""";.        while (new file(savefile).exists()) {.            filenum++;.            savefile = """""" + path + (path.substring(path.length() - 1).equals(file.separator) ? """" : file.separator) + filenum + "".txt"""";.        }.        try {.            out = new bufferedwriter(new filewriter(savefile));.            out.write(inf);.            out.close();.            cmdlist.add(savefile);.        } catch (exception e) {.            system.err.println(e.tostring());.        }.    }..    try {.        processbuilder proc = new processbuilder(cmdlist);.        system.out.println(""prewaitforlist"");.        process pro = proc.start(); //&lt;----- important part starts here.        streamgobbler g1 = new streamgobbler(""stdin"", pro.getinputstream());.        streamgobbler g2 = new streamgobbler(""stderr"", pro.geterrorstream());.        g1.start();.        g2.start();.        pro.waitfor();//&lt;---- hangs here, but need to wait for it to exit(system requirement).        system.out.println(""afterwaitfor"");.        try {.            if (!savefile.equals("""")) {.                new file(savefile).delete();.            }.        } catch (exception e) {.        }.        return true;.    } catch (exception e) {.        system.err.println(e.tostring());.        return false;.    }.}...i found information saying that you need to collect the std and error streams else it will freze so i used the following stream gobbler implementation:..public class streamgobbler implements runnable {..    string name;.    inputstream is;.    thread thread;..    public streamgobbler(string name, inputstream is) {.        this.name = name;.        this.is = is;.    }..    public void start() {.        thread = new thread(this);.        thread.start();.    }..    public void run() {.        try {.            inputstreamreader isr = new inputstreamreader(is);.            bufferedreader br = new bufferedreader(isr);..            while (true) {.                string s = br.readline();.                if (s == null) {.                    break;.                }.                system.out.println(""["" + name + ""] "" + s);.            }..            is.close();..        } catch (exception ex) {.            system.out.println(""problem reading stream "" + name + ""... :"" + ex);.            ex.printstacktrace();.        }.    }.}...note that while running the command in the command line it works, in both the test machine and in the server"
