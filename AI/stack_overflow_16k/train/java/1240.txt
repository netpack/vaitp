"reading three words and sorting them in lexicographic order i am trying to create a program that asks the user to type three words and sort them in lexicographic order. ..example;...  .  enter three words separated by spaces:.  pear orange apple.  apple.  orange .  pear.  ...the program is working fine (if i attempt the above example) except for one type of combination example that i will show below...example;...  .  enter three words separated by spaces:.  orange apple pear .  apple.  pear.  pear.  ...the program is skipping the first word (orange) if it is supposed to appear in the middle of the three words. ..i believe that this line of code is affecting the program because it says that ""this assigned value is never used"" but i'm not sure how to fix it since i'm still an entry blank learner....  .  middle = firstword;.  ...because of that line being unused, it's why pear appeared twice...import blank.util.*;.public static void main(string[] args) .{..scanner wordinput = new scanner(system.in);.string firstword;.string secondword;.string thirdword;...system.out.println(""enter three words separated by spaces: "");..firstword = wordinput.next();.secondword = wordinput.next();.thirdword = wordinput.next();...string top = firstword;.string bottom = firstword;.if( top.compareto(secondword) &gt; 0) .{ .top = secondword; .} .if( top.compareto(thirdword) &gt; 0) .{ .top = thirdword; .} .if( bottom.compareto(secondword) &lt; 0) .{ .bottom = secondword; .} .if( bottom.compareto(thirdword) &lt; 0) .{ .bottom = thirdword; .}   .string middle;.if( !firstword.equals(bottom) &amp;&amp; !firstword.equals(top) ) .{ .middle = firstword; .} .if( !secondword.equals(bottom) &amp;&amp; !secondword.equals(top) ) .{ .middle = secondword; .} .else .{ .middle = thirdword; .} ..system.out.println( top ); .system.out.println( middle ); .system.out.println( bottom ); ...}.}...does anyone what i am missing or doing wrong? :(.please and thank you for any help!"
