"overriding method with generics i have a base class called genericorder that can be used to create an order with any type of products, then i have subclasses of that order that are more specific.  my problem is with my computerorder class and a method that i'm overriding.  here's the base class code.  ..import blank.util.list;.import blank.util.arraylist;..public class genericorder&lt;t&gt; {..private long ordernumber;.private list&lt;t&gt; products;.private t theclass;..public genericorder() .{.    products = new arraylist&lt;t&gt;();.    ordernumber = system.currenttimemillis();.}..public long getordernumber() {.    return ordernumber;.}..public void addproduct(t newproduct) {.    products.add(newproduct);..}..public int getnumberofproducts() {.    return products.size();.}..public list&lt;t&gt; getproducts().{.    return products;.}..public void setproducts(list&lt;t&gt; products).{.    this.products = products;.}..public t get().{.    return theclass;.}..public void set(t theclass).{.    this.theclass = theclass;.}.}...and here is my subclass code.  the getproducts is the method i'm having trouble with.  ..import blank.util.arraylist;.import blank.util.list;..public class computerorder&lt;t&gt; extends genericorder&lt;t&gt; {.    private list&lt;computerpart&gt; computerparts = new arraylist&lt;computerpart&gt;();.    private string ordertype = ""computer parts"";..public computerorder() {.    super();..}..public void addproduct(computerpart newproduct) {..    computerparts.add(newproduct);..}..public string getordertype() {.    return ordertype;.}..public int getnumberofproducts() {.    return computerparts.size();.}...public list&lt;t&gt; getproducts().{..    return computerparts;.}...}...the error i get says  cannot convert from list(computerpart) to list&lt;t&gt;"
