"returning from a constructor causes a compile error on lambda parameters: ""error: variable might not have been initialized"" when compiling a class that contains a return statement in its constructor, and a member variable whose constructor takes a lambda with parameters, i get a compile error...example code:..import blankx.swing.timer;..public class app {..    final timer timer = new timer(1_000, e -&gt; {});..    public app() {.        return;.    }..    public static void main(string[] args) {.        system.out.println(""timer is "" + new app().timer);.    }..}...running blankc app.blank (with oracle jdk 1.8.0_191) results in:..app.blank:8: error: variable e might not have been initialized.        return;.        ^.1 error...take out the return statement in the constructor, and it compiles. convert the lambda to an anonymous class, and it also compiles...what's even stranger: ides seem to be okay with it. the above code can actually be run in vs code, and none of eclipse, netbeans, and intellij show up any errors. the only reason it came up for me was that my gradle build was failing...what's going on here, am i missing something?"
