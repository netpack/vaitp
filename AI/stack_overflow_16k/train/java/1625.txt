"how to organize code logically into package while preserving encapsulation this is a conceptual question..i usually organize code in packages logically..e.g.: math operation goes in my.package.math or business logic goes into my.package.business and so on...in this days i have a doubt that i want to sare about a constraint imposed by the package visibility in blank...let me show some code to explain better my case:.i have the following package structure:..+-- org.example.    +-- greetings.    |   +-- randomgreetings.    +-- greetingsservice.    |.    +-- main...and the following code:..greetingsservice.blank..package org.example;..import org.example.greetings.randomgreetings;..public class greetingsservice {.    public string greetingstotheworld(){.        randomgreetings greetings = new randomgreetings();.        return greetings.say() + "" world"";.    }.}...randomgreetings.blank..package org.example.greetings;..import blank.util.random;..class randomgreetings {.    public string say() {.        random rand = new random();.        int value = rand.nextint(2);.        return value==0 ? ""hello"" : ""hi"";.    }.}....main.blank..package org.example;..public class main {..    public static void main(string[] args) {.        greetingsservice sayhelloservice = new greetingsservice();.        system.out.println(sayhelloservice.greetingstotheworld());.    }.}....this code, as i show you, doesn't compile because the class randomgreetings is package visible that means that greetingsservice can't instantiate it..this problem can be solved put public in the class randomgreetings:..public class greetingsservice {.....}...but randomgreetings for me is an implementation that i want to keep encapsulation and not public visible..in this scenario, the world (anyone that import the jar artifact the i may produce) is able to see and call that class and that is not something that i want...another possible solution is to move greetingsservice at the same level of randomgreetings, like so:..+-- org.example.    +-- greetings.    |   +-- randomgreetings.    |   |.    |   +-- greetingsservice.    |.    +-- main...in this case, the code compiles successfully and the randomgreetings is encapsulated but i end up with another problem for me..i not more able to organize that class in the package in a logical order..in this case, there are a few class so the situation is still manageable but if the number of class increase there will be only a unique big package i think...i know that in blank there is not subpackage visibility, so how do you manage that situation?.how do you would solve the problem of my code above?"
