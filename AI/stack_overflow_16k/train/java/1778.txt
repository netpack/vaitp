"change method's return type dynamically i would like to change method's return type dynamically. for example, i have code such this:..class a {..}..class b extends a {.    public void animate1() { }.    public void animate2() { }.}..class c extends a {.    public void animate3() { }.    public void animate4() { }.}..class registry {..    private map&lt;string, a&gt; mmap;..    public &lt;t&gt; t get(string key) {.        a data = mmap.get(key);..        /*.        * i would like to implement like this:.        * if(data.getclass() == b.class).        *       t = b;.        * else if(data.getclass() == c.class).        *       t = c;.        */..        return (t) data;.    }..    public void put(string key, a data) {.        mmap.put(key, data);.    }..}...now i can do this:..        mregistry.put(""key_b"", new b());.        mregistry.put(""key_c"", new c());.        ((b) mregistry.get(""key_b"")).animate1();.        ((c) mregistry.get(""key_c"")).animate4();...i want to implement code like this (without cast):..        mregistry.put(""key_b"", new b());.        mregistry.put(""key_c"", new c());.        mregistry.get(""key_b"").animate1();.        mregistry.get(""key_c"").animate4();...the method can change its return type of following in some data, similar to first code (where it is commented)..maybe someone knows, how to solve this problem in another way, but without casts outside class registry?"
