"sorting an arraylist of arraylists of integers in which inner lists are of varying lengths ques: given a set of distinct integers, s, return all possible subsets. elements in a subset must be in non-descending order. also, the subsets should be sorted in ascending ( lexicographic ) order..my approach: i sorted the input first. then found all the subsets and appended the new subsets found in each step to the ""res"". now i tried sorting the ""res"" arraylist using custom comparator. but the output is coming wrong..                     for the input arraylist a={  15, 12, 4  }.output : res={  {}, {4}, {4,12}, {4,15}, {4,12,15}, {12}, {12,15}, {15}  }.expected output:res={  {}, {4}, {4,12}, {4,,12,15}, {4,15}, {12}, {12,15}, {15}  } ..public static arraylist&lt;arraylist&lt;integer&gt;&gt; subsets(arraylist&lt;integer&gt; a) .{   int i,j;.    arraylist&lt;arraylist&lt;integer&gt;&gt; res=new arraylist&lt;arraylist&lt;integer&gt;&gt;();.    arraylist&lt;integer&gt; temp;.    res.add(new arraylist&lt;integer&gt;());        .    collections.sort(a);   .    for(i=0;i&lt;a.size();i++).    {   arraylist&lt;arraylist&lt;integer&gt;&gt; str=new arraylist&lt;arraylist&lt;integer&gt;&gt;();.        for(arraylist&lt;integer&gt; al:res).        {   temp=new arraylist&lt;integer&gt;();.            temp.addall(al);.            temp.add(a.get(i));             .            str.add(temp);.        }.        res.addall(str);..    }.    collections.sort(res,new comparator&lt;arraylist&lt;integer&gt;&gt;().    {   public int compare(arraylist&lt;integer&gt; p,arraylist&lt;integer&gt; q).        {   if(q.size()==0).                return 1;.            else                        .                return integer.compare(p.get(0),q.get(0));.        }.    });.    return res;.}...to sort the inner lists with respect to each other i wrote this comparator. but the comparator is giving wrong answer. i suppose my comparator is wrongly written."
