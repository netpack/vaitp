"how to address instance of anonymous class from inner anonymous class? i have a code that contains anonymous class in another anonymous class and i need to address instance of outer anonymous class from inner anonymous class. here is the code:..edittemplatebutton.setaction(new abstractaction(""edit..."", guiutils.edit_element_icon).        {.            {.                setenabled(false); // disabled at start.                templateslist.addlistselectionlistener(new listselectionlistener().                {.                    @override.                    public void valuechanged(listselectionevent e).                    {.                        setenabled(!templateslist.isselectionempty()); // depends on selection.                    }.                });.            }..            @override.            public void actionperformed(actionevent e).            {.                //todo.            }.        });...so, i call setenabled() of implementation of abstractaction inside implementation of listselectionlistener. now it's called ok. but i want to put implementation of listselectionlistener to variable and use it twice for different actions. how can i call setenabled() properly? please don't forget that outer jframe contains this code is also have setenabled() method and i don't want to call it instead of right one...thanks in advance for your answer...update: i can't use construction like abstractaction.this.setenabled(!templateslist.isselectionempty()); because compiler reports error."
