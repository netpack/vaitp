"i am creating a game of hangman. having two issues with it right now first off, the secret word is printed out as dashes, then the user puts in what letter they want to guess. if they guess the letter correctly then it will update the dashes. so if the word is blank, it will show as ---- and if the user types a, then it will update and show -a-a . my program does that but it also adds extra dashes at the end and i don't know how to make it not print those extra dashes. and that brings me to another problem i am having, the user is asked at what indexes they want to guess the letter. so if the user types the letter a and at index 1, then the updated word will show -a--, but my program updates all instances of where the a is at, so it shows -a-a. here is my code:..import blank.util.scanner;.public class hangman2 {..private static final boolean testingmode = true;..public static void main(string[] args) {..    scanner keyboard = new scanner(system.in);.    int guessremaining = 20;.    int rounds = 1;.    int roundscore;..    string wordstring = """";...    string word = randomword.newword();.    int length = word.length();..    for(int i = 0; i &lt; length; i++).    {   ..        wordstring += ""-"";..    }...    system.out.println(""the word is: "" +wordstring);..    system.out.println(""the secret word is: "" +word);..    system.out.println(""enter the number of spaces allowed"");.    int spacesallowed = keyboard.nextint();.    keyboard.nextline();..    if(spacesallowed &gt; length).    {.        system.out.println(""invalid input. try again."");.        system.out.println(""enter the number of spaces allowed"");.        spacesallowed = keyboard.nextint();.    }..    while(guessremaining &gt; 0) {..        system.out.println(""please enter the letter you want to guess: "");.        string letterguess = keyboard.next();.        char lettercharacter = letterguess.charat(0);..        system.out.println(""please enter the number of spaces you want to check (seperated by spaces): "");.        string spaceschecked = keyboard.next();..            boolean guesscheck;.            // check if the letter is in the string.            guesscheck = (word.indexof(lettercharacter)) != -1;..            if(guesscheck == true).            {.                     for (int i = 0; i &lt; word.length(); i++) {..                         if (lettercharacter == word.charat(i)) {..                            wordstring = wordstring.substring(0, i) + letterguess + wordstring.substring(i);..                            system.out.println(""your guess is in the word!"");..                            system.out.println(""the updated word is: "" +wordstring); .                            } //end of if statement..                     } //end of for loop.            }..            else.                    {.                         system.out.println(""your letter was not found in the spaces you provided"");.                         guessremaining--;.                         system.out.println(""you have "" +guessremaining+ "" guesses remaining."");.                    }   .    }...    if(guessremaining != 0).    {.        system.out.println(""you win!"");.        system.out.println(""you have guessed the word! congratulations"");..        roundscore = (guessremaining * 10) / spacesallowed;..    } //end of if..    else{.        system.out.println(""guesses remaining: 0"");.        system.out.println(""you have failed to guess the word... :("");.    } ..    system.out.println(""would you like to play again? yes (y) or no (n)"");.    string playagain = keyboard.next();..    if(!playagain.equals(""y"") &amp;&amp; !playagain.equals(""n"")).    {.        system.out.println(""invalid response, please try again... "");.    }..    if(playagain.equals(""y"")).    {.        rounds++;..    }..    else.    {.        system.exit(0);.    }.}...}"
