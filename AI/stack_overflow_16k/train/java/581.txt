"static classes in blank--something is being shadowed following is the simplest example of static inner class in blank. let's look at it...package staticclass;..final class outer.{.    final public static class inner.    {.        static string s = ""black"";.    }..    static extra inner = new extra();   //the inner class name and the object name of the class  extra are same and it is responsible for shadowing/hiding inner.s.}..final class extra.{.    string s = ""white"";.}..final public class main.{.    public static void main(string[] args).    {.        system.out.println(outer.inner.s);.    }.}.....within the outer class, there is a static class named inner and a static object with the same name inner of type extra. the program displays whilte on the console, a string in the extra class through outer.inner.s in main() which is intended to display the string contained in the inner class within the outer class....why is there no name collision between a static inner class and a static object of type extra? how does the extra class enjoys the higher priority than the inner class and displays the string contained in the extra class?"
