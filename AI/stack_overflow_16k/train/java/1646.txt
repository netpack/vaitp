"fastest way for collision detection with lists? so i'm making a 2d game in blank but i'm having some issues with the running speed of the game(it is pretty slow) and this is being caused by my collision detection methods, and i'm not quite sure how to correct it. so basically for collision detection for my enemies movement i'm using 2 lists(arraylists), one for my walls and one for my enemies(cause i don't enemies to collide). so my question is would it be more appropriate/faster if i used maps instead of arraylists, or is it just my implementation that makes the game run slowly? here is the code i have for the moment for my enemy movement and the imagetile interface(if any complementary code is necessary feel free to say), thanks guys:..public interface imagetile {..    string getname();.    position getposition();..}...public abstract class enemy implements imagetile {..    protected position position;.    protected string name;.    protected int damage;.    protected int health;.    protected int vision;..    public enemy(position position){.        this.position=position;.    }...    public abstract void move(hero hero, list&lt;wall&gt; walls, list&lt;enemy&gt; enemies);..    public void losehealth(int damage){.        this.health-=damage;.    }..    public int getdamage() {.        return damage;.    }..    public int getvision() {.        return vision;.    }..    public int gethealth() {.        return health;.    }..    @override.    public string getname() {.        return name;.    }..    @override.    public position getposition() {.        return position;.    }.}...public class bat extends enemy {    ..    public bat(position position) {.        super(position);.        this.damage=100;.        this.health=150;.        this.vision=5;.    }..    @override.    public string getname() {.        return ""bat"";.    }..    @override.    public void move(hero hero, list&lt;wall&gt; walls, list&lt;enemy&gt; enemies){.        int x = hero.getposition().getx();.        int y = hero.getposition().gety();.        int x0 = position.getx();.        int y0 = position.gety();.        if((int) math.sqrt((x0-x) * (x0-x) + (y0-y) * (y0-y))&lt;vision){.            if(x&gt;x0 &amp;&amp; y&gt;y0){.                if(x0&lt;9 &amp;&amp; y0&lt;9){.                    if(!walls.contains(new wall(new position(x0+1,y0+1))) &amp;&amp; !hero.getposition().equals(new position(x0+1,y0+1))).                          x0++; y0++;.                    if(hero.getposition().equals(new position(x0+1,y0+1))).                          hero.losehealth(getdamage());.                }.            }.            if(x&gt;x0 &amp;&amp; y&lt;y0){.                if(x0&lt;9 &amp;&amp; y0&gt;1){.                    if(!walls.contains(new wall(new position(x0+1,y0-1))) &amp;&amp; !hero.getposition().equals(new position(x0+1,y0-1))).                         x0++; y0--;.                    if(hero.getposition().equals(new position(x0+1,y0-1))).                       hero.losehealth(getdamage());.                }.            }.            if(x&lt;x0 &amp;&amp; y&gt;y0){.                if(x0&gt;1 &amp;&amp; y0&lt;9){.                    if(!walls.contains(new wall(new position(x0-1,y0+1))) &amp;&amp; !hero.getposition().equals(new position(x0-1,y0+1))).                         x0--; y0++;.                    if(hero.getposition().equals(new position(x0-1,y0+1))).                       hero.losehealth(getdamage());.                }.            }..            if(x&lt;x0 &amp;&amp; y&lt;y0){.                if(x0&gt;1 &amp;&amp; y0&gt;1){.                    if(!walls.contains(new wall(new position(x0-1,y0-1))) &amp;&amp; !hero.getposition().equals(new position(x0-1,y0-1))).                         x0--; y0--;.                    if(hero.getposition().equals(new position(x0-1,y0-1))).                       hero.losehealth(getdamage());.                }.            }.            this.position=new position(x0,y0);.        }else{.            random random = new random();.            int i=random.nextint(4);.            if(i==0){.                if(x0&gt;1){.                    if(!walls.contains(new wall(new position(x0-1,y0)))).                        this.position=position.plus(direction.left.asvector());.                }.            }.            if(i==1){.                if(x0&lt;9){.                   if(!walls.contains(new wall(new position(x0+1,y0)))).                        this.position=position.plus(direction.right.asvector());.                }.            }.            if(i==2){.                if(y0&gt;1){.                    if(!walls.contains(new wall(new position(x0,y0-1)))).                        this.position=position.plus(direction.up.asvector());.                }.            }.            if(i==3){.                if(y0&lt;9){.                    if(!walls.contains(new wall(new position(x0,y0+1)))).                        this.position=position.plus(direction.down.asvector());.                }.            }.        }.    }.}"
