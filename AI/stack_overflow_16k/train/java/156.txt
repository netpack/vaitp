"jfx locks up after a period of time blank version ""1.8.0_181"" jfx, made a video class using jfx. have a small test program to play videos. the test program supplies a jpanel to the video class and then calls video in a loop to play videos. (3 mp4s 5 - 13 meg in size.) heap is set to 100 meg. after an hour or more, the program locks up. no crash message, seems to be plenty of free heap. (more than half.) where might i look to try and find the problem?..not knowing what the problem is, i have not known what to try. ..import blank.awt.borderlayout;.import blank.awt.color;.import blank.io.file;..import blankx.swing.jpanel;.import blankfx.application.platform;.//import blankfx.beans.binding.bindings;.//import blankfx.beans.property.doubleproperty;.import blankfx.embed.swing.jfxpanel;.import blankfx.event.eventhandler;.import blankfx.scene.scene;.import blankfx.scene.control.button;.import blankfx.scene.input.mouseevent;.import blankfx.scene.layout.stackpane;.import blankfx.scene.media.media;.import blankfx.scene.media.mediaplayer;.import blankfx.scene.media.mediaview;.import blankfx.scene.paint.paint;.import blankfx.scene.shape.rectangle;.import blankfx.util.duration;.import com.zowie3.mainbase;..public class video.{.    final static boolean do_video = true;.    final static boolean stretch_vid = true;..    static jfxpanel vfxpanel;       // for videos.    static jpanel   videopanel;     // vfxpanel added here..    file video_source;.    mediaplayer player;.    mediaview   viewer;.    media media; .    stackpane root;.    scene scene;.    rectangle rect; ..    button b;.    boolean videodone;.    boolean jfxdone;    ..    //-- once at startup --.    static public void init().    {.        if (do_video).        {.            vfxpanel = new jfxpanel();.            vfxpanel.setbackground(color.black);..            videopanel = mainbase.getpanelforvideo();.            videopanel.setlayout(new borderlayout());.            videopanel.add(vfxpanel, borderlayout.center);.            videopanel.setbackground(color.black);.            videopanel.setvisible(false);.        }.    }..    //-- call to play a video --.    public void playvideo(string vid).    { .        if (do_video).        {.            videodone = false;..            video_source = new file(vid);.            try.            {.                media = new media(video_source.touri().tostring());.            }.            catch (exception e).            {.                return; //media fail return - todo perhaps some info returned?.            }       ..            platform.runlater(new runnable() .            {.                @override.                public void run() .                {.                    initfx();.                }.            });          ..            //-- block until video is done --.            while (videodone == false) .            {    .                try.                {.                    thread.sleep(250);  //500 1000.                }.                catch (interruptedexception e).                {.                    // todo auto-generated catch block.                    e.printstacktrace();.                }.            }..            //-- jfx will run --.            jfxdone = false;.            platform.runlater(new runnable() .            {.                @override.                public void run() .                {                .                    endfx();.                }.            });     ..            //-- block tlil jfx is done --.            while (jfxdone == false) .            {    .                try.                {.                    thread.sleep(500);  //1000.                }.                catch (interruptedexception e).                {.                    // todo auto-generated catch block.                    e.printstacktrace();.                }.            }       ..            mainbase._instance.setfocusable(true);.            mainbase._instance.tofront();      .        } .    } ..    synchronized void endfx().    { .        b.removeeventfilter(mouseevent.mouse_clicked, eventhandler);        .        root.getchildren().clear();..        scene = null;.        root = null;        .        player.dispose();.        player = null;        .        media = null;.        video_source = null;.        vfxpanel.setvisible(false);.        videopanel.setvisible(false);..        jfxdone = true;.    }    ..    //-- mouse event handler -- .    eventhandler&lt;mouseevent&gt; eventhandler = new eventhandler&lt;mouseevent&gt;() .    { .       @override .       public void handle(mouseevent me) .       { .          me.consume();..        //-- jfx will run --.          platform.runlater(new runnable() .          {.              @override.              public void run() .              {.                  player.seek(duration.indefinite);.              }.          });    .       }.    };   ..    synchronized void initfx().    { .        player = new mediaplayer(media);.        player.setonendofmedia(new runnable() .        {.           synchronized public void run() .           {.               videodone = true;               .           }.        });            ..        viewer = new mediaview(player);..        //-- resize video based on screen size --.        if ( stretch_vid ).        {.            viewer.setfitheight(mainbase.screenh+50);.            viewer.setfitwidth(mainbase.screenw+50);.            /*.            doubleproperty width = viewer.fitwidthproperty();.            doubleproperty height = viewer.fitheightproperty();.            width.bind(bindings.selectdouble(viewer.sceneproperty(), ""width""));.            height.bind(bindings.selectdouble(viewer.sceneproperty(), ""height""));.            viewer.setpreserveratio(true);.            */          .        }..        root = new stackpane();.        scene = new scene(root);..        //-- black backdrop --.        rect = new rectangle(0,0, mainbase.screenh, mainbase.screenh); // scene rect.        rect.setfill(paint.valueof(""blue""));   //black final, blue to see panel size on screen.        root.getchildren().add(rect);..        root.getchildren().add(viewer);..        //-- transparent abort button --.        b = new button(""abort"");.        b.setminwidth(vfxpanel.getwidth());.        b.setminheight(vfxpanel.getheight());.        b.addeventfilter(mouseevent.mouse_clicked, eventhandler);.        b.setopacity(0);.        root.getchildren().add(b);          ..        vfxpanel.setscene(scene);.        vfxpanel.setvisible(true);.        videopanel.setvisible(true); .        player.setautoplay(true);.    }   .}...playing same 3 short videos over and over. with 100meg of heap, i would expect it to keep running until stopped. but it freezes up after an hour or so. no error given."
