"comparing two files and giving an output which ever file has the highest count the problem with my code is, sometimes it reads and compares the string without any issue but again it also throws errors when comparing other strings. i think my comparing function isn't performing enough to the mark, where do i need to set the code efficiently so that my comparison function works efficiently?..can someone please suggest to me something? so far i have tried comparing two files using bufferedreader. my code works to some extent but at the same time encounters an error ...  ""exception in thread ""main"".  blank.lang.stringindexoutofboundsexception:""...i have a few pictures which describe my problem intuitively. i think my findtarget function isn't accurate enough which is why it keeps throwing these exceptions...  error : click here to view the image..  .  no-error : click here to view the image....and here is my two files which contains positive and negative keywords....  negitive : file extention is negi.txt.  .  positive : file extention is posi.txt...here is the findtarget function which is used to compare the strings...public static int findtarget(string target, string source) .{..    int target_len = target.length();.    int source_len = source.length();..    int add = 0;..    // this function check the character whether it is present.       .    for (int i = 0; i &lt; source_len; ++i) // i is a varialbe used to count upto source_len..    {..        int j = 0; // take another variable to count loops.        //int[] k = new int[100];..        while (add == 0) .        {.            if (j &gt;= target_len) // count upto target length.            {.                break;.            } .            else if (target.charat(j) != source.charat(i + j)) .            {.                break;.            } .            else .            {.                ++j;.                if (j == target_len) .                {.                    add++; // this will return 1: true.                }.            }.        }.    }.    return add;.    //system.out.println(""""+add);.}...here is my entire code just incase if you wanna run them...import blank.io.bufferedreader;.import blank.io.file;.import blank.io.filereader;.import blank.io.ioexception;.import blank.util.*;.import blank.io.filewriter;...public class test {.    public static int findtarget(string target, string source) .    {..        int target_len = target.length();.        int source_len = source.length();..        int add = 0;..        // this function check the character whether it is present.       .        for (int i = 0; i &lt; source_len; ++i) // i is a varialbe used to count upto source_len..        {..            int j = 0; // take another variable to count loops.            //int[] k = new int[100];..            while (add == 0) .            {.                if (j &gt;= target_len) // count upto target length.                {.                    break;.                } .                else if (target.charat(j) != source.charat(i + j)) .                {.                    break;.                } .                else .                {.                    ++j;.                    if (j == target_len) .                    {.                        add++; // this will return 1: true.                    }.                }.            }.        }.        return add;.        //system.out.println(""""+add);..    }....public static void main(string... args) .{.// function 1.        //this variable can be called from any place inside this main function..        int testing1 = 0; .        int testing2 = 0;.        try {..            //reads user review and store them inside source1.            scanner sc = new scanner(system.in);..            system.out.println(""enter your review: "");.            string source1 = sc.nextline();..            //establising a file object.            file file = new file(""posi.txt"");.            bufferedreader br1 = new bufferedreader(new filereader(file));..            //establising a file object.            file file2 = new file(""negi.txt"");.            bufferedreader br2 = new bufferedreader(new filereader(file2));..            string target1; // using a string variable to read the content of the file posi.txt..            while ((target1 = br1.readline()) != null) //as long the condition is not null it will keep printing..            {      .                testing1 += test.findtarget(target1, source1); // supplying two arguments to findtarget function..            }..            string target2; // using a string variable to read the content of the file negi.txt..            while ((target2 = br2.readline()) != null) //as long the condition is not null it will keep printing..            {                           .                testing2 += test.findtarget(target2, source1); // supplying two arguments to findtarget function..            }.            br1.close(); br2.close();.            system.out.println(""positive is:""+testing1 +""nnegative is :""+testing2); //-not going to print now! :d-.            system.out.println(""nthank you for your feedback! :)"");..            } .            catch (ioexception e) .            {.            system.out.println(""file error!"");.            }...            // this function is an area where it stores the return value inside a file called pos.txt.            try .            {  .            filewriter mywriter = new filewriter(""pos.txt"",true); .            // using the true condition makes the line move to the next line...            mywriter.write("" ""+testing1);.            mywriter.close();.            } .            catch (ioexception e) .            {.            system.out.println(""an error occurred."");      .            }..            // writing neg inside a file called neg.txt.            try .            {        .            filewriter mywriter = new filewriter(""neg.txt"",true); .            // using the true condition makes the line move to the next line...            mywriter.write("" ""+testing2);.            mywriter.close();.            } .            catch (ioexception e) .            {.            system.out.println(""an error occurred."");      .            }..        // to evaluate an output based on highest count..        if(testing1 &gt; testing2).            system.out.println(""it is positive"");.        else if (testing1 == testing2).            system.out.println(""it is neutral"");.        else.            system.out.println(""it is negative""); .    }    .}"
