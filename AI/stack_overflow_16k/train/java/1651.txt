"lambda vs anon vs static nested class this class has three methods that do the same thing, they wait three seconds for the page to load and return true if the page has loaded..my question is, how do i decide which piece of code is best?.i know that lambda is preferred above anon classes, but why is a static nested class (pageloaded3) not fine? according to this post it should also be suited...public final class expectedconditions {..    private expectedconditions() {.    }..    public static expectedcondition&lt;boolean&gt; pageloaded1() {.        return (driver) -&gt; {.            try {.                thread.sleep(3000);.            } catch (interruptedexception e) {.                e.printstacktrace();.            }.            return !((blankscriptexecutor) driver).executescript(""return performance.timing.loadeventend"", new object[0]).                    .equals(""0"");.        };.    }..    public static expectedcondition&lt;boolean&gt; pageloaded2() {.        return new expectedcondition&lt;boolean&gt;() {.            @override.            public boolean apply(webdriver driver) {.                try {.                    thread.sleep(3000);.                } catch (interruptedexception e) {.                    e.printstacktrace();.                }.                return !((blankscriptexecutor) driver).                        .executescript(""return performance.timing.loadeventend"", new object[0]).equals(""0"");.            }.        };.    }..    public static expectedcondition&lt;boolean&gt; pageloaded3() {.        return new pageloaded();.    }..    private static class pageloaded implements expectedcondition&lt;boolean&gt; {.        @override.        public boolean apply(webdriver driver) {.            try {.                thread.sleep(3000);.            } catch (interruptedexception e) {.                e.printstacktrace();.            }.            return !((blankscriptexecutor) driver).executescript(""return performance.timing.loadeventend"", new object[0]).                    .equals(""0"");.        }.    }..}...this is the interface of the return type of the three methods:..public interface expectedcondition&lt;t&gt; extends function&lt;webdriver, t&gt; {}"
