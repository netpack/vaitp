"""blankx.crypto.illegalblocksizeexception"" when decrypt data from database i want to store data (encrypted with des) and then take the encrypted data from database and present it as a list. but i have a problem. here is the code...    public void encryptdemo(){.    try {.        fileinputstream keyfis = new fileinputstream(""mainkey.key"");.        byte[] encodedkey = new byte[keyfis.available()];.        keyfis.read(encodedkey);.        keyfis.close();.        key keyfromfile = new secretkeyspec(encodedkey, ""des"");.        cipher cipher = cipher.getinstance(""des/ecb/pkcs5padding"");.        string text=txttoencryptdata.gettext(), output;.        cipher.init(cipher.encrypt_mode, keyfromfile);.        datademo = cipher.dofinal(text.getbytes());.        insertintodatabase();.        //i store it as varbinary in database.    } catch (filenotfoundexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (ioexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (nosuchalgorithmexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (nosuchpaddingexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (invalidkeyexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (illegalblocksizeexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (badpaddingexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    }.}..    public void decryptdemo(){.    try {.        fileinputstream keyfis = new fileinputstream(""mainkey.key"");.        byte[] encodedkey = new byte[keyfis.available()];.        keyfis.read(encodedkey);.        keyfis.close();.        key keyfromfile = new secretkeyspec(encodedkey, ""des"");.        cipher cipher = cipher.getinstance(""des/ecb/pkcs5padding"");.        cipher.init(cipher.decrypt_mode, keyfromfile);.        string sql = ""{call selectall}"";.        callablestatement call = conn.preparecall(sql);.        call.execute();.        resultset result = call.getresultset();.        defaultlistmodel model = new defaultlistmodel();.        while(result.next()){.            datademo = result.getbytes(""testdata"");.            byte[] plaintext = cipher.dofinal(datademo);.            string after = new string(plaintext);.            model.addelement(after);.        }.        lstdecryptresult.setmodel(model);.    } catch (sqlexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (filenotfoundexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (ioexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (nosuchalgorithmexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (nosuchpaddingexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (invalidkeyexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (illegalblocksizeexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    } catch (badpaddingexception ex) {.        logger.getlogger(maingui.class.getname()).log(level.severe, null, ex);.    }.}...the encrypt and storing is allright. but when i take data from database, i get this error when decrypt (at byte[] plaintext = cipher.dofinal(datademo);)..jul 19, 2013 11:40:05 am databaseencryptdecryptdemo.maingui decryptdemo.severe: null.blankx.crypto.illegalblocksizeexception: input length must be multiple of 8 when decrypting with padded cipher...anyone have a solution for this???"
