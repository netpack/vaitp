"how does casting work in this situation? so let's say i have two classes...public class example1 {..    private int a;.    private string b;..    public example1(int a, string b) {.        this.a = a;.        this.b = b;.    }..    public int geta() {.        return a;.    }.    public string getb() {.        return b;.    }.} ...public class example2 extends example1 {..    public example2(int a, string b) {.        super(a, b);.    }..    @override.    public int geta() {.        return 10;.    }.}...now, if i go ahead and cast example2 to type example 1...example1 a = (example1) new example2(5, ""hi"");...what will a.geta() return?..as a further question from that, if example2 looked like this....public class example2 extends example1 {..    public example2(int a, string b) {.        super(a, b);.    }.    @override.    public int geta() {.        return getamodified();.    }.    public int getamodified() {.        return 10;.    }.}...what would a.geta() return? what happens here, and more importantly why does it happen?"
