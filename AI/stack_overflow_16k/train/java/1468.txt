"function overloading with subclass parameters in blank i have a class that extends another class (in this case, it's an exception):..public class newtypeexception extends exception {.    private string exceptionfield;..    public string getexceptionfield() {.        return exceptionfield;.    }..    public void setexceptionfield(string exceptionfield) {.        this.exceptionfield = exceptionfield;.    }.    public newtypeexception(string cause, string reason) {.        super(cause);.        exceptionfield = reason;.    }.}...and another class (for sake of example, lets call this printutil) that has two methods with similar signatures, the only difference being the exception type changes to the subclass:..void dostuff(exception ex) {.    system.out.println(ex.getmessage());.}..void dostuff(newtypeexception ex) {.    system.out.println(""new type exception"");.    system.out.println(ex.getexceptionfield());.    system.out.println(ex.getmessage());.}...in a lot of places in my code, i have a bunch of ..try {.    // code.} catch (exception ex) {.    printutil.dostuff(ex);.}...after adding this new exception type, i want to have this line call the most specific method it can, depending on the argument. however, it seems when i test this, this will only use the method for exception even if the runtime type fits another method (e.g. newtypeexception). is there any way to do this other than replace hundreds of sections of ..try {.    // code.} catch (exception ex) {.    printutil.dostuff(ex);.}...with ..try {.    // code.} catch (newtypeexception ex) {.    printutil.dostuff(ex);.} catch (exception ex) {.    printutil.dostuff(ex);.}...? this seems like something really basic a oop language should be able to do..."
