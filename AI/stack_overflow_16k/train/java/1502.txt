"does it make a copy before adding strings into a collection? list&lt;string&gt; list = new arraylist&lt;string&gt;();.string string = null;.string = ""123"";.list.add(string);.string = ""456"";.list.add(string);..for (string s : list).{.    system.out.println(s);.}...this program outputs:..123.456...which is pretty natural...however, i'm thinking in another way. ""string"" is the reference(pointer) to the actual string object. when executing add(), it just stores the reference. when ""string"" refers to another string object, why the list still keeps the original one? does it make a copy before add()?"
