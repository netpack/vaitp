"designing a process i challenge you :)..i have a process that someone already implemented. i will try to describe the requirements, and i was hoping i could get some input to the ""best way"" to do this.....it's for a financial institution...i have a routing framework that will allow me to recieve files and send requests to other systems. i have a database i can use as i wish but it is only me and my software that has access to this database...the facts...via the routing framework i recieve a file. .each line in this file follows a fixed length format with the identification of a person and an amount (+ lots of other stuff)..this file is 99% of the time im below 100mb ( around 800bytes per line, ie 2,2mb = 2600lines).once a year we have 1-3 gb of data instead..running on an ""appserver"".i can fork subprocesses as i like. (within reason).i can not ensure consistency when running for more than two days. subprocesses may die, connection to db/framework might be lost, files might move.i can not send reliable messages via the framework. the call is synchronus, so i must wait for the answer....it's possible/likely that sending these getperson request will crash my ""process"" when sending lots. ..we're using blank......requirements...i must return a file with all the data +  i must add some more info for somelines. (about 25-50% of the lines : 25.000 at least).this info i can only get by doing a getperson request via the framework to another system. one per person. takes between 200 and 400msec..it must be able to complete within two days...nice to have...checkpointing. if im going to run for a long time i sure would like to be able to restart the process without starting from the top........how would you design this?.i will later add the current ""hack"" and my brief idea..========== current solution ================..it's running on bea/oracle weblogic integration, not by choice but by definition..when the file is received each line is read into a database with ..id, line, status,batchfilename and status 'needs processing'..when all lines is in the database the rows are seperated by mod 4 and a process is started per each quarter of the rows and each line  that needs it is enriched by the getperson call and status is set to 'processed'. (38.0000 in the current batch)...when all 4 quaters of the rows has been processed a writer process startes by select 100 rows from that database, writing them to file and updating their status to 'written'..when all is done the new file is handed back to the routing framework, and a ""im done"" email is sent to the operations crew...the 4 processing processes can/will fail so its possible to restart them with a http get to a servlet on wli."
