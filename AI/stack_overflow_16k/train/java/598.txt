"why is this printing when i have not printed it import blank.util.scanner;.import blank.io.file;.import blank.util.hashmap;.import blank.util.arraylist;.../**. * class that contains helper methods for the review lab. **/.public class review {..    public static void main(string[] args) {.        //system.out.print(sentimentval(""ok""));.        //system.out.println(totalsentiment(""simplereview.txt""));.        system.out.println(starrating(""simplereview.txt""));.        //system.out.println(fakereview(""simplereview.txt""));.    }....../*  public static double totalsentiment(string filename) {.        string review = texttostring(""simplereview.txt"");   ..        int s =  review.indexof("" "");.        double sum = 0;..        //take first word from whole string.        //review.substring(0 --&gt; "" "")..        string firstword = removepunctuation(review.substring(0, review.indexof("" "")));.        sum += sentimentval(firstword);..        while(s != -1) {.            int nextspace = review.indexof("" "", s + 1);.            string word;..            if (nextspace != -1){.                word = removepunctuation(review.substring(s + 1, nextspace));.                sum += sentimentval(word);...            } else {.                word = removepunctuation(review.substring(s + 1));.                sum += sentimentval(word);..            }..            //system.out.println(sentimentval(word));....            s = nextspace; .        }..        return sum;....    } */.....  private static hashmap&lt;string, double&gt; sentiment = new hashmap&lt;string, double&gt;();.  private static arraylist&lt;string&gt; posadjectives = new arraylist&lt;string&gt;();.  private static arraylist&lt;string&gt; negadjectives = new arraylist&lt;string&gt;();...  private static final string space = "" "";..  static{.    try {.      scanner input = new scanner(new file(""cleansentiment.csv""));.      while(input.hasnextline()){.        string[] temp = input.nextline().split("","");.        sentiment.put(temp[0],double.parsedouble(temp[1]));.        //system.out.println(""added ""+ temp[0]+"", ""+temp[1]);.      }.      input.close();.    }.    catch(exception e){.      system.out.println(""error reading or parsing cleansentiment.csv"");.    }...  //read in the positive adjectives in postiveadjectives.txt.     try {.      scanner input = new scanner(new file(""positiveadjectives.txt""));.      while(input.hasnextline()){.        string temp = input.nextline().trim();.        system.out.println(temp);.        posadjectives.add(temp);.      }.      input.close();.    }.    catch(exception e){.      system.out.println(""error reading or parsing postitiveadjectives.txtn"" + e);.    }   ..  //read in the negative adjectives in negativeadjectives.txt.     try {.      scanner input = new scanner(new file(""negativeadjectives.txt""));.      while(input.hasnextline()){.        negadjectives.add(input.nextline().trim());.      }.      input.close();.    }.    catch(exception e){.      system.out.println(""error reading or parsing negativeadjectives.txt"");.    }   .  }..  /** .   * returns a string containing all of the text in filename (including punctuation), .   * with words separated by a single space .   */.  public static string texttostring( string filename ).  {  .    string temp = """";.    try {.      scanner input = new scanner(new file(filename));..      //add 'words' in the file to the string, separated by a single space.      while(input.hasnext()){.        temp = temp + input.next() + "" "";.      }.      input.close();..    }.    catch(exception e){.      system.out.println(""unable to locate "" + filename);.    }.    //make sure to remove any additional space that may have been added at the end of the . string..    return temp.trim();.  }..  /**.   * @returns the sentiment value of word as a number between -1 (very negative) to 1 (very . positive sentiment) .   */.  public static double sentimentval( string word ).  {.    try.    {.      return sentiment.get(word.tolowercase());.    }.    catch(exception e).    {.      return 0;.    }.  }..  /**.   * returns the ending punctuation of a string, or the empty string if there is none .   */.  public static string getpunctuation( string word ).  { .    string punc = """";.    for(int i=word.length()-1; i &gt;= 0; i--){.      if(!character.isletterordigit(word.charat(i))){.        punc = punc + word.charat(i);.      } else {.        return punc;.      }.    }.    return punc;.  }..    /**.   * returns the word after removing any beginning or ending punctuation.   */.  public static string removepunctuation( string word ).  {.    while(word.length() &gt; 0 &amp;&amp; !character.isalphabetic(word.charat(0))).    {.      word = word.substring(1);.    }.    while(word.length() &gt; 0 &amp;&amp; !character.isalphabetic(word.charat(word.length()-1))).    {.      word = word.substring(0, word.length()-1);.    }..    return word;.  }..  /** .   * randomly picks a positive adjective from the positiveadjectives.txt file and returns it..   */.  public static string randompositiveadj().  {.    int index = (int)(math.random() * posadjectives.size());.    return posadjectives.get(index);.  }..  /** .   * randomly picks a negative adjective from the negativeadjectives.txt file and returns it..   */.  public static string randomnegativeadj().  {.    int index = (int)(math.random() * negadjectives.size());.    return negadjectives.get(index);..  }..  /** .   * randomly picks a positive or negative adjective and returns it..   */.  public static string randomadjective().  {.    boolean positive = math.random() &lt; .5;.    if(positive){.      return randompositiveadj();.    } else {.      return randomnegativeadj();.    }.  }.....  /** activity 2 starrating method.  write the starrating method here which returns the number of stars for the review based on .enter code here its totalsentiment.. * @param filename .*/....public static int starrating(string filename){..    // determine number of stars between 0 and 4 based on totalsentiment value ..     double totalsentiment = totalsentiment(""simplereview.txt"");..     // write if statements here.     if (totalsentiment &lt; 15 &amp;&amp; totalsentiment &gt;= 10) {.         return 4;.     } else if(totalsentiment &lt; 10 &amp;&amp; totalsentiment &gt;= 5) {.         return 3;.     } else if(totalsentiment &lt; 5 &amp;&amp; totalsentiment &gt;= 0) {.         return 2;.     } else if(totalsentiment &lt; 0) {.         return 1;.     } else {.         return 0;.     }...}..    public static double totalsentiment(string simplereview) {.        string review = texttostring(""simplereview.txt"");   .        int s =  review.indexof("" "");.        double sum = 0;..        //take first word from whole string.        //review.substring(0 --&gt; "" "")..        string firstword = removepunctuation(review.substring(0, review.indexof("" "")));.        sum += sentimentval(firstword);..        while(s != -1) {.            int nextspace = review.indexof("" "", s + 1);.            string word;..            if (nextspace != -1){.                word = removepunctuation(review.substring(s + 1, nextspace));.                sum += sentimentval(word);...            } else {.                word = removepunctuation(review.substring(s + 1));.                sum += sentimentval(word);..            }..            s = nextspace; .        }..        return sum;...    }..}...while i am running my code, it will print a list of my positiveadjectives. i am not even running that code, so i am confused as to why this is happening...can anyone help please :)..i am currently working on a cs project which is ultimately taking a review on a .txt file then the adjectives to random one selected from a random positive or random negative adjective. this is shown in the code, but what is not is the .txt file for the review"
