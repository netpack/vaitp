"solving a diophantine equation i am working on a problem in number theory which requires that i solve a rather complicated diophantine equation. let's call this equation f(r1, r2, ..., rk).  the number of variables in the equation is itself variable.  this is where i am getting tripped up on the programming...i wish to write a blank method whose signature would look like this :...  int[] getexponents( int n, int k, int max );...here, the argument k is equal to the number of arguments in our diophantine equation f(r1, ... , rk). ..this method should evaluate f(r1, ... , rk) for all combinations of r1, ..., rk such that 0 &lt; r1 &lt; r2 &lt; ... &lt; rk &lt; max, where max is the agrument given in our method signature...if we find r 's such that n = f(r1, ... , rk) then we wish to return the r1, ... , rk as an integer array. (the value n is given in our method signature.)..i suspect that this method will use recursion.  unfortunately, either my programming skills or my patience are not strong enough to find it...i would be grateful to anyone able to outline such a method for me."
