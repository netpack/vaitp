"lowest common ancestor recursively in blank i've found a solution to the lowest common ancestor problem in blank in leetcode. the problem stated otherwise is, find the lowest common ancestor of p and q with the bst rooted at root..here's my code...public treenode lowestcommonancestor(treenode root, treenode p, treenode q) {.        if(root == null || root == p || root == q) return root;.        treenode left = lowestcommonancestor(root.left, p, q);.        treenode right = lowestcommonancestor(root.right, p, q);.        return left != null &amp;&amp; right != null ? root : left == null?right :left;..    }...while this works for most cases, if the tree is something like this and the question is lowestcommonancestor(1, 2, 3) or lowest common ancestor of 2 and 3 where root == 1;..1 -&gt; 2 -&gt; 3...then to my mind the answer this solution will provide is 2, .this is because after the recursion..left = null.right = 2...while the actual answer is 1...however this solution works. can someone help me understand what am i getting wrong here."
