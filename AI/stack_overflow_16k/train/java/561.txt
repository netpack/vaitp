"i can't get the object in my array list in my code, i have a super class called game and its sub class tower. tower also has its sub class called catapult. .the catapult subclass looks like this:..public class catapult extends tower {.    public catapult(){.        super(5,3);.    }.}...it calls tower constructor with constant integer values 5 and 3. then, its superclass tower looks like this:..public class tower extends game {.    private int damage;.    private int timestep;.    private int position;.    private boolean willfire;..   public tower(int damage, int timestep){.       super.addtower(damage,timestep);.   }.   public tower(int damage, int timestep, int position,boolean willfire){.       this.damage = damage;.       this.timestep = timestep;.       this.position = position;.       this.willfire = willfire;.   }.   public void getdamage(){.       super.printdamage();.   }..}...so now, having values for the damage and timestep (5 and 3), tower calls its super constructor (game):..import blank.util.arraylist;.public class game {.    private arraylist&lt;enemy&gt; enemies = new arraylist&lt;enemy&gt;();.    private arraylist&lt;tower&gt; towers = new arraylist&lt;tower&gt;();.    private int corridorlength;.    private int currentposition = 0;..    public game(){}..    public game(int corridorlength){.        this.corridorlength = corridorlength;.    }..    public void addtower(int damage,int timestep){.       this.towers.add(new tower(damage,timestep,this.currentposition,true));.    // add tower with current position corrdor length.        system.out.println(""tower added in addtower!"");}..    public void printdamage(){.        system.out.println(this.towers.get(this.currentposition)); // how to get the damage item?.    }. }...so the object tower with its values is being stored in the array tower (at least i assume so). so, having a non empty array called towers with at least size 1, i am facing some problems here..first: when i call tower.getdamage() method, it eventually calls the method in the game class which just prints the object tower at index 0. but when i try to do it other way round, like printing the object inside the game class like this(calling straight from the game class, instead of calling through its tower subclass):..public void getdamage(){.    system.out.println(this.towers.get(this.currentposition));.}...it throws an out of range array exception, which i don't get, as the array towers should have an object stored at index 0. ..second: how can i get the actual integer inside the object (tower) at index 0? so, i can't do like this:..this.towers.get(0).damage"
