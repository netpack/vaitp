"terminate line without readline() method blank as my previous question i used read() from blank.io.fileinputstream and read(); provide output in same line without line terminated. after that i used readline() from blank.io.bufferedreader and got output in different line with line terminated. i explored readline() method and i got this line from blank api docs...  reads a line of text. a line is considered to be terminated by any one.  of a line feed ('n'), a carriage return ('r'), or a carriage return.  followed immediately by a linefeed....after reading above quote from blank docs, i modify my read(); method program to terminate line without readline() method. but failed, ..here is the modified code.(that i want to use for line terminated)..import blank.io.fileinputstream;.import blank.io.fileoutputstream;.import blank.io.ioexception;..public class boxdemo {.    public static void main(string[] args) throws ioexception {..        fileinputstream in = null;.        fileoutputstream out = null;..        try {.            in = new fileinputstream(""xanadu.txt"");.            out = new fileoutputstream(""outagain.txt"");.            int c;..            while ((c = in.read()) != -1) {.                if((char)c=='r' || (char)c=='n') {.                    out.write('n');.                } else {.                    out.write(c);.                }.            }.        } finally {.            if (in != null) {.                in.close();.            }.            if (out != null) {.                out.close();.            }.        }.    }.}...here is readline(); method code that give output with line terminated...import blank.io.filereader;.import blank.io.filewriter;.import blank.io.bufferedreader;.import blank.io.printwriter;.import blank.io.ioexception;..public class boxdemo {.    public static void main(string[] args) throws ioexception {..        bufferedreader inputstream = null;.        printwriter outputstream = null;..        try {.            inputstream = new bufferedreader(new filereader(""xanadu.txt""));.            outputstream = new printwriter(new filewriter(""characteroutput.txt""));..            string l;.            while ((l = inputstream.readline()) != null) {.                outputstream.println(l);.            }.        } finally {.            if (inputstream != null) {.                inputstream.close();.            }.            if (outputstream != null) {.                outputstream.close();.            }.        }.    }.}"
