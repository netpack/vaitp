"finding the winner, losers and tied players, based on score given a list of players, i'm trying to determine which player has the highest score (the winner), which players tied (if any) and then deduce that the remained of the players are the losers of a game. ..i've tried implementing a player comparator to sort each of the players by score from highest to lowest. this much will work for finding the winner and losers, sure. but i'm lost on where to go from here. ..my first thought was to iterate over the list of players and do some kind of bubble sort algorithm, but i honestly don't know. i was also contemplating some recursive function...here's what i've got so far in my endgame() function: ..    private void endgame(){.        this.gamerunning = false;.        list&lt;wamplayer&gt; scoretable = new arraylist&lt;&gt;(this.players.keyset());.        wamplayer winner;.        list&lt;wamplayer&gt; tiedplayers = new arraylist&lt;&gt;();.        list&lt;wamplayer&gt; losers = new arraylist&lt;&gt;();.        scoretable.sort(new playerscorecomparator());.        for (int i = 0 ; i &lt; scoretable.size(); i++){.            if (i == scoretable.size() - 1){.                losers.add(scoretable.get(i));.                break;.            }..            if (scoretable.get(i).getscore() == scoretable.get(i + 1).getscore()){.                for (int j = i + 1; j &lt; scoretable.size(); j++){..                }.            }.            /*.            need to set the winner and tied players somewhere here.....             */.        }.    }...here are two examples of what output would be like given a list of players: player1, player2, player3 and player4. the players are sorted by score...example one: .player1: 5, player2: 4, player3: 4, player4: 3..winner: player1.tied: player2, player3.loser: player4..example two:.player1: 5, player2: 5, player3: 5, player4: 2.winner: null.tied: player1, player2, player3.loser: player4..(sorry player4)"
