"blank - converted char array to byte array - lengths don't match i have some code which converts from a char array to a byte array (without creating any intermediate strings and that's a requirement) and i'm ending up with some extra bytes at the end.  here is some test code which illustrates the problem:..string s = ""tomjsawyer"";..system.out.println(""original string length = "" + s.length( ));..char[] caorig = s.tochararray( );..system.out.println(""original char array length = "" + caorig.length);..byte[] ba1 = charset.forname(""utf-8"").encode(charbuffer.wrap(caorig)).array();..system.out.println(""byte array converted from char array length = "" + ba1.length);..byte[] ba2 = s.tostring( ).getbytes(""utf-8"");..system.out.println(""byte array converted from string length = "" + ba2.length);...and here is the output running on jdk160_24 on winodows.  ..original string length = 10.original char array length = 10.byte array converted from char array length = 11.byte array converted from string length = 10...the extra byte that results from converting from a char array using the charset is zero valued.  as the input string gets longer, the number of zero bytes appended to the end of the byte array grows.  i expect that this has something to do with encoding but it seems to be that i'm specifying utf-8 both places so i don't know why that would be...if anyone could explain to me what's going on or otherwise point me in the right direction, i'd really appreciate it.  thanks in advance."
