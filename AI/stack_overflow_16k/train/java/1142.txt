"type variable with class and interface: inheritence problems my project uses an external library which provides classes a and b (where b extends a). i want to add a few methods to a, but i want them to be in b too, so i have created an interface custom and created the classes:...customa extends a implements custom.customb extends b implements custom...i now want to uses those 2 new classes interchangeably in class c, as both attributes and method arguments. i have found this question: declare an attribute that both extends a class and implements an interface, so i have tried the following code:..public class c&lt;t extends a &amp; custom&gt;{.   private t attr1;.   private t attr2;.   public void createattrs() {.       attr1 = new customa();.       attr2 = new customb();.   }.   public void setattr1(t attr1) {.       this.attr1 = attr1;.   }.   public void setattr2(t attr2) {.       this.attr2 = attr2;.   }.}...however this code did not compile because of ""incompatible types"" in the createattrs() method. but customa and customb both extend a (directly or indirectly) and implement custom, so it matches the pattern of the type variable t...how can i make this code work?..edit: what i'm really looking for is a way to use customa and customb interchangeably, in the same fashion i could originally store both an a and a b object in a variable typed a."
