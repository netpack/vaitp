"using buffered reader does not give runtime error but using scanner gives on online judge? i was doing this question. i submitted the following code that uses a scanner to read input...import blank.io.*;.import blank.math.*;.import blank.util.*;.import blank.lang.*;..class main{ ..public static void main(string[] args)throws blank.lang.exception{.    scanner cin = new scanner(system.in);.    treemap&lt;string, integer&gt; map = new treemap&lt;string, integer&gt;();.    int trees = 0;.    while(true){.        string tree = cin.nextline();.        if(tree==null){.            break;.        }.        trees++;.        if(map.containskey(tree)){.            map.put(tree, map.get(tree)+1);.        }else{.            map.put(tree, 1);.        }.    }.    for(string key : map.keyset()){..    }..    iterator&lt;string&gt; itr = map.keyset().iterator();.    while(itr.hasnext()){.        string tree = itr.next();.        system.out.print(tree + "" "" );.        double percent = (double)map.get(tree)/trees*100;.        system.out.format(""%.4fn"", percent);.    }..}.}...but i get a runtime error. but when i submit the same code but this time i use a buffered reader, then my answer gets accepted. is this a problem with the judge or am i missing some feature of blank's input output routines. ..should i use a buffered reader or a scanner to read data more robustly?..import blank.io.*;.import blank.math.*;.import blank.util.*;.import blank.lang.*;..class main{ ..public static void main(string[] args)throws blank.lang.exception{.    bufferedreader br = new bufferedreader(new inputstreamreader(system.in));.    treemap&lt;string, integer&gt; map = new treemap&lt;string, integer&gt;();.    int trees = 0;.    while(true){.        string tree = br.readline();.        if(tree==null){.            break;.        }.        trees++;.        if(map.containskey(tree)){.            map.put(tree, map.get(tree)+1);.        }else{.            map.put(tree, 1);.        }.    }.    for(string key : map.keyset()){..    }..    iterator&lt;string&gt; itr = map.keyset().iterator();.    while(itr.hasnext()){.        string tree = itr.next();.        system.out.print(tree + "" "" );.        double percent = (double)map.get(tree)/trees*100;.        system.out.format(""%.4fn"", percent);.    }..}.}"
