"how to track changes to an object graph? i am working on some code that i want to detect when something in the object has changed.  one of the easiest ways to track changes is to keep an old copy of the object around.  however, it looks like getting a copy of the deep graph may be difficult.  here's what i tried:....public class old{.    protected old old;.    protected list stuff;..    //needed for junit.    public old(){.    }..    public old(list stuff){.        this.stuff=stuff;.        old=this;.    }..    public void add(){.        stuff.add(2);.    }..    public void match(){.        system.out.printf(""old:%dnnew:%dn"",old.getstuff().size(),stuff.size());.    }..    public list getstuff(){.        return new arraylist(stuff);.    }..    @test.    public void testold(){.        list list=new arraylist();.        list.add(1);.        old thing=new old(list);.        thing.add();.        thing.match();.    }.}....the output:...old:2.new:2...so, it appears that by default old=this does not create a deep copy.  all i really want is to track changes to that list and potentially a graph of objects.  what are some other simple options?"
