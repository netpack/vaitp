"efficiently compare 2 lists to replace and order i have 2 list containing some objects (fruit class). i am using a 3rd list to add these elements based on following 2 criteria...i want every object in the 1st list added to 3rd list. but if i have a matching object in the 2nd list (matching based on id and ischecked), i want to add the object from the 2nd list to the 3rd list and ignore the one in 1st list...if i did the switch mentioned on point one, i want to move that object up to the first element of the 3rd list...i have it working with following code. but i find it very inefficient. is there a better way around it?..bear in mind i have no control over the second list, but the first list is coming from a rest endpoint and i am currently capturing it as a list. unsure if i should have opted for a map. please advice...example:..in the following example, expected list output is [f2, f5, f1, f3, f4] (based on name)...it is cos i have all the elements from the first list. f2 and f5 went in front of the order as they came from second list (they matched elements in first list and had ischecked set to true)...import lombok.*;..import blank.util.arraylist;.import blank.util.arrays;.import blank.util.list;..public class app {.    public static void main(string[] args) {..        fruit fruit1 = new fruit(""1"", ""f1"", false);.        fruit fruit2 = new fruit(""2"", ""f2"", false);.        fruit fruit3 = new fruit(""3"", ""f3"", false);.        fruit fruit4 = new fruit(""4"", ""f4"", false);.        fruit fruit5 = new fruit(""5"", ""f5"", false);..        list&lt;fruit&gt; firstlist = arrays.aslist(fruit1, fruit2, fruit3, fruit4, fruit5);..        fruit fruit6 = new fruit(""2"", ""f2"", true);.        fruit fruit7 = new fruit(""7"", ""f7"", false);.        fruit fruit8 = new fruit(""5"", ""f5"", true);.        fruit fruit9 = new fruit(""9"", ""f9"", false);.        fruit fruit10 = new fruit(""10"", ""f10"", false);..        list&lt;fruit&gt; secondlist = arrays.aslist(fruit6, fruit7, fruit8, fruit9, fruit10);..        list&lt;fruit&gt; finallist = new arraylist&lt;&gt;();..        // expected list = [f2, f5, f1, f3, f4]..        // this loop is checking and adding objects to finallist..        // must match the first list and ischecked..        // in this case, only f6 and f8 matches the first list (id match) and is also 'checked'..        for (fruit first : firstlist){.            for (fruit second : secondlist){.                if(first.getid().equals(second.getid()) &amp;&amp; second.ischecked()){.                    finallist.add(second);.                    break;.                }.            }.        }..        // not done yet. still need to loop and add back the elements from the first list.        // which were not added in the above loop.        boolean addedfirst = false;.        outer:.        for(fruit first : firstlist){.            for(fruit finalfruit : finallist){.                if(first.getid().equals(finalfruit.getid())){.                   continue outer;.                }.            }.            finallist.add(first);.        }..        for(fruit fruit : finallist){.            system.out.println(fruit);.        }.    }.}..@getter.@setter.@tostring.class fruit{.    private string id;.    private string name;.    private boolean ischecked;..    fruit(string id, string name, boolean ischecked) {.        this.id = id;.        this.name = name;.        this.ischecked = ischecked;.    }.}"
