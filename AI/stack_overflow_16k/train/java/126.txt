"blank set color to jtable after button press i have a jtable that has a delete button, when i select a row and clicked to delete button i want the set that row to green color. ..however when i click away, the row color did not remain there and which every row i selected become green instead of default blue..public class table extends blankx.swing.jframe {..    defaulttablemodel model;.    private boolean btnclicked = false;..    public table() {.        initcomponents();.        model = (defaulttablemodel) tbltable.getmodel();..    }..    public class customtablecellrenderer extends defaulttablecellrenderer {..        public component gettablecellrenderercomponent(jtable table, object obj, boolean isselected, boolean hasfocus, int row, int column) {..            component cell = super.gettablecellrenderercomponent(table, obj, isselected, hasfocus, row, column);...            if (isselected) {..                cell.setbackground(getbackground());                .                string type = (string) string.valueof(model.getvalueat(tbltable.getselectedrow(), 3));.                if ((""deleted"").equals(type)) {.                    cell.setbackground(color.green);.                }..            }.            return cell;..        }.    }..    @suppresswarnings(""unchecked"").    // &lt;editor-fold defaultstate=""collapsed"" desc=""generated code""&gt;                          .    private void initcomponents() {..        txtcol1 = new blankx.swing.jtextfield();.        txtcol2 = new blankx.swing.jtextfield();.        txtcol3 = new blankx.swing.jtextfield();.        btnadd = new blankx.swing.jbutton();.        jscrollpane1 = new blankx.swing.jscrollpane();.        tbltable = new blankx.swing.jtable();.        btnedit = new blankx.swing.jbutton();.        btndelete = new blankx.swing.jbutton();..        setdefaultcloseoperation(blankx.swing.windowconstants.exit_on_close);..        txtcol1.settext(""jtextfield1"");..        txtcol2.settext(""jtextfield2"");..        txtcol3.settext(""jtextfield3"");..        btnadd.settext(""add"");.        btnadd.addactionlistener(new blank.awt.event.actionlistener() {.            public void actionperformed(blank.awt.event.actionevent evt) {.                btnaddactionperformed(evt);.            }.        });..        tbltable.setmodel(new blankx.swing.table.defaulttablemodel(.            new object [][] {..            },.            new string [] {.                ""col1"", ""col2"", ""col3"", ""col4"".            }.        ) {.            class[] types = new class [] {.                blank.lang.object.class, blank.lang.object.class, blank.lang.object.class, blank.lang.string.class.            };..            public class getcolumnclass(int columnindex) {.                return types [columnindex];.            }.        });.        tbltable.addmouselistener(new blank.awt.event.mouseadapter() {.            public void mouseclicked(blank.awt.event.mouseevent evt) {.                tbltablemouseclicked(evt);.            }.        });.        jscrollpane1.setviewportview(tbltable);..        btnedit.settext(""edit"");.        btnedit.addactionlistener(new blank.awt.event.actionlistener() {.            public void actionperformed(blank.awt.event.actionevent evt) {.                btneditactionperformed(evt);.            }.        });..        btndelete.settext(""delete"");.        btndelete.addactionlistener(new blank.awt.event.actionlistener() {.            public void actionperformed(blank.awt.event.actionevent evt) {.                btndeleteactionperformed(evt);.            }.        });..        blankx.swing.grouplayout layout = new blankx.swing.grouplayout(getcontentpane());.        getcontentpane().setlayout(layout);.        layout.sethorizontalgroup(.            layout.createparallelgroup(blankx.swing.grouplayout.alignment.leading).            .addgroup(layout.createsequentialgroup().                .addgroup(layout.createparallelgroup(blankx.swing.grouplayout.alignment.leading).                    .addgroup(layout.createsequentialgroup().                        .addgap(92, 92, 92).                        .addcomponent(txtcol1, blankx.swing.grouplayout.preferred_size, blankx.swing.grouplayout.default_size, blankx.swing.grouplayout.preferred_size).                        .addgap(18, 18, 18).                        .addcomponent(txtcol2, blankx.swing.grouplayout.preferred_size, blankx.swing.grouplayout.default_size, blankx.swing.grouplayout.preferred_size).                        .addpreferredgap(blankx.swing.layoutstyle.componentplacement.unrelated).                        .addcomponent(txtcol3, blankx.swing.grouplayout.preferred_size, blankx.swing.grouplayout.default_size, blankx.swing.grouplayout.preferred_size)).                    .addgroup(layout.createsequentialgroup().                        .addgap(87, 87, 87).                        .addgroup(layout.createparallelgroup(blankx.swing.grouplayout.alignment.leading).                            .addcomponent(jscrollpane1, blankx.swing.grouplayout.preferred_size, 452, blankx.swing.grouplayout.preferred_size).                            .addgroup(layout.createsequentialgroup().                                .addcomponent(btnadd).                                .addpreferredgap(blankx.swing.layoutstyle.componentplacement.related).                                .addcomponent(btnedit).                                .addpreferredgap(blankx.swing.layoutstyle.componentplacement.unrelated).                                .addcomponent(btndelete))))).                .addcontainergap(283, short.max_value)).        );.        layout.setverticalgroup(.            layout.createparallelgroup(blankx.swing.grouplayout.alignment.leading).            .addgroup(layout.createsequentialgroup().                .addgap(32, 32, 32).                .addgroup(layout.createparallelgroup(blankx.swing.grouplayout.alignment.baseline).                    .addcomponent(txtcol1, blankx.swing.grouplayout.preferred_size, blankx.swing.grouplayout.default_size, blankx.swing.grouplayout.preferred_size).                    .addcomponent(txtcol2, blankx.swing.grouplayout.preferred_size, blankx.swing.grouplayout.default_size, blankx.swing.grouplayout.preferred_size).                    .addcomponent(txtcol3, blankx.swing.grouplayout.preferred_size, blankx.swing.grouplayout.default_size, blankx.swing.grouplayout.preferred_size)).                .addpreferredgap(blankx.swing.layoutstyle.componentplacement.unrelated).                .addgroup(layout.createparallelgroup(blankx.swing.grouplayout.alignment.baseline).                    .addcomponent(btnadd).                    .addcomponent(btnedit).                    .addcomponent(btndelete)).                .addpreferredgap(blankx.swing.layoutstyle.componentplacement.unrelated).                .addcomponent(jscrollpane1, blankx.swing.grouplayout.preferred_size, 273, blankx.swing.grouplayout.preferred_size).                .addcontainergap(95, short.max_value)).        );..        pack();.    }// &lt;/editor-fold&gt;                        ..    private void btnaddactionperformed(blank.awt.event.actionevent evt) {                                       ..        string chkcol = ""notdeleted"";.        model.insertrow(model.getrowcount(), new object[]{txtcol1.gettext(), txtcol2.gettext(), txtcol3.gettext(), chkcol});.    }                                      ..    private void tbltablemouseclicked(blank.awt.event.mouseevent evt) {                                      .        txtcol1.settext(string.valueof(model.getvalueat(tbltable.getselectedrow(), 0)));.        txtcol2.settext(string.valueof(model.getvalueat(tbltable.getselectedrow(), 1)));.        txtcol3.settext(string.valueof(model.getvalueat(tbltable.getselectedrow(), 2)));.        int rowindex = tbltable.getselectedrow();.        system.out.println(""rowindex "" + rowindex);.    }                                     ..    private void btneditactionperformed(blank.awt.event.actionevent evt) {                                        .        model.setvalueat(txtcol1.gettext(), tbltable.getselectedrow(), 0);.        model.setvalueat(txtcol2.gettext(), tbltable.getselectedrow(), 1);.        model.setvalueat(txtcol3.gettext(), tbltable.getselectedrow(), 2);.    }                                       .    tablecolumn tcol;.    private void btndeleteactionperformed(blank.awt.event.actionevent evt) {                                          .        model.setvalueat(""deleted"", tbltable.getselectedrow(), 3);..        if (string.valueof(model.getvalueat(tbltable.getselectedrow(), 3)).equals(""deleted"")) {.            tcol = tbltable.getcolumnmodel().getcolumn(0);.            tcol.setcellrenderer(new customtablecellrenderer());..            tcol = tbltable.getcolumnmodel().getcolumn(1);.            tcol.setcellrenderer(new customtablecellrenderer());..            tcol = tbltable.getcolumnmodel().getcolumn(2);.            tcol.setcellrenderer(new customtablecellrenderer());..            tcol = tbltable.getcolumnmodel().getcolumn(3);.            tcol.setcellrenderer(new customtablecellrenderer());.        }...    }                                         ..    /**.     * @param args the command line arguments.     */.    public static void main(string args[]) {.        /* set the nimbus look and feel */.        //&lt;editor-fold defaultstate=""collapsed"" desc="" look and feel setting code (optional) ""&gt;.        /* if nimbus (introduced in blank se 6) is not available, stay with the default look and feel..         * for details see http://download.oracle.com/blankse/tutorial/uiswing/lookandfeel/plaf.html .         */.        try {.            for (blankx.swing.uimanager.lookandfeelinfo info : blankx.swing.uimanager.getinstalledlookandfeels()) {.                if (""nimbus"".equals(info.getname())) {.                    blankx.swing.uimanager.setlookandfeel(info.getclassname());.                    break;.                }.            }.        } catch (classnotfoundexception ex) {.            blank.util.logging.logger.getlogger(table.class.getname()).log(blank.util.logging.level.severe, null, ex);.        } catch (instantiationexception ex) {.            blank.util.logging.logger.getlogger(table.class.getname()).log(blank.util.logging.level.severe, null, ex);.        } catch (illegalaccessexception ex) {.            blank.util.logging.logger.getlogger(table.class.getname()).log(blank.util.logging.level.severe, null, ex);.        } catch (blankx.swing.unsupportedlookandfeelexception ex) {.            blank.util.logging.logger.getlogger(table.class.getname()).log(blank.util.logging.level.severe, null, ex);.        }.        //&lt;/editor-fold&gt;..        /* create and display the form */.        blank.awt.eventqueue.invokelater(new runnable() {.            public void run() {.                new table().setvisible(true);.            }.        });.    }..    // variables declaration - do not modify                     .    private blankx.swing.jbutton btnadd;.    private blankx.swing.jbutton btndelete;.    private blankx.swing.jbutton btnedit;.    private blankx.swing.jscrollpane jscrollpane1;.    private blankx.swing.jtable tbltable;.    private blankx.swing.jtextfield txtcol1;.    private blankx.swing.jtextfield txtcol2;.    private blankx.swing.jtextfield txtcol3;.    // end of variables declaration                   .}...below is the image that showcase my issue."
