"why am i getting ""missing return statement"" error in blank even though i have return statement and exception in thread main error in 2nd class? for example, i am getting the error here- this is just a snippet. i got the error 3 times in 3 different operators...   public boolean delete(string name) {.      for (int i = 0; i &lt; directory.length; i++) {.         if (directory[i].equalsignorecase(name)) {.            directory[i] = null;.            return true;.         }   .         else.            return false;.      }.   }...i also have the same error here:..   public boolean add(string name) {.      if (directory.length == 1024).         return false;.      for (int i = 0; i &lt; directory.length; i++) {.         if (directory[i].equalsignorecase(name)).            return false;.         else.            directory[directorysize++] = name;.            return true;.      }.   }          ...and then in my second class (the user interface portion), i keep getting this error: exception in thread ""main"" blank.lang.noclassdeffounderror: directory..here is the entire code for that class: ..import blank.io.*;.import blank.util.*;.public class directorywithobjectdesign {.   public static void main(string[] args) throws ioexception {.   string directorydatafile  = ""directory.txt"";.   directory d = new directory(directorydatafile);.   scanner stdin = new scanner(system.in);.   system.out.println(""directory server is ready!"");.   system.out.println(""format: command name"");.   system.out.println(""enter ^z to end"");.   while (stdin.hasnext()) {.      string command = stdin.next();.      string name = stdin.next();.      if (command.equalsignorecase(""find"")) {.         if (d.indirectory(name)).            system.out.println(name + "" is in the directory"");.         else .            system.out.println(name + "" is not in the directory"");.      }.      else if (command.equalsignorecase(""add"")) {.         if (d.add(name)).            system.out.println(name + "" added"");.         else .            system.out.println(name + "" cannot add! "" + ""no more space or already in directory"");.      }.      else if (command.equalsignorecase(""delete"")) {.         if (d.delete(name)).            system.out.println(name + "" deleted"");.         else.            system.out.println(name + "" not in directory"");.      }.      else {.         system.out.println(""bad command, try again"");.      }.   }.   }.}   ...and here is the code for my directory class:..import blank.util.*;.import blank.io.*;.public class directory {.   //public static void main(string[] args) {.   final int maxdirectorysize = 1024;.   string directory[] = new string[maxdirectorysize];.   int directorysize = 0;.   file directoryfile = null;.   scanner directorydatain = null;..   public directory(string directoryfilename) {.      directoryfile = new file(directoryfilename);.      try {.         directorydatain = new scanner(directoryfile);.      }.      catch (filenotfoundexception e) {.         system.out.println(""file is not found, exiting!"" + directoryfilename);.         system.exit(0);.      }.      while (directorydatain.hasnext()) {.         directory[directorysize++] = directorydatain.nextline();.      }.   }.   public boolean indirectory(string name) {.      for (int i = 0; i &lt; directory.length; i++) {.         if (directory[i].equalsignorecase(name)) .            return true;.         else .            return false;.      }.   }.   public boolean add(string name) {.      if (directory.length == 1024).         return false;.      for (int i = 0; i &lt; directory.length; i++) {.         if (directory[i].equalsignorecase(name)).            return false;.         else.            directory[directorysize++] = name;.            return true;.      }.   }          ..   public boolean delete(string name) {.      for (int i = 0; i &lt; directory.length; i++) {.         if (directory[i].equalsignorecase(name)) {.            directory[i] = null;.            return true;.         }   .         else.            return false;.      }.   }..   public void closedirectory() {.      directorydatain.close();.      printstream directorydataout = null;.      try {.          directorydataout = new printstream(directoryfile);.      }.      catch (filenotfoundexception e) {.         system.out.printf(""file %s not found, exiting!"", directoryfile);.         system.exit(0);.      }.      string originaldirectory[] = {""mike"",""jim"",""barry"",""cristian"",""vincent"",""chengjun"",""susan"",""ng"",""serena""};.      if (originaldirectory == directory).         system.exit(0);.      else.         for (int i = 0; i &lt; directorysize; i++).            directorydataout.println(directory[i]);.         directorydataout.close();.   }.}"
