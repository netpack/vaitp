"identifying the caller method and arguments without reflection let's say i have a class with a method like below..public class parent {..    public boolean isvalidurl() {.        system.out.println(""print the name of the caller method and the method's arguements here"");.        //pls ignore the return true below. just an eg..        return true;.    }.}...i then have another method that calls the isvalidurl in the parent class..public class child {.    parent parent = new parent();..    public void verifyurl(string url) {.        parent.isvalidurl();.    }.}...now in the parent class the method isvalidurl() should print the caller method which is verifyurl() and its arguments. ..is that possible without reflection? are there any design pattern that needs to be followed?..edit:.i want to do this because i want to implement the idea on  a logger. basically, there are many other methods like verifyurl() method  accepting different parameters. i'd like to have a common logger to print the it on the console when any methods in the `child' class is called"
