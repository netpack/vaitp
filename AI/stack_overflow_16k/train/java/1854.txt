"is a new object instantiated every time this loop runs? i was taking a blank test today and i got this weird question and i feel like i am right, but some of my classmates are saying another answer is right. there was a basic class, a default constructor that initialized the instances, and some methods. in the main class, there was some code like this (not exact because i do not remember it. let's say the written class name was ""tester.""..public class testing {.    public static void main(string[] args) {.        int x = 0;.        tester t = new tester ();.        tester a;..        do {.            new tester (); .            x++;.        }while (x &lt; 10);    .    }    .}...and the question was, how many objects are instantiated once the program is completely executed. ..my logic was, there was one object instantiated outside the loop. inside the loop, there was another object, but each time the loop ran, that one object just got re-instantiated. the loop didn't create a new object. so, i said only two objects would be have been instantiated after the program was done running, but some of my classmates said it was 11. technically, what is correct?"
