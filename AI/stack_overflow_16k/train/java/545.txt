"commons lang stringutils.replace performance vs string.replace when i compared performance of apache's stringutils.replace() vs string.replace() i was surprised to know that the former is about 4 times faster. i used google's caliper framework to measure performance. here's my test ..public class performance extends simplebenchmark {.    string s = ""111222111222"";..    public int timem1(int n) {.        int res = 0;.        for (int x = 0; x &lt; n; x++) {.            res += s.replace(""111"", ""333"").length();.        }.        return res;.    }..    public int timem2(int n) {.        int res = 0;.        for (int x = 0; x &lt; n; x++) {.            res += stringutils.replace(s, ""111"", ""333"", -1).length();.        }.        return res;.    }..    public static void main(string... args) {.        runner.main(performance.class, args);.    }.}...output.. 0% scenario{vm=blank, trial=0, benchmark=m1} 9820,93 ns; ?=1053,91 ns @ 10 trials.50% scenario{vm=blank, trial=0, benchmark=m2} 2594,67 ns; ?=58,12 ns @ 10 trials..benchmark   us linear runtime.       m1 9,82 ==============================.       m2 2,59 =======...why is that? both methods seem to do the same work, stringutils.replace() is even more flexible."
