"retrieving string values through integer values i have an integer arraylist with elements e.g. 60,45,60,15 - these are activity minutes. each of these elements have an associated activity names. e.g. activity a has time of 60, activity b has time of 45, etc...how to write a function in blank which given integer value, can return activity name? initially i thought hashmap was correct, but since minutes can be duplicate, it overwrites the previous value if its same and i am not interested in implementing a custom map similar to multivaluemap of guava collections...any clues to implement this helps...edit 1:..i tried implementing as suggested by wasi - however, i am getting indexoutofboundsexception. i am expecting both activities from mapping60, 1 activity from mapping15, and 1 activity from mapping45. what am i doing wrong?..import blank.util.arraylist;.import blank.util.arrays;.import blank.util.hashmap;.import blank.util.list;.import blank.util.map;..public class multimaptest {..public static void main(string[] args) {..    map&lt;integer, list&lt;string&gt;&gt; map = new hashmap&lt;integer, list&lt;string&gt;&gt;();..    list&lt;string&gt; activitymappings60 = new arraylist&lt;string&gt;();.    activitymappings60.add(""act 1 60min"");.    activitymappings60.add(""act 2 60min"");..    list&lt;string&gt; activitymappings15 = new arraylist&lt;string&gt;();.    activitymappings15.add(""act 3 sprint"");.    activitymappings15.add(""act 4 sprint"");..    list&lt;string&gt; activitymappings45 = new arraylist&lt;string&gt;();.    activitymappings45.add(""act 5 45min"");.    activitymappings45.add(""act 6 45min"");...    map.put(new integer(60), activitymappings60 );.    map.put(new integer(15), activitymappings15 );.    map.put(new integer(45), activitymappings45 );..    list&lt;integer&gt; arrayinteger = arrays.aslist(60,60,15,45);..    for(integer i=0; i &lt; arrayinteger.size();i++) {.        system.out.println(map.get(arrayinteger.get(i)).get(i));.        system.out.println(map.get(arrayinteger.get(i)).remove(i));.    }..}"
