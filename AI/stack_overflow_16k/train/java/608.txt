"file management and sizes i have a task in blank generated from an exercise randomizer application and it's quite a pain. the instructions are:...  write a class named stearyl with a public identifier which must.  contain two public, static methods named mamatorial and msamanid. the.  first method mamatorial should accept as an argument string (string)..  the string will contain the name of the file to be created. caution:.  you have to set the path of the location of the file this file should.  have the following characteristics:.  .  size: 1077 bytes.  .  list of allowed bytes: byte [] aretooth = {97, 98, 99, 100, 101, 102,.  103, 104, 105}. the list of allowed bytes should be set as static.  public feature of class stearyl named aretooth. file data must be.  random and be evenly divisible. (all the bytes have about the same.  number of appearances) ..  .  the method mamatorial should return a variable type long containing.  the sum of the first 500 bytes. the second method msamanid must accept.  as argument one string (string) which will contain the name of a file..  the file is read into memory ( set the path as above) and for this the.  following metrics will be recorded :.  .  size.  .  number of occurrences of every byte included the table defined in.  aretooth table. the data should be returned as an array of integers.  (int) from msamanid. in position 1 of this table (eg a [0]) will be.  the size of the file and in the remaining there will be the number of.  occurrences for each byte (eg in position 2 the number of occurrences.  of the first byte and so on ) ....when i have it to check task it says:..blank.lang.exception: file was not made correctly in method mamatorial (wrong size, it should be 1077 bytes)...do you know where the error is? this is an excercise from a blank excercise randomizer. that means the generator has the main and u post the methods so it can check your answers. maybe u can use sth like this:   ..public static void main(string args[]){.    stearyl sl=new stearyl();.    long a=sl.mamatorial(""c:users***desktopblank_programming_2exercisestemp.txt"");.        system.out.println(a);.    int f[]=sl.msamanid(""c:users***desktopblank_programming_2exercisestemp.txt"");.    for (int i=0;i&lt;f.length;i++){.        system.out.println(f[i]);.    }..}...my code is:..import blank.util.random;.import blank.io.*;..public class stearyl{.    public static int filesize=1077;.    public static byte[] aretooth = {97, 98, 99, 100, 101, 102, 103, 104, 105};..public static long mamatorial(string filename){.    random random=new random();.        try {..    file file1=new file(filename);.    boolean success = file1.createnewfile();..        if (!success){.            file1.delete();.            file1.createnewfile();.        }  ..    } catch (ioexception e) {.    }.    bufferedoutputstream out = null;.    long sumfirst500=0;.    try {.        out = new bufferedoutputstream(new fileoutputstream(filename));.        for (int i=0;i&lt;filesize;i++){.            byte a=aretooth[random.nextint(aretooth.length)];.            if (i&lt;500) {.                   sumfirst500+=a;.                }.            out.write(a);.                } ..        out.close();.    } catch (ioexception e) {.    }...    return sumfirst500;..}.public static int[]msamanid(string filename){.    int[]pinakas=new int[aretooth.length+1];.    int length=0;.    byte[] bytes=null;.    try {.    file file1=new file(filename);.    inputstream is = new fileinputstream(file1);.        length = (int) file1.length();.        bytes = new byte[(int)length];.        // read in the bytes.        int offset = 0;.        int numread = 0;.        while (offset &lt; bytes.length.               &amp;&amp; (numread=is.read(bytes, offset, bytes.length-offset)) &gt;= 0) {.            offset += numread;.        }.        // ensure all the bytes have been read in.        if (offset &lt; bytes.length) {.            throw new ioexception(""could not completely read file ""+file1.getname());.        }.       is.close();.        } catch (ioexception e) {.    }..    pinakas[0]=length;..    for (int j=0;j&lt;aretooth.length;j++){.            pinakas[j+1]=0;.        }.    for (int i=0;i&lt;bytes.length;i++){.        for (int j=0;j&lt;aretooth.length;j++){.            if (bytes[i]==aretooth[j]) pinakas[j+1]++;.        }.    }..    return pinakas;.    }..}"
