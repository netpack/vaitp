"why am i stuck in an infinite loop after invoking poll() or remove() on a priority queue? blank i get stuck in an infinite for loop if i invoke the remove() or poll() on the priority queue below. ..i am trying to print out all the elements in there. so every time i print out the last attribute of the process elements, i call remove() or poll() on it. and i get stuck in an infinite loop...public class spn {..    private int cpu_burst_cycles = 0;.    priorityqueue&lt;process&gt; prq;.    priorityqueue&lt;process&gt; ready_queue;.    process current;..    public spn(priorityqueue&lt;process&gt; prqpass) {..        //priority queue of the processes.        prq = prqpass;..        system.out.println(prq.size());.        for(int i = 0; i&lt;prq.size(); i++) {..            //this is where i get in trouble.            system.out.println(prq.peek().getname() + ""'s rem time: "" + prq.remove().getremtime());..            system.out.println(""actual size: "" + prq.size());..        }.........}...process class:..public class process {..    private string name;.    private int arrive_time= 0;.    private int burst_time = 0;.    private int remain_time = 0;..    public process (string name, int arr_time, int bur_time) {..        this.arrive_time = arr_time;.        this.burst_time = bur_time;.        this.remain_time = burst_time;.        this.name = name;.    }..    public int getarrtime() {return arrive_time;}.    public int getburtime() {return burst_time;}.    public int getremtime() {return remain_time;}.    public string getname() {return name;}..    public void decremtime() {this.remain_time--;}.}...then in a third class i create a spn instance and i pass it a priority queue..if i just do a peek() it works fine...import blank.io.bufferedreader;.import blank.io.filenotfoundexception;.import blank.io.filereader;.import blank.io.ioexception;.import blank.util.*;..    public class test {..        //priority ready_queue for the accessed processes.        public static priorityqueue&lt;process&gt; prq = new priorityqueue&lt;process&gt;(5, new comparator&lt;process&gt; () {..            @override.            public int compare(process p1, process p2) {.                return p1.getarrtime() - p2.getarrtime();.            }.        });..        public static void main(string[] args) throws ioexception {..            bufferedreader br = null;.            string line;..            try {.                br =  new bufferedreader(new filereader(""c:\users\veni\desktop\test\test.txt\""));.            }.            catch (filenotfoundexception fnfex) {.                system.out.println(fnfex.getmessage() + ""file not found"");.                system.exit(0);.            }..            while((line = br.readline()) != null) {..                string[] params = line.split("" "");.                prq.add(new process(params[0], integer.parseint(params[1]), integer.parseint(params[2]) ));.            }       .            spn spn = new spn(prq);.            spn.spn_alg();.        }.    }"
