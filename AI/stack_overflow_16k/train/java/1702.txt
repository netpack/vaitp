"how do i properly create class ratio add(ratio r)? for my homework assignment, i was given skeleton code and told to fill in the classes so that they work properly when it comes to adding, subtracting, multiplying, and dividing a fraction. i need help understanding how exactly the ratio r works? my teacher told me ""it carries the values to complete the calculation with the numerator and denominator ""this"" carries""? ..based on what he said, i feel that my math itself is correct, just not sure of how to return r?..i've tried to play around with the ratio ""r"" but i cant seem to figure out how it works. ..the way i currently have set r equal to isn't working, it says ""cannot convert from type long to ratio""..// class level variables.private long _numerator;.private long _denominator;..public ratio().{.    long _numerator = 0;.    long _denominator = 1;...}// end of ratio()..public ratio(long a).{.    a = 0;.    _denominator = 1;..}// end of ratio(long a)..public ratio(long dividend, long divisor) throws arithmeticexception.{..    this._numerator = dividend;..    // check denominator for 0.    if (divisor == 0).    {.        throw new arithmeticexception(""denominator cannot be zero"");.    } else.        this._denominator = divisor;.    // check for negative.    if (dividend &lt; 0 &amp;&amp; divisor &lt; 0) // if there's a negative in numerator and denominator, fraction becomes.                                        // positive.    {.        dividend *= -1;.        divisor *= -1;.    } else if (divisor &lt; 0) // if negative is in denominator, moves negative to the numerator.    {.        dividend *= -1;.        divisor *= -1;.    }..    // simplify fraction in here using gcd.    gcd(dividend, divisor);..}// end of ratio(long dividend...)..long getnumerator().{.    return _numerator;.}..long getdenominator().{.    return _denominator;.}..public ratio add(ratio r).{..    long num= this._numerator;.    long den = this._denominator;.    long otherden = getdenominator();.    long othernum = getnumerator(); .    r = new ratio();..    //is this the return way to do it?.    r = ((num * otherden) + (othernum * den)) / (den * otherden);..    //or do i have to seperate numerator &amp; denominator?.    long newnum = ((num * otherden) + (othernum * den));.    long newden = (den * otherden);..    return r();.}// end of add"
