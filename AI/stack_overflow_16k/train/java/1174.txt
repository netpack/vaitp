"compare the return value of a method when expected return type and return value are passed as string parameters to give a little background on what i am trying to do, please refer my previous question :..run a blank method by passing class name and method name as parameter..so basically i am trying to call a method and test its return value. i'll read the following parameters from an xml or database : the method class,name,parameters and return value..then i'll execute the method and compare the output...the code looks like this as of now :..    public static void main(string[] args) throws ioexception { .        runthemethod(""carbean"",""getcolor"",""blank.lang.string"",""red"");.    }..    public static void runthemethod(string classname, string methodname, string expectedreturntype, object expectedreturnvalue){.        try {.            object classobj = class.forname(classname).newinstance();.            method method = classobj.getclass().getmethod(methodname);.            object returnval = method.invoke(classobj);.            if(expectedreturnvalue.getclass().getname().equals(expectedreturntype)){.// this is the problem portion.                system.out.println(""test passed : "" + expectedreturnvalue.equals(returnval));.            }else{ .                system.out.println(""expected return object type does not match actual return object type"");.            }.        } catch (instantiationexception | illegalaccessexception.                | classnotfoundexception | nosuchmethodexception | securityexception | illegalargumentexception | invocationtargetexception e) {.            // todo auto-generated catch block.            e.printstacktrace();.        }.    }...carbean is a user defined pojo :..public class carbean {..    private string brand;.    private string color = ""red"";..    public carbean (){.    }..    public carbean (string brand, string color){.        this.brand= brand;.        this.color= color;.    }..    /**.     * @return the brand.     */.    public string getbrand() {.        return brand;.    }..    /**.     * @param the brand to set.     */.    public void setbrand(string brand) {.        this.brand= brand;.    }..    /**.     * @return the color.     */.    public string getcolor() {.        return color;.    }..    /**.     * @param the color to set.     */.    public void setcolor(string color) {.        this.color= color;.    }..    @override.    public boolean equals(object o){.        if(o == null)               .            return false;.        if(!(o instanceof carbean)).            return false;..        carbean other = (carbean) o;.        if(this.brand!=null &amp;&amp; this.color!=null){.            if(this.brand.equals(other.brand) &amp;&amp; this.color.equals(other.color)).                return true;.            else.                return false;.        }else{.                return false;.        }.    }..    @override.    public int hashcode() {.        int hash = 17;.        hash = 31 * hash + this.brand.hashcode();.        hash = 31 * hash + this.color.hashcode();.        return hash;.    }..}...now this works fine for the current code - return type is string and i can compare using equals..but what if the method returns a bigdecimal or list? is there a generic way i can compare multiple object types?..i am assuming that for a user defined blank beans (pojo) i can override the equals() and hashcode() to compare it.  referring my blog for details:.http://blankreferencegv.blogspot.com/2014/10/overriding-equals-and-hashcode-for-pojo.html..any further suggestion is appreciated."
