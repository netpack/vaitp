"blank threads calling parent functions im making some software written in blank, it involves a single 'parent' class that invokes dozens of classes(nodes) that run in their own thread (extends thread)...the classes store the parent class as a variable. if the node class invokes a method from the parent class, does each node store a copy of the parent object or do all the nodes act upon the same object? if all nodes act on the same object, do statements in the called function run in the thread of the node or in the thread of the parent class?..ex code:..    class parent.    {.        arraylist&lt;node&gt; nodes = new  arraylist&lt;node&gt;();.       void createstartnodes().       {.          for(int i =0; i &lt; 36;++i).          {.             nodes.put(i,new node(this));.             nodes.get(i).start();.          }.       }.       void callsomefunc().       {.           /* things */.       }.    }.class node extends thread.{.   parent par;.   public node(parent p).   {.      par=p;.   }.  @override.  public void run().  {.     par.callsomefunc();.  } .}"
