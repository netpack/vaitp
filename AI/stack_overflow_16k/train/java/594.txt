"convert image obtained from url into inputstream. then read that inputstream to convert it into image & display on my jsp package imagebyte;..import blank.awt.image.bufferedimage;.import blank.io.bytearrayoutputstream;.import blank.io.ioexception;.import blank.io.inputstream;.import blank.net.malformedurlexception;.import blank.net.url;.import blank.net.urlconnection;.import blank.util.iterator;..import blankx.imageio.imageio;.import blankx.imageio.imagereader;.import blankx.imageio.stream.imageinputstream;..public class imagebyte {..    // private static final logger log = logger.getlogger(imagebyte.class);..    public static void main(string args[]) throws malformedurlexception, ioexception {..        getimageandtypefrominputstream();..    }..    public static byte[] getimageandtypefrominputstream() throws malformedurlexception, ioexception {..        string format = null;.        bufferedimage bufferedimage = null;.        inputstream input = null;..        urlconnection openconnection = new url(""http://www.thumbprintbooks.ca/wp-content/uploads/vignettes-photos-spine-inset-in-plinth-thumbnail-c-thumbprint-books.jpg"").openconnection();.        openconnection.addrequestproperty(""user-agent"",.                ""mozilla/5.0 (windows nt 6.3; win64; x64) applewebkit/537.36 (khtml, like gecko) chrome/61.0.3163.100 safari/537.36"");..        input = openconnection.getinputstream();.        system.out.println(""input : "" + input.tostring());.        system.out.println(""input : "" + input.getclass());.        system.out.println(""input : "" + input.available());...        imageinputstream iis = imageio.createimageinputstream(input);.        system.out.println(""iis : "" + iis.tostring());.        system.out.println(""iis : "" + iis.getclass());.        system.out.println(""iis : "" + iis.readboolean());.        system.out.println(""iis : "" + iis.length());..        iterator&lt;imagereader&gt; readers = imageio.getimagereaders(iis);.        system.out.println(""readers : "" + readers.tostring());.        system.out.println(""readers : "" + readers.getclass());..        if (readers.hasnext()) {..            system.out.println(""if block"");.            imagereader reader = readers.next();.            format = reader.getformatname();.            reader.setinput(iis);.            bufferedimage = reader.read(0);..            new bufferedimagewrapper(format, bufferedimage);..            final bytearrayoutputstream bytearrayoutputstream = new bytearrayoutputstream();.            imageio.write(bufferedimage, ""jpg"", bytearrayoutputstream);.            return bytearrayoutputstream.tobytearray();.        } else {.            system.out.println(""else block"");.            string text = ""oops !!!"";.            byte convertentry[] = text.getbytes();.            return convertentry;.        }..    }..    public static class bufferedimagewrapper {..        private final string imagetype;.        private final bufferedimage bufferedimage;..        public bufferedimagewrapper(string imagetype, bufferedimage bufferedimage) {.            system.out.println(""in buffered image wrapper"");.            this.imagetype = imagetype;.            this.bufferedimage = bufferedimage;.        }..        public string getimagetype() {..            return imagetype;.        }..        public bufferedimage getbufferedimage() {..            return bufferedimage;.        }..    }.}...output : ..input : sun.net.www.protocol.http.httpurlconnection$httpinputstream@3e3abc88..input : class sun.net.www.protocol.http.httpurlconnection$httpinputstream..input : 14195..iis : blankx.imageio.stream.filecacheimageinputstream@300ffa5d..iis : class blankx.imageio.stream.filecacheimageinputstream..iis : true..iis : -1..readers : blankx.imageio.imageio$imagereaderiterator@433c675d..readers : class blankx.imageio.imageio$imagereaderiterator..else block"
