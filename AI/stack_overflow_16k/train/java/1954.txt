"removing a node from a doubly linked list? here's the linked list code ..public class llist.{.protected int size;.protected dnode tail, header; ..public llist().{.    size = 0;.    tail = null;.    header = tail;.}..public void adddnode(dnode v) .{.    // means list is empty, so add first element.    if (header == null) .    {    .        header = v;.        tail = header;  // first element so (head == tail).    } .    else .    {.        tail.setnext(v);.        v.setprev(tail);.        v.setnext(null);.        tail = v;.    }.    size++;.}...and the remove node method that's the problem..public dnode removednode(dnode current).{.    if(current.nextnode() ==  null).    {.        dnode previous = current.prevnode();.        previous.setnext(null);.        current.setprev(null);.    }.    else if (current.prevnode() == null).    {.        dnode next = current.nextnode();.        next.setprev(null);.        current.setnext(null);.    }.    else.    {.        dnode next = current.nextnode();.        dnode previous = current.prevnode();.        previous.setnext(next);.        next.setprev(previous);.        current.setprev(null);.        current.setnext(null);.    }.    size = size - 1;.    return current;.}...the problem is that when i use previous.setnext(null); it won't let me add a node again which i think it has something to do with the header and tail. ..however when i use previous.setnext(tail); it doesn't seem to remove it from the list??"
