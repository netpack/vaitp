"type the type cannot be a superinterface of do; a superinterface must be an interface package util.methods;..import api.customevents.minieventsendevent;.import api.customevents.minieventsleaveevent;.import api.info.apido;.import mains.minievents;.import mains.settingsmanager;.import org.bukkit.bukkit;.import org.bukkit.location;.import org.bukkit.world;.import org.bukkit.configuration.file.fileconfiguration;.import org.bukkit.entity.player;.import org.bukkit.inventory.itemstack;.import org.bukkit.potion.potioneffect;.import org.bukkit.potion.potioneffecttype;..import blank.util.set;..public class do extends apido {.    settingsmanager settings = settingsmanager.getinstance();..    public minievents plugin;..    public do(minievents plugin) {.        this.plugin = plugin;.    }..    @override.    public void endevent(boolean removeall) {.        bukkit.getserver().getpluginmanager().callevent(new minieventsendevent(plugin.geteventname(), removeall));.    }..    @override.    public void loadplayerinventory(final player p) throws nullpointerexception {.        bukkit.getserver().getscheduler().schedulesyncdelayedtask(plugin, new runnable() {.            public void run() {.                p.getinventory().clear();.                p.getinventory().setarmorcontents(null);.                fileconfiguration fc = plugin.playerfile(p.getname().tolowercase());.                set&lt;string&gt; a = fc.getconfigurationsection(p.getname().tolowercase() + "".inv."").getkeys(false);..                for (string s : a) {.                    p.getinventory().setitem(integer.parseint(s), fc.getitemstack(p.getname().tolowercase() + "".inv."" + s));.                }.                p.getinventory().sethelmet(fc.getitemstack(p.getname().tolowercase() + "".armor.103""));.                p.getinventory().setchestplate(fc.getitemstack(p.getname().tolowercase() + "".armor.102""));.                p.getinventory().setleggings(fc.getitemstack(p.getname().tolowercase() + "".armor.101""));.                p.getinventory().setboots(fc.getitemstack(p.getname().tolowercase() + "".armor.100""));..                if (fc.getconfigurationsection(p.getname().tolowercase() + "".potion"") != null) {.                    for (string m : fc.getconfigurationsection(p.getname().tolowercase() + "".potion.name."").getkeys(false)) {.                        string s = fc.getstring(p.getname().tolowercase() + "".potion.name."" + m + "".type"");.                        int n = fc.getint(p.getname().tolowercase() + "".potion.name."" + m + "".level"");.                        int i = fc.getint(p.getname().tolowercase() + "".potion.name."" + m + "".duration"");.                        p.addpotioneffect(new potioneffect(potioneffecttype.getbyname(s), i, n));.                    }.                }.            }.        }, 20l);.    }.    @override.    public void putplayerinspectate(final player player) {.        plugin.getspectatemode().inspec.add(player.getname());.        if (settings.getdata().getconfigurationsection(plugin.geteventname() + "".spec."") != null) {.            world w = bukkit.getserver().getworld(settings.getdata().getstring(plugin.geteventname() + "".spec.world""));.            double x = settings.getdata().getdouble(plugin.geteventname() + "".spec.x"");.            double y = settings.getdata().getdouble(plugin.geteventname() + "".spec.y"");.            double z = settings.getdata().getdouble(plugin.geteventname() + "".spec.z"");.            float yaw = float.intbitstofloat(settings.getdata().getint(plugin.geteventname() + "".spec.yaw""));.            float pitch = float.intbitstofloat(settings.getdata().getint(plugin.geteventname() + "".spec.pitch""));.            final location l = new location(w, x, y, z, yaw, pitch);.            bukkit.getserver().getscheduler().schedulesyncdelayedtask(plugin, new runnable() {.                @override.                public void run() {.                    player.getinventory().clear();.                    player.getinventory().setarmorcontents(null);.                    player.teleport(l);.                    plugin.send(player, ""now-in-spectate"");.                }.            }, 3l);.        } else {.            bukkit.getserver().getscheduler().schedulesyncdelayedtask(plugin, new runnable() {.                @override.                public void run() {.                    player.getinventory().clear();.                    player.getinventory().setarmorcontents(null);.                    removeplayerfromevent(player, true, true);.                }.            }, 3l);.        }.    }..    @override.    public void removeplayerfromevent(player player, boolean spawn, boolean loadinventory) {.        bukkit.getserver().getpluginmanager().callevent(new minieventsleaveevent(player, plugin.geteventname(),.                plugin.getinfo().inevent.size(), plugin.gettimermain().gettimeleft(), plugin.getinfo().inevent));.        if (spawn) {.            teleportplayertoquitpoint(player);.        }.        if (loadinventory) {.            loadplayerinventory(player);.        }.    }..    @override.    public void saveplayerinventory(player p) {.        fileconfiguration fc = plugin.playerfile(p.getname().tolowercase());.        itemstack[] i = p.getinventory().getcontents();.        itemstack[] a = p.getinventory().getarmorcontents();.        int slot = 0;.        for (itemstack stack : i) {.            fc.set(p.getname().tolowercase() + "".inv."" + slot, stack);.            slot++;.        }.        int sslot = 100;.        for (itemstack stack : a) {.            fc.set(p.getname().tolowercase() + "".armor."" + sslot, stack);.            sslot++;.        }.        int ii = 0;.        fc.set(p.getname() + "".potion"", null);.        for (potioneffect pp : p.getactivepotioneffects()) {.            string ll = integer.tostring(ii);.            fc.set(p.getname().tolowercase() + "".potion.name."" + ll + "".type"", pp.gettype().getname());.            fc.set(p.getname().tolowercase() + "".potion.name."" + ll + "".level"", pp.getamplifier());.            fc.set(p.getname().tolowercase() + "".potion.name."" + ll + "".duration"", pp.getduration());.            ii++;.        }.        try {.            fc.save(plugin.playerdata(p.getname().tolowercase()));.        } catch (exception e) {.            e.printstacktrace();.        }.    }..    @override.    public void startcountdown(string eventname) {.        plugin.getcountdown().eventwait(eventname);.    }..    @override.    public void starttimer(string eventname) {.        plugin.gettimermain().settime(eventname);.    }..    @override.    public void stoptimer() {.        plugin.gettimermain().stop = true;.    }..    @override.    public void teleportplayertoquitpoint(final player player) throws nullpointerexception {.        bukkit.getserver().getscheduler().schedulesyncdelayedtask(plugin, new runnable() {.            public void run() {.                world w = bukkit.getserver().getworld(settings.getdata().getstring(""quit.world""));.                double x = settings.getdata().getdouble(""quit.x"");.                double y = settings.getdata().getdouble(""quit.y"");.                double z = settings.getdata().getdouble(""quit.z"");.                float yaw = float.intbitstofloat(settings.getdata().getint(""quit.yaw""));.                float pitch = float.intbitstofloat(settings.getdata().getint(""quit.pitch""));.                final location spawn = new location(w, x, y, z, yaw, pitch);.                player.teleport(spawn);.            }.        }, 20l);.    }..    @override.    public void updateeventscoreboard(player player, integer time, boolean setorupdate) {..    }.}...error on line: 24.implicit super constructor apido() is undefined. must explicitly invoke another constructor..how to fix it. does anyone have any idea? implements gives larger errors because i tried with extends..apido.blank..package api.info;..import mains.minievents;.import org.bukkit.entity.player;..public class apido {.    public minievents plugin;..    public apido(minievents plugin) {.        this.plugin = plugin;.    }.    /**.     * @param player - player to be put in spectator mode..     */.    public void putplayerinspectate(player player){.        plugin.getdo().putplayerinspectate(player);.    }..    /**.     * removes a player from all of the hashsets that are used for events..     * player still keeps armor, location, but is not technically in the event anymore..     * @param player - player who will be removed from the event..     */.    public void removeplayerfromevent(player player, boolean spawn, boolean loadinventory){.        plugin.getdo().removeplayerfromevent(player, spawn, loadinventory);.    }..    /**.     * teleports player to the preset quit point (/setquit)..     * @param player - player who will be teleported..     */.    public void teleportplayertoquitpoint(player player) throws nullpointerexception{.        plugin.getdo().teleportplayertoquitpoint(player);.    }..    /**.     * saves a player's inventory, potion effects, and armor..     * @param player - player who's inventory will be saved..     */.    public void saveplayerinventory(player player){.        plugin.getdo().saveplayerinventory(player);.    }..    /**.     * loads a player's armor, inventory contents, and potion effects..     * @param player - player to load inventory for..     * @throws nullpointerexception if player's inventory is not already saved..     */.    public void loadplayerinventory(player player) throws nullpointerexception{.        plugin.getdo().loadplayerinventory(player);.    }..    /**.     * starts timer on scoreboard..     * @param eventname - ""code"" name of an event..     */.    public void starttimer(string eventname){.        plugin.getdo().starttimer(eventname);.    }..    /**.     * stops the timer on the scoreboard..     */.    public void stoptimer(){.        plugin.getdo().stoptimer();.    }..    /**.     * completely ends any event that is happening..     * note: this will not remove all player from the event..     * you muse loop through everyone in the event before ending the event,.     * use heavyremoveplayerfromevent and then end the event..     */.    public void endevent(boolean removeall){.        plugin.getdo().endevent(removeall);.    }..    /**.     * updates a player's scoreboard..     * @param player - the player for whom the scoreboard will be updated..     * @param time - time until the event end (wise to use gettimeleft()).     * @param setorupdate - name of the current, running event..     */.    public void updateeventscoreboard(player player, integer time, boolean setorupdate){.        plugin.getdo().updateeventscoreboard(player, time, setorupdate);.    }..    /**.     * starts counting down for an event.     * @param eventname - name of the event for which the countdown will start for..     */.    public void startcountdown(string eventname){.        plugin.getdo().startcountdown(eventname);.    }.}"
