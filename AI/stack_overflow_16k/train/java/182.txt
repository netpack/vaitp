"need help on linked list delete method right now my linked list is in a queue form. my llist class holds two fields called head and tail which are the head and tail of the list. head and tail are lnode objects, a lnode is an element of the list that holds a int value, and it's previous lnode and next lnode. ..here's my lnode class:..class lnode{.    private int val;.    private lnode next;//not recursive.    private lnode prev;.    public lnode(int v, lnode n, lnode p){.        next = n;.        prev = p;.        val = v;.    }.    public int getval(){.        return val;.    }.    public lnode getnext(){.        return next;.    }.    public lnode getprev(){.        return prev;.    }.    public void setval(int v){.        val = v;.    }.    public void setnext(lnode n){.        next = n;.    }.    public void setprev(lnode p){.        prev = p;.    }.}...i am trying to make a delete method in my llist class so that it takes a value and delete the lnode that has that value. my problem is, i don't know how i would deal with the case where the lnode i'm trying to delete is the head or the tail...public void delete(int v){..    if(head.getval()==v){//delete head.        head = head.getnext();.        head.setprev(null);.    }.    else if(tail.getval()==v){//delete tail.        system.out.println(""boiboi"");.        tail = tail.getprev();.        tail.setnext(null);.    }.    else{//delete other element.        lnode tmp = head;.        while(tmp.getval()!=v){.            tmp = tmp.getnext();.        }.        tmp.getprev().setnext(tmp.getnext());.        tmp.getnext().setprev(tmp.getprev());.    }.}...what i have tried is to set the new head's previous lnode to be null, but blank doesn't allow that. so what should i do?..thank you."
