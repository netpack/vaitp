"how do i get the class from a static method of a subclass? /**. * this is my class, yadayada. needs to be subclassed to be useful.. */.public abstract class myclass {.  ....  public static void mymethod() {.    // what is the name of the subclass that's using this?.    system.out.println(""called from class "" + this.getclass().class.getname());.    // doesn't work because there's no ""this"" in a static method..  }.}...edit: this is what i want to happen:..public class fooclass extends myclass {.  ....}..fooclass.mymethod();   // i would like this to print ""called from class fooclass""...i'm all out of ideas...edit: and for those who wonder why i'm doing it this way, it's actually an android question of sorts...android defines a class called broadcastreceiver.  you subclass this and register your subclass with the system. when an appropriate broadcast is sent, the system creates an instance of your subclass and calls one of its methods...i want to create my own broadcastreceiver subclass that contains a static method for registering itself.  but i also want it to be subclassable.  it sort of looks like this:../**. * my special-purpose broadcastreceiver.  subclass this to use it.. */.public class myclass extends broadcastreceiver {.  public static scheduleanalarm(long when) {.    // do some class-specific stuff.    alarmmanager.schedulebroadcast(myclass.class, when);.  }..  public void onbroadcast() {.    system.out.println(""you should subclass myclass for it to be useful"");.  }.}...my problem is that i want to register the subclass to be instantiated, not myclass."
