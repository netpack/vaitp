"how to return list<impl> for list<interface> the following code is pretty useless and not tested. it should only explain the problem..i want to hide the implementing classes from the application, but define the hierarchy...given following interfaces..public interface rowtype {.    integer getsumfromhere();.}..public interface tabletype {.    list&lt;rowtype&gt; getrows();.}...implemented by..public class rowimpl implements rowtype {..    private integer value = 0;.    private rowimpl nextrow;..    public rowimpl somefunctionnotininterface() {.        return nextrow;.    }..    @override.    public integer getsumfromhere() {       .        return nextrow == null ? value : value + nextrow.getsumfromhere();.    }.}..public class tableimpl implements tabletype {..    list&lt;rowimpl&gt; impllist = new arraylist&lt;&gt;();..    public void dosomethingonimpl (){.      for(rowimpl row : impllist) {.        row.somefunctionnotininterface();.      }.    }..    @override.    public list&lt;rowtype&gt; getrows() {.        return impllist;.    }  .}...the implementation of getrows() leads to an error ""cannot convert from list&lt;rowimpl&gt; to list&lt;rowtype&gt;"".in fact, it`s guaranteed that every entry in the impllist can be accessed through the interface rowtype, so it could work...i tried &lt;? extends rowtype&gt; but that's not compatible to the tabletype interface..of course i can simple solve the problem, by copying the list return new arraylist&lt;&gt;(impllist); but that's not the same as having a reference to the list held by the class...is there a solution for this, or is the design completely wrong ?..edit: added function in tableimpl that clarifies why the list is build on rowimpl and not on rowtype."
