"hashmap getting overwritten when using put() this is probably going to be way too much information, but just in case, i'll post everything i have:..tester..import blank.util.calendar;.import blank.util.gregoriancalendar;.import blank.util.scanner;..enum months.{.    january, february, march, april, may, june, july, august, september, october, november, december;.}.enum days.{.    su, mo, tu, we, th, fr, sa;.}..public class mycalendartester {..    static months[] arrayofmonths = months.values();.    static days[] arrayofdays = days.values();...    public static void main(string[] args) {.        // todo auto-generated method stub.        gregoriancalendar cal = new gregoriancalendar(); // capture today.        printcalendar(cal);.        menuhandler();..        system.out.println(""ni think we're done here!"");.    }..    public static void  printcalendar(calendar cal){..        gregoriancalendar daycounter = new gregoriancalendar(); // capture today.        daycounter.set(calendar.day_of_month, 1);..        int formatcounter = 0;..        system.out.println(""    "" + arrayofmonths[cal.get(calendar.month) ] + "" "" + cal.get(calendar.year)); //prints the month and year..        for(int i = 0; i &lt; arrayofdays.length; i++){.            if(i == 0){.                system.out.print(arrayofdays[i]);.            }.            else{.                system.out.print("" "" + arrayofdays[i]);.            }.        }//print days of week..        system.out.println();.        for(int i = 0; i &lt; arrayofdays.length; i++){.            if(!arrayofdays[i].equals(arrayofdays[daycounter.get(calendar.day_of_week) - 1])){.                system.out.print(""   "");.                formatcounter++;.            }.            else{.                system.out.print("" "" + cal.getactualminimum(calendar.day_of_month) + "" "");.                formatcounter++;.                break;.            }.        }..        for(int i = 1; i &lt; cal.getmaximum(calendar.day_of_month); i++){.            if(formatcounter == 7){.                system.out.println();.                formatcounter = 0; //reset counter.            }.            daycounter.roll(calendar.day_of_month, true);.            if(daycounter.get(calendar.date) == cal.get(calendar.date)){.                system.out.print(""["" + daycounter.get(calendar.date) + ""]"");.                formatcounter++;.            }.            else if(daycounter.get(calendar.date) &lt;= 9){.                system.out.print("" "" + daycounter.get(calendar.date) + "" "");.                formatcounter++;.            }.            else{.                system.out.print(daycounter.get(calendar.date) + "" "");.                formatcounter++;.            }...        }.    }..public static void menuhandler(){..scanner sc = new scanner(system.in);.mycalendar mcal = new mycalendar();.event myevent = new event();    ..system.out.println(""nselect one of the following options:"");.system.out.println(""[l]oad [v]iew by [c]reate [g]o to [e]vent list [d]elete [q]uit"");..        char userchoice = sc.next().charat(0);.        switch(character.touppercase(userchoice)){.            case 'l':..            case 'v': .                     mcal.viewcalendar();.                     menuhandler();..            case 'c':.                     myevent.createevent();.                     menuhandler();..            case 'g':..            case 'e':..            case 'd':..            case 'q': return;.        }...    }..}...mycalendar..import blank.util.calendar;.import blank.util.date;.import blank.util.gregoriancalendar;.import blank.util.hashmap;.import blank.util.scanner;...public class mycalendar {..    gregoriancalendar calendar;.    private hashmap&lt;gregoriancalendar, event&gt; mycalhash;.    gregoriancalendar daycounter = new gregoriancalendar(); // capture today.    scanner sc = new scanner(system.in);.    static months[] arrayofmonths = months.values();.    static days[] arrayofdays = days.values();..    mycalendar(){.        calendar = new gregoriancalendar();.        mycalhash = new hashmap&lt;gregoriancalendar, event&gt;();.    }..    public hashmap&lt;gregoriancalendar, event&gt; getmycalhash(){.        return mycalhash;.    }..    public void setmycalhash(hashmap&lt;gregoriancalendar, event&gt; mycalhash) {.        this.mycalhash = mycalhash;.    }..    public void viewcalendar() {..            system.out.print(""[d]ay view or [m]view? "");.            char userchoice = sc.next().charat(0);.            if(character.touppercase(userchoice) == 'd'){ dayview(); }.            else if(character.touppercase(userchoice) == 'm'){ monthview(); }.            else{.                system.out.println(""invalid choice."");.            }.    }   ..        public void dayview(){.            //print day calendar.            //gregoriancalendar daycounter = new gregoriancalendar(); // capture today..            system.out.println(arrayofdays[calendar.get(calendar.day_of_week) - 1] + "", "" +  arrayofmonths[calendar.get(calendar.month)] + "" "" + calendar.get(calendar.date) + "", "" + calendar.get(calendar.year));.            system.out.print(""[p]revious or [n]ext or [m]ain menu ? "");.            char userchoice = sc.next().charat(0);.            if(character.touppercase(userchoice) == 'p'){.                calendar.add(calendar.day_of_month, -1);.                dayview();.            }.            else if(character.touppercase(userchoice) == 'n'){.                calendar.add(calendar.day_of_month, 1);.                dayview();.            }.            else if(character.touppercase(userchoice) == 'm'){.                return;.            }.            else{.                system.out.println(""invalid choice."");.                return;.            }.        }.        public void monthview(){.            //print month calendar.            int formatcounter = 0;.            daycounter.set(calendar.day_of_month, 1);..            system.out.println(""    "" + arrayofmonths[calendar.get(calendar.month) ] + "" "" + calendar.get(calendar.year)); //prints the month and year..            for(int i = 0; i &lt; arrayofdays.length; i++){.                if(i == 0){.                    system.out.print(arrayofdays[i]);.                }.                else{.                    system.out.print("" "" + arrayofdays[i]);.                }.            }//print days of week..            system.out.println();.            for(int i = 0; i &lt; arrayofdays.length; i++){.                if(!arrayofdays[i].equals(arrayofdays[daycounter.get(calendar.day_of_week) - 1])){.                    system.out.print(""   "");.                    formatcounter++;.                }.                else{.                    system.out.print("" "" + calendar.getactualminimum(calendar.day_of_month) + "" "");.                    formatcounter++;.                    break;.                }.            }..            for(int i = 1; i &lt; daycounter.getactualmaximum(calendar.day_of_month); i++){.                if(formatcounter == 7){.                    system.out.println();.                    formatcounter = 0; //reset counter.                }.                daycounter.roll(calendar.day_of_month, true);.                if(daycounter.get(calendar.date) &lt;= 9){.                    system.out.print("" "" + daycounter.get(calendar.date) + "" "");.                    formatcounter++;.                }.                else{.                    system.out.print(daycounter.get(calendar.date) + "" "");.                    formatcounter++;.                }...            }..            system.out.print(""n[p]revious or [n]ext or [m]ain menu ? "");.            char userchoice = sc.next().charat(0);.            if(character.touppercase(userchoice) == 'p'){.                calendar.add(calendar.month, -1);.                daycounter.add(calendar.month, -1);.                monthview();.            }.            else if(character.touppercase(userchoice) == 'n'){.                calendar.add(calendar.month, 1);.                daycounter.add(calendar.month, 1);.                monthview();.            }.            else if(character.touppercase(userchoice) == 'm'){.                return;.            }.            else{.                system.out.println(""invalid choice."");.                return;.            }.        }.......}...event..import blank.text.dateformat;.import blank.text.parseexception;.import blank.text.simpledateformat;.import blank.util.calendar;.import blank.util.date;.import blank.util.gregoriancalendar;.import blank.util.hashmap;.import blank.util.map.entry;.import blank.util.scanner;...public class event {..    string eventname;.    gregoriancalendar starttime;.    gregoriancalendar endtime;..    event(){}..    event(string eventname, gregoriancalendar starttime, gregoriancalendar endtime){.        this.eventname = eventname;.        this.starttime = starttime;.        this.endtime = endtime;.    } //end event constructor..    public void createevent(){.        scanner sc = new scanner(system.in);.        system.out.print(""enter the name of the event: "");.        string name = sc.nextline();.        system.out.print(""date of event: "");.        string dateasstring = sc.nextline();.        dateformat sdf = new simpledateformat(""mm/dd/yyyy"");.        date date = null;.        string starttime = null;.        string endtime = null;.        mycalendar mcal = new mycalendar();.        gregoriancalendar caldate = new gregoriancalendar();.        string[] datearr = dateasstring.split(""/"");.           caldate.set(gregoriancalendar.year, integer.parseint(datearr[2]));.           caldate.set(gregoriancalendar.month, integer.parseint(datearr[0]));.           caldate.set(gregoriancalendar.date, integer.parseint(datearr[1]));..        dateformat stf = new simpledateformat(""hh:mm"");.        system.out.print(""enter starting time and ending time(24 hour format, comma separated):"");.        string times = sc.nextline();.        // checks if user entered both start and end time.        if(times.contains("","")){.            string[] time = times.split("","");.            starttime = time[0];.            endtime = time[1];..            gregoriancalendar calstime = new gregoriancalendar();.            string[] stime = starttime.split("":"");.            calstime.set(calendar.hour_of_day, integer.parseint(stime[0]));.            calstime.set(calendar.minute, integer.parseint(stime[1]));...            gregoriancalendar caletime = new gregoriancalendar();.            string[] etime = endtime.split("":"");.            caletime.set(calendar.hour_of_day, integer.parseint(etime[0]));.            caletime.set(calendar.minute, integer.parseint(etime[1]));.            event myevent = new event(name, calstime, caletime);..            mcal.getmycalhash().put(caldate,  myevent); //adding date and event to hashmap..        }else{ //if user did not specify an event end time.            starttime = times;.            endtime = null;..            gregoriancalendar calstime = new gregoriancalendar();.            string[] stime = starttime.split("":"");.            calstime.set(calendar.hour_of_day, integer.parseint(stime[0]));.            calstime.set(calendar.minute, integer.parseint(stime[1]));.            event myevent = new event(name, calstime, null);.            mcal.getmycalhash().put(caldate,  myevent);//adding date and event to hashmap.        }..    system.out.println(""here is what is in the hashmap:"");  .    system.out.println(""hashmap size = "" + mcal.getmycalhash().size());.    for (entry&lt;gregoriancalendar, event&gt; entry : mcal.getmycalhash().entryset()) {.        event value = entry.getvalue();.        system.out.println(""key, "" + entry.getkey().get(calendar.month) + ""/"" + entry.getkey().get(calendar.date) + ""/"" + entry.getkey().get(calendar.year) + .                "" value: "" + value.eventname + "" "" + value.starttime.get(calendar.hour_of_day) + "":"" + .                value.starttime.get(calendar.minute) + "" "" + value.endtime.get(calendar.hour_of_day) + "":"" + value.endtime.get(calendar.minute));.      }....    }.}...every time that i call createevent(), i am overwriting my calendar hashmap. does anyone have any idea what is going on? i want to be able to add to my existing hashmap. please note, i do not care about conflicting events, and i can have multiple events per each date. however, right now, even when i try to add the events to a different date(key), it still overwrites the previous one...i apologize for the obnoxiously long post, but i'm not sure how to stop it from overwriting."
