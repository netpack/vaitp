"snake game: how to stop the game when the snake eat itself i am making a snake game, and it works pretty well except the part of the snake eat itself...here's my code so far:..obstacle class..class obstacle {.    int x, y;..    public obstacle(int x, int y) {.        this.x = x;.        this.y = y;.    }.    public void draw(graphics g) {.        g.setcolor(color.black);.        g.fillrect(x, y, 10, 10);.    }.}...food class..class food {.    int x, y;..    public food(int x, int y) {.        this.x = x;.        this.y = y;.    }.    public void draw(graphics g) {.        g.setcolor(color.red);.        g.fillrect(x, y, 10, 10);.    }.}...body class..class body {.    int x, y;..    public body(int x, int y) {.        this.x = x;.        this.y = y;.    }..    public void draw(graphics g) {.        g.setcolor(color.green);.        g.fillrect(x, y, 10, 10);.        g.setcolor(color.black);.        g.drawrect(x, y, 10, 10);.    }.}...screen class..class screen extends jpanel implements actionlistener, keylistener {.    int width = 800, height = 800;.    public static int time = 50;.    timer t;.    int x = 400, y = 400;.    boolean right = false, left = false, up = false, down = false;.    public static int grade = 0;..    linkedlist&lt;food&gt; foods;.    linkedlist&lt;body&gt; snake;.    linkedlist&lt;obstacle&gt; block;..    body b;.    food f;.    obstacle k;..    random rand = new random();.    int size = 3;..    public screen() {..        init();.    }...    public void init() {..        block = new linkedlist&lt;obstacle&gt;();.        foods = new linkedlist&lt;food&gt;();.        snake = new linkedlist&lt;body&gt;();..        level();.        t = new timer(time, this);.        t.start();.        addkeylistener(this);.        setfocusable(true);.        setfocustraversalkeysenabled(false);.    }..    public void tracking() {..        if (x &lt; 0 || x &gt; 800 || y &lt; 0 || y &gt; 800) {.            hit();.        }.    }..    public void level() {.        object[] options = {""level 1"", ""level 2"", ""level 3""};..        int option = joptionpane.showoptiondialog(null, ""please select a level"", ""level option"",.        joptionpane.yes_no_cancel_option, joptionpane.question_message, null, options, options[2]);..        switch (option) {.        case joptionpane.yes_option: .            system.out.println(""before: "" + time);.            time = 50;.            system.out.println(""after: "" + time);.            break;.        case joptionpane.no_option: .            system.out.println(""before: "" + time);.            time = 30;.            system.out.println(""after: "" + time);.            break;.        case joptionpane.cancel_option: .            system.out.println(""before: "" + time);.            time = 10;.            system.out.println(""after: "" + time);.            break;.        } .    }..    public void hit() {.        t.stop();.        if (joptionpane.showconfirmdialog(null, ""snake: you hit the wall! nrestart the game?"", ""ouch!!!"", .                joptionpane.yes_no_option, joptionpane.question_message) == joptionpane.yes_option) {.            x = 400;.            y = 400;.            while (snake.size() != 3) {.                snake.remove();.                size = 3;.            }.            init();..        } else {.            system.exit(0);.        }.    }..    public void move() {.        if (right) x += 10;.        if (left) x -= 10;.        if (up) y -= 10;.        if (down) y += 10;.    }..    public void snake() {.        if (snake.size() == 0) {.            b = new body(x, y);.            snake.add(b);.        }.        move();.        b = new body(x, y);.        snake.add(b);..        if (snake.size() &gt; size) {.            snake.remove(0);.        }.    }..    public void food() {.        if (foods.size() == 0) {.            int ok = 0;.            int rx = 0;.            int ry = 0;.            while (ok != 1) {.                rx = (int) (rand.nextint(700) + 1);.                ry = (int) (rand.nextint(700) + 1);..                if ((rx % 10) == 0 &amp;&amp; (ry % 10) == 0) {.                    ok = 1;.                } .            }.            f = new food(rx, ry);.            foods.add(f);.        }..        if (snake.get(snake.size() - 1).x == foods.get(0).x &amp;&amp; snake.get(snake.size() - 1).y == foods.get(0).y) {.            foods.remove();.            size++;.            grade += 100;.        }.    }..    public void block() {.        if (block.size() == 0) {.            int ok = 0;.            int rx = 0;.            int ry = 0;.            while (ok != 15) {.                rx = (int) (rand.nextint(750) + 1);.                ry = (int) (rand.nextint(750) + 1);..                if ((rx % 10) == 0 &amp;&amp; (ry % 10) == 0) {.                    k = new obstacle(rx, ry);.                    block.add(k);.                    int temp = 10;..                    int r = (int) (rand.nextint(2) + 1);..                    for (int i = 0; i &lt; 5; i++) {..                        if (r == 1) {.                            k = new obstacle(rx + temp , ry);.                        } else if (r == 2) {.                            k = new obstacle(rx , ry + temp);.                        }.                        block.add(k);..                        if ((k.x == foods.get(0).x &amp;&amp; k.y == foods.get(0).y) || .                            (k.x == 400 &amp;&amp; k.y == 400) || .                            ((k.x &gt;= 350 &amp;&amp; k.x &lt;= 450) &amp;&amp; (k.y &gt;= 350 &amp;&amp; k.y &lt;= 450)))  {.                            block.remove(k);.                        }..                        temp += 10;.                    }.                    ok++;.                } .            }.        }..        for (int i = 0; i &lt; block.size(); i++) {.            if (snake.get(snake.size() - 1).x == block.get(i).x &amp;&amp; snake.get(snake.size() - 1).y == block.get(i).y) {.                hit();.            }.        }.    }..    public void update() {.        snake();.        food();.        block();.    }..    @override.    public void paintcomponent(graphics g) {.        super.paintcomponent(g);.        g.setcolor(color.dark_gray);.        g.fillrect(0, 0, width, height);..        g.setcolor(color.black);.        for (int i = 1; i &lt; width / 10; i++) {.            g.drawline(i * 10, 0, i * 10, height);.        }.        for (int i = 1; i &lt; height / 10; i++) {.            g.drawline(0, i * 10, width, i * 10);.        }..        for (int i = 0; i &lt; snake.size(); i++) {.            snake.get(i).draw(g);.        }..        for (int i = 0; i &lt; foods.size(); i++) {.            foods.get(i).draw(g);.        }..        for (int i = 0; i &lt; block.size(); i++) {.            block.get(i).draw(g);.        } .    }..    @override.    public void actionperformed(actionevent e) {.        update();.        tracking();.        repaint(); .    }..    @override.    public void keytyped(keyevent e) {..    }..    @override.    public void keypressed(keyevent e) {.        int key = e.getkeycode();.        if (key == keyevent.vk_right &amp;&amp; left == false) { .            up = false;.            down = false;.            right = true;..        }.        if (key == keyevent.vk_left &amp;&amp; right == false) { .            up = false;.            down = false;.            left = true;.        }.        if (key == keyevent.vk_up &amp;&amp; down == false) {.            left = false;.            right = false;.            up = true;.        }.        if (key == keyevent.vk_down &amp;&amp; up == false) {.            left = false;.            right = false;.            down = true;.        } .    }..    @override.    public void keyreleased(keyevent e) {..    }.}...and the main class snakegame..public class snakegame extends jframe {.    public static void main(string[] args) {.        jframe f = new jframe();.        screen s = new screen();.        f.add(s);.        f.setsize(810, 810);.        f.setvisible(true);.        f.setlocationrelativeto(null);.        f.setresizable(false);.        f.setdefaultcloseoperation(jframe.exit_on_close);.    }.}...so at the beginning, i decided to make an comparison when the snake's head eat its tails, but since my snake is moving; the tails' x and y are following the head's x and y, so the comparison is always true..i also thinking of when the snake change its direction, then do some code to track the x y coordinate and its tail x y coordinate, but i have no idea how to step..is there other ways to make the game stop when the snake eat itself?"
