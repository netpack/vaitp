"how do i output blank hashmap keys when the 'key' is two integers?     package point;..    //an array arr is populated with random x,y points using mypoint then.    public static void main(string[] args) throws ioexception {.    hashmap&lt;mypoint,integer&gt; map = new hashmap&lt;mypoint,integer&gt;();.    integer val =0;..    for(int i = 0; i &lt; arr.length ; i++).    {.        map.put(arr[i],val);.    }.    }...//second file..package point;.public class mypoint implements comparable&lt;mypoint&gt;{..private int x;.private int y;..public mypoint(int x1, int y1) {.    x = x1;.    y = y1;.}..public boolean equals(object p) {.    mypoint p1;.    try {p1 = (mypoint) p;}.    catch (classcastexception ex) {return false;}.    return (x == p1.x) &amp;&amp; (y == p1.y);.}..public int hashcode() {.    return ((y * 31) ^ x);.}...here is my code mypoint stores x y points. i'm using this code to get unique sets of x,y points with no duplicates. ..my question is how do i retrieve the x y values in mypoint ? is this an efficient way to use a hashmap to filter unique x,y points. also here is the hashcode i made...is there a better hashcode i could use?"
