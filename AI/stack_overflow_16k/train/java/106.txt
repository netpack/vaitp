"choosing one element from list according to preference i'm given an unordered list of objects of this form..class element {.  string property; // has value from the set (""a"", ""b"", ""c"", ""d"").}...where no two elements have the same property value..i want to choose one element according to a set of rules like the following and return its property value:...if there is an element whose property has value ""a"", then pick that element..else, if there is an element whose property has value ""b"", then pick that element..else, if there is an element whose property has value ""c"", then pick that element..finally if no element has been chosen yet, then throw an exception....this is one solution i've come up with for this problem:..string chooseelementproperty(list&lt;element&gt; elements) {.  // iterates the list and creates a set of all the property values..  // example: [{property: 'a'}, {property: 'b'}] -&gt; {'a', 'b'}.  set&lt;string&gt; propertyvalues = pluckpropertyvalues(elements);..  if (propertyvalues.contains(""a"")).    return ""a"";.  if (propertyvalues.contains(""b"")).    return ""b"";.  if (propertyvalues.contains(""c"")).    return ""c"";.  throw new illegalargumentexception(""invalid input!"");.}...my question is: what is a better/cleaner way to do this that makes this method more extensible where it's easier to change my preference if in the future i want to choose ""b"" over ""a""?"
