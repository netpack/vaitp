"returning switch capable value based on string not sure how i'm going to attack this...basically what i have is input of varying length, one or multiple times, that will cause an action. it being from typed input, file etc...i have no idea on by what and how to tackle this. would it be best to have a function returning an int that correspond to an public static final int foo = 1;, an enum, an other way?..what i have as of now is a series of if statements as in:..if (str.equals(""foo"") || str.equals(""f"")) {.      blah;.} else if (str.equals(""beach"")) {.      more blah;.}...is this good as any, or is there a better way? have had a peek at enum but seems like that is more to it then in e.g. c. this is probably wrong, but would it be something in the direction of this?..class mother.{..    happycamping() {.        switch (valinput(str)) {.        case foo: do fo; break;.        case bar: do bar; break;.        case baz: do fo bar: break.        ....    }..    private enum valinput(string str).    {.         foo(""foo""), bar(""bar""), baz(""baz"");..         private int value;..         private valinput(string str) {.              if (str.equals(""blah"")).                   this.value = 1;.              ....         }.    }.}...point being having a cleaner approach and separate out the ""parsing"" from the main routine. what would be a good way here?"
