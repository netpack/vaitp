blank virtual method that does not return void i want a method in a derived class to override a virtual method in a concrete base class and return something (i.e. not void) like this:..public class helloworldapp.{.    public static void main(string args[]).    {.        bar bar = new bar();.        bar.go();.    } .}..public class foo.{.    public void go().    {.        system.out.print(this.test().tostring());.    }..    protected integer test().    {.        return 1;.    }.}..public class bar extends foo.{.    @override.    protected integer test().    {.        return 2;.    }.}...is there any way of doing this without the redundant 'return 1;' in foo.test() which will never get run. it works fine obviously but it just seems like i'm doing something badly wrong.
