"nullpointerexception - linkedlist okey, i have no idea why i am getting this nullpointexception. i have been trying for hours now, i am going crazy! .maybe some of u guys can help me. if u need more information, i will try to give it, just ask 4 it. ..this is a link to a picture - click me! - nullpointerexception..public class kjedetmengde&lt;t&gt; implements mengdeadt&lt;t&gt; {..private static random rand = new random();.private int antall; // antall elementer i mengden.private linearnode&lt;t&gt; start;../**. * oppretter en tom mengde.. */.public kjedetmengde() {.    antall = 0;.    start = null;.}//..@override.public void leggtil(t element) {.    if (!(inneholder(element))) {.        linearnode&lt;t&gt; node = new linearnode&lt;t&gt;(element);.        node.setneste(start);.        start = node;.        antall++;.    }.}..public void leggtilalle(mengdeadt&lt;t&gt; m2) {.    iterator&lt;t&gt; teller = m2.oppramser();.    while (teller.hasnext()) {.        leggtil(teller.next());.    }.}..@override.public t fjerntilfeldig() {.    linearnode&lt;t&gt; forgjenger, aktuell;.    t resultat = null;.    if (!ertom()) {.        int valg = rand.nextint(antall) + 1;.        if (valg == 1) {.            resultat = start.getelement();.            start = start.getneste();.        } else {.            forgjenger = start;.            for (int nr = 2; nr &lt; valg; nr++) {.                forgjenger = forgjenger.getneste();.            }.            aktuell = forgjenger.getneste();.            resultat = aktuell.getelement();.            forgjenger.setneste(aktuell.getneste());.        }.        antall--;.    } // if.    return resultat;.}//..@override.public t fjern(t element) {.    boolean funnet = false;.    linearnode&lt;t&gt; forgjenger = null;.    linearnode&lt;t&gt; aktuell = null;.    t resultat = null;.    if (!ertom()) {.        if (start.getelement().equals(element)) {.            resultat = start.getelement();.            start = start.getneste();.            antall--;.        } else {.            forgjenger = start;.            aktuell = start.getneste();.            for (int i = 1; i &lt; antall &amp;&amp; !funnet; i++) {.                if (aktuell.getelement().equals(element)) {.                    funnet = true;.                } else {.                    forgjenger = aktuell;.                    aktuell = aktuell.getneste();.                }.            }.        }.        if (funnet) {.            resultat = aktuell.getelement();.            forgjenger.setneste(aktuell.getneste());.            antall--;.        }.    }.    return resultat;.}//..@override.public mengdeadt&lt;t&gt; union(mengdeadt&lt;t&gt; m2) {// obs! en bedre i kladdeopg4.    kjedetmengde&lt;t&gt; begge = new kjedetmengde&lt;t&gt;();.    linearnode&lt;t&gt; aktuell = start;.    while (aktuell != null) {.        begge.leggtil(aktuell.getelement());.        aktuell = aktuell.getneste();.    } // while.    iterator&lt;t&gt; teller = m2.oppramser();.    while (teller.hasnext()) {.        begge.leggtil(teller.next());.    }.    return begge;.}//..private void settinn(t element) {.    linearnode&lt;t&gt; nynode = new linearnode&lt;t&gt;(element);.    nynode.setneste(start);.    start = nynode;.    antall++;.}..@override.public boolean inneholder(t element) {.    boolean funnet = false;.    linearnode&lt;t&gt; aktuell = start;.    for (int søk = 0; søk &lt; antall &amp;&amp; !funnet; søk++) {.        if (aktuell.getelement().equals(element)) {.            funnet = true;.        } else {.            aktuell = aktuell.getneste();.        }.    }.    return funnet;.}..@override.public boolean erlik(mengdeadt&lt;t&gt; m2) {.    boolean likemengder = true;.    t element = null;.    if (antall() == m2.antall()) {.        iterator&lt;t&gt; teller = m2.oppramser();.        while (teller.hasnext() &amp;&amp; likemengder) {.            element = teller.next();.            if (!this.inneholder(element)) {.                likemengder = false;.            }.        }.    }.    return likemengder;.}..@override.public boolean ertom() {.    return antall == 0;.}..@override.public int antall() {.    return antall;.}..@override.public iterator&lt;t&gt; oppramser() {.    return new kjedetiterator&lt;t&gt;(start);.}..@override.public mengdeadt&lt;t&gt; snitt(mengdeadt&lt;t&gt; m2) {..    kjedetmengde&lt;t&gt; kjede = new kjedetmengde&lt;t&gt;();.    kjedetmengde&lt;t&gt; snitt = new kjedetmengde&lt;t&gt;();.    linearnode&lt;t&gt; aktuell = start;..    while (aktuell != null) {.        kjede.leggtil(aktuell.getelement());.        aktuell = aktuell.getneste();.    }..    iterator&lt;t&gt; teller = m2.oppramser();..    while (teller.hasnext()) {.        t element = teller.next();.        if (kjede.inneholder(element)) {.            snitt.leggtil(element);.        }.    }..    return snitt;.}..@override.public mengdeadt&lt;t&gt; differans(mengdeadt&lt;t&gt; m2) { // (m1- m2).    kjedetmengde&lt;t&gt; kjede = new kjedetmengde&lt;t&gt;();.    linearnode&lt;t&gt; aktuell = start;..    while (aktuell != null) {.        kjede.leggtil(aktuell.getelement());.        aktuell = aktuell.getneste();.    }..    iterator&lt;t&gt; teller = m2.oppramser();..    while (teller.hasnext()) {.        t element = teller.next();.        if (kjede.inneholder(element)) {.            kjede.fjern(element);.        }.    }..    return kjede;.}..public string tostring() {.    string resultat = "" "";.    linearnode&lt;t&gt; aktuell = start;.    while (aktuell != null) {.        resultat += aktuell.getelement().tostring() + ""t"";.        aktuell = aktuell.getneste();.    }.    return resultat;.}...}// class..public class hobby {..private string hobbynavn;..public hobby (string hobby) {.    hobbynavn = hobby;.}..public string tostring() {.    return (""&lt; "" + hobbynavn + "" &gt;"");.}..public boolean equals (object hobby2) {.    hobby hobbydenandre = (hobby) hobby2;.    return(hobbynavn.equals(hobbydenandre.gethobbynavn()));.}..public string gethobbynavn() {.    return hobbynavn;.}...} //class"
