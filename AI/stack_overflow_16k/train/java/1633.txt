"blank nested and / or child classes i was wondering what best practices were in blank when running a nested class - im thinking of running an rmi server that would be created upon the instanciation of the parent class so, say..class foo() [the 'parent'].constructor for foo() - instanciates rmifoo()...this get a bit painful when you want to call a method from rmifoo() back in the 'parent' class (you cant simply import the class, because of rmi). one way is of course to make rmifoo() an actual child class, and then be able to access methods in the parent, but this seems needlessly ott (esp because then, presumably you need to make the parent abstract, etc etc and that really complicates a lot of other functionality)...i was wonder what the best practise is in terms of setting up a system like this, so one can call methods back in the foo() class from within its server ie. rmifoo()..*********update*******..code (as im thinking of it currently) would be somethine like:..a.blank:..public class a {.b abinstance;..  public fooparent() {.  [do something..].  }.}...b.blank..public class b { .  public foochild() {.   [super].fooparent()  (super wont work...?).  }...}"
