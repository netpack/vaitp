"how do i switch between worlds/levels once certain criteria has been met? for example i have built one level and there are 35 coins, so how do i say in code the level is over switch to a new world once all the coins have been picked up? i have the other level subclasses i'm not particularly sure how to make the actual game switch levels though?..this is the code for my first level..i have created the other subclasses as gameworld2 and gameworld3 with the exact same layout..public class gameworld extends world {..private player runningman;....public gameworld() {.    super();..    // first dynamic body .       runningman = new player(this);.       runningman.setposition(new vec2(-4, -9));..    //level one..    { // make the ground.        shape shape = new boxshape(29, 0.5f);.        body ground = new staticbody(this, shape);.        ground.setposition(new vec2(0, -12.5f));..       // loop to generate coins..         for (int i = 0; i &lt; 35; i++) {.         body coins = new coins(this);.         coins.setposition(new vec2(i * 1 - 17, 10));.         coins.addcollisionlistener(new coinpickup(runningman));...(insert repeated code for platforms bla bla have removed it so you guys dont have to see repeated code)...}..public player getrunningman() {.    return runningman;.}.}...also here is my code for the actual game class:../**. * a world with some bodies.. */.public class game {../** the world in which the bodies move and interact. */.private gameworld world;../** a graphical display of the world (a specialised jpanel). */.private myview view;../** initialise a new demo. */.public game() {..    // make the world.    world = new gameworld();..    // make a view.    view = new myview(world, 1000, 600);....    // add some mouse actions.    // add this to the view, so coordinates are relative to the view.    //view.addmouselistener(new mousehandler(view));......    // display the view in a frame..    final jframe frame = new jframe(""week 1"");....    //link the character to the keyboard..    frame.addkeylistener(new controller(world.getrunningman()));.....    // quit the application when the game window is closed..    frame.setdefaultcloseoperation(jframe.exit_on_close);..    frame.setlocationbyplatform(true);       ....    // display the world in the window.    frame.add(view);..    // don't let the game window be resized.    frame.setresizable(false);..    // size the game window to fit the world view.    frame.pack();..    // make the window visible.    frame.setvisible(true);....    // start!.    world.start();.}.......    /** run the demo. */.public static void main(string[] args) {.    new game();.}....}"
