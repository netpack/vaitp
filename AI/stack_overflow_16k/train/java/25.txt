"blank parsing alternative to current solution i have a text file to parse, that requires different logic depending on certain conditions. below, is my current solution that works. however, i find it very clunky, and have been looking into other solutions such as stringtokenizer or pattern class and am wondering i may be able to implement this more elegantly using them...do let me know if i should move this to the code review forum--i have not initially put it there, as i am unable to implement the other mentioned solutions...    file file = filechooser.getselectedfile();.    blank.io.bufferedreader reader = new blank.io.bufferedreader(new blank.io.filereader(file));..    memorymap = new hashmap&lt;integer, integer&gt;();.    registermap = new hashmap&lt;integer, integer&gt;();..    string line = reader.readline();.    while (line != null) {..        if (line.contains(""#"")) {.            system.out.println(line);.            line = reader.readline();.        }..        if (!character.isdigit(line.charat(0))) {.            system.out.println(line);.            string[] setfirstsplit = line.split("":"");.            if (setfirstsplit[0].equals(""m"")) {.                boolean isfirst = true;.                for (string setfirstsegment : setfirstsplit) {.                    if (!isfirst) {.                        string[] setsecondsplit = setfirstsegment.split("","");.                        for (string setsecondsegment : setsecondsplit) {.                            string[] setthirdsplit = setsecondsegment.split(""="");.                            for (string setthirdsegment : setthirdsplit) {.                                system.out.println(setthirdsegment);.                                memorymap.put(integer.parseint(setthirdsplit[0]), integer.parseint(setthirdsplit[1]));.                                system.out.println(""memory set result: "" + memorymap);.                            }.                        }.                    } else {.                        isfirst = false;.                    }.                }.            }.            if (setfirstsplit[0].equals(""r"")) {.                boolean isfirst = true;.                for (string setfirstsegment : setfirstsplit) {.                    if (!isfirst) {.                        string[] setsecondsplit = setfirstsegment.split("","");.                        for (string setsecondsegment : setsecondsplit) {.                            string[] setthirdsplit = setsecondsegment.split(""="");.                            for (string setthirdsegment : setthirdsplit) {.                                system.out.println(setthirdsegment);.                                registermap.put(integer.parseint(setthirdsplit[0]), integer.parseint(setthirdsplit[1]));.                                system.out.println(""register set result: "" + registermap);.                            }.                        }.                    } else {.                        isfirst = false;.                    }.                }.            }.            line = reader.readline();.        } else {.            system.out.println(line);.            string[] actionfirstsplit = line.split("" "");.            if (actionfirstsplit[1].equals(""load"")) {.                string[] actionsecondsplit = actionfirstsplit[2].split("","");.                loadstep action = new loadstep();.                action.executestep(integer.parseint(actionsecondsplit[0]), integer.parseint(actionsecondsplit[1]));.                system.out.println(""memory action result: "" + memorymap);.                system.out.println(""register action result: "" + registermap);.            }.            else {.                system.out.println(line);.            }.            line = reader.readline();.        }.    }.    reader.close();...the text file looks like this:..# sets the memory address 0 to store the value 1. m stands for memory..m:0=1,1=11.# all programs starts with an initial setup of values in memory such as the example shown above.0 load 1,3.1 load 0,2.2 add 1,2.3 add 0,1.4 lss 1,3,2.5 stor 62,1.6 stop"
