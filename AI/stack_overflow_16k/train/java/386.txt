"how does blank ""=="" work just curious about how does ""=="" work in blank?.i create two classes classobject1 and classobject2, both implement interface i_class.inside classobject1 and classobject2, i override the hashcode() and equals() functions, to make sure these two functions will return exactly same value for both these two classes...public interface i_class {..    public string getname();.}..public class classobject1 implements i_class{..    private string name="""";..    @override.    public int hashcode() {.        final int prime = 31;.        int result = 1;.        result = prime * result + ((name == null) ? 0 : name.hashcode());.        return result;.    }..    @override.    public boolean equals(object obj) {.        if (this == obj).            return true;.        if (obj == null).            return false;.        if (getclass() != obj.getclass()).            return false;.        classobject1 other = (classobject1) obj;.        if (name == null) {.            if (other.name != null).                return false;.        } else if (!name.equals(other.name)).            return false;.        return true;.    }..    @override.    public string getname() {.        return this.name;.    }.}.public class classobject2 implements i_class{..    private string name="""";..    @override.    public int hashcode() {.        final int prime = 31;.        int result = 1;.        result = prime * result + ((name == null) ? 0 : name.hashcode());.        return result;.    }..    @override.    public boolean equals(object obj) {.        if (this == obj).            return true;.        if (obj == null).            return false;.        if (getclass() != obj.getclass()).            return false;.        classobject2 other = (classobject2) obj;.        if (name == null) {.            if (other.name != null).                return false;.        } else if (!name.equals(other.name)).            return false;.        return true;.    }..    @override.    public string getname() {.        return this.name;.    }.}...i assume in this case..i_class obj1 = new classobject1();.i_class obj2 = new classobject2();.system.out.println(obj1 == obj2); // i assume here will write true...""=="" compares the memory address, doesn't it?"
