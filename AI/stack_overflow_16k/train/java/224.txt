"generalized programming for returning the element of a nearest to val need to implement the methods of a class much like blank.util.collections â€“ a.library class with static methods designed to provide useful functionality on general collections of elements. i know how to do this if they are integer elements. now i need to transform the code into generalized type. any help will be much appreciated!..from:..import blank.util.arrays;..public final class selector {..  private selector() {.  } ..  public static int nearest(int[] a, int val) {.      if (a == null || a.length == 0) {.         throw new illegalargumentexception(""a is null or has zero-length"");.      }.      int idx = 0;.      int distance = math.abs(a[0]-val);.      for (int c = 1; c &lt; a.length; c++) {.         int cdistance = math.abs(a[c] - val);.         if (cdistance &lt;= distance) {.            idx = c;.            distance = cdistance;.         }.      }.      int thenumber = a[idx];.      return thenumber;.   }..}...to ..import blank.util.collections;.import blank.util.collection;.import blank.util.arraylist;.import blank.util.iterator;..public final class selector {.  private selector() { }..  public static &lt;t&gt; t nearest(collection&lt;t&gt; c, t val, telemeter&lt;t&gt; tm) {.   ..   ..   ..  }.}...telemeter..import blank.util.comparator;..public interface telemeter&lt;e&gt; extends comparator&lt;e&gt; {.  double distance(e e1, e e2);.}"
