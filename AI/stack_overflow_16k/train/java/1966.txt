"how to switch off ""blank: variable might not have been initialized"" i have the following code:..public static void main( string[  ] args ){.    int begin, end;.    try{.        begin = integer.valueof( args[ 1 ] );.        end = integer.valueof( args[ 2 ] );.    }catch( numberformatexception conversion_error ){.        system.out.println( ""not a number."" );.        system.exit( 1 );.    }.    if( begin &gt;= end ){.        system.out.println( ""wrong arguments. ("" + begin + "" &gt;= "" + end + "")"" );.        system.exit(1);.    }.    system.out.print( ""ok."" );.    system.exit(0);.}...when i try to compile it, i get this error....  error:(13, 13) blank: variable begin might not have been initialized.  error:(13, 22) blank: variable end might not have been initialized...i understand why compiler is warning me, but the very purpose of my code is handling such situations: when variables are not initialized i shut down my program. in such case i never use them...i think that answer is fairly simple: initialize ""begin"" and ""end"" outside ""try"" block, for example by immediately assigning zeros to them...int begin = 0, end = 0;...but can i force compiler to just ignore the issue? is there any way to switch off such inquisitive checks of my code? it's not like there is any technical problem with my program, outside of possibly wrong values of my variables."
