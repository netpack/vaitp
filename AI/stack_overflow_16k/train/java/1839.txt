"find smallest number k , if exists, such that product of its digits is n. eg:when n = 6, smallest number is k=16(1*6=6) and not k=23(2*3=6) i have made this program using array concept in blank. i am getting exception as arrayindexoutofbound while trying to generate product...i made the function generatefnos(int max) to generate factors of the given number. for example a number 6 will have factors 1,2,3,6. now,i tried to combine the first and the last digit so that the product becomes equal to 6..i have not used the logic of finding the smallest number in that array right now. i will do it later. ..question is why i am getting exception as arrayindexoutofbound? [i couldn't figure out]..below is my code..public class smallestnoproduct {..    public static void generatefnos(int max) {.        int ar[] = new int[max];.        int k = 0;.        for (int i = 1; i &lt;= max; i++) {.            if (max % i == 0) {.                ar[k] = i;.                k++;.            }.        }.        smallestnoproduct(ar);.    }..    public static void smallestnoproduct(int x[]) {.        int j[] = new int[x.length];.        int p = x.length;.        for (int d = 0; d &lt; p / 2;) {.            string t = x[d++] + """" + x[p--];.            int i = integer.parseint(t);.            j[d] = i;.        }.        for (int u = 0; u &lt; j.length; u++) {.            system.out.println(j[u]);.        }.    }..    public static void main(string s[]) {.        generatefnos(6);.    }.}.****outputshown****..exception in thread ""main"" blank.lang.arrayindexoutofboundsexception: 6.    at smallestnoproduct.smallestnoproduct(smallestnoproduct.blank:36).    at smallestnoproduct.generatefnos(smallestnoproduct.blank:27).    at smallestnoproduct.main(smallestnoproduct.blank:52)...@edit..the improved code using array only...public class smallestnoproduct {.    public static void generatefnos(int max) {.        int s = 0;.        int ar[] = new int[max];.        int k = 0;.        for (int i = 1; i &lt;= max; i++) {.            if (max % i == 0) {.                ar[k] = i;.                k++;.                s++;.            }.        }.        for (int g = 0; g &lt; s; g++) {.            system.out.println(ar[g]);.        }.        smallestnoproduct(ar, s);.    }..    public static void smallestnoproduct(int x[], int s) {.        int j[] = new int[x.length];..        int p = s - 1;.        for (int d = 0; d &lt; p;) {.            string t = x[d++] + """" + x[p--];.            system.out.println(t);..            int i = integer.parseint(t);.            j[d] = i;.        }.        /*for (int u = 0; u &lt; j.length; u++) {.            system.out.println(j[u]);.        }*/.    }..    public static void main(string s[]) {.        generatefnos(6);.    }.}"
