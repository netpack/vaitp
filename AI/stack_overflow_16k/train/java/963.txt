"efficient way of processing byte array which contains a mixture of encodings i have some data in a byte array, retrieved earlier from a network session using non-blocking io (to facilitate multiple channels)...the format of the data is essentially..varint: length of text.utf-8: the text...i am trying to figure out a way of efficiently extracting the text, given that its starting position is undetermined (as a varint is variable in length). i have something that's really close but for one small niggle, here goes:..import com.clearspring.analytics.util.varint;.// some fields for your info.private final byte replybuffer[] = new byte[32768];.private static final charset utf8 = charset.forname (""utf-8"");..// ....  // code which extracts the text.    bytearrayinputstream byteinputstream = new bytearrayinputstream(replybuffer);.    datainputstream inputstream = new datainputstream(byteinputstream);.    int textlengthbytes;..    try {.      textlengthbytes = varint.readsignedvarint (inputstream);.    }.    catch (ioexception e) {.     // i don't think we should ever get an ioexception when using the.     // bytearrayinputstream class.       throw new runtimeexception (""unexpected ioexception"", e);.    }.    int offset = byteinputstream.pos(); // ** here lies the problem **.    string textreceived = new string (replybuffer, offset, textlengthbytes, utf8); ...the idea being that the text offset in the buffer is indicated by byteinputstream.pos(). however that method is protected...it seems to me that the only way to get the ""rest"" of the text after decoding the varint is to use something that copies it all into another buffer but that seems rather wasteful for me...constructing the string directly from the underlying buffer should be fine, because after this i don't care anymore for the state of byteinputstream or inputstream. so i am trying to figure out a way to calculate offset, or, put another way, how many bytes varint.readsignedvarint consumed. perhaps there is an efficient method of converting from the integer value returned by varint.readsignedvarint to the number of bytes that would have taken up in the encoding?"
