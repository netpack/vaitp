"print a downloaded file out in the console i have a simple http client server. here client can download from the server. from my code client can download the file. that's basically means a file from server folder is transferred  to the client successfully. what i want to do is to also show the downloaded file in the console. my question is how can i modify my code that is also shows the received file out the console...my server:..public class fileagent extends thread.      {.            socket client;..            datainputstream din;.            dataoutputstream dout;.            serversocket soc;.            printwriter w;.            bufferedreader r;. public fileagent(socket soc).      {.               try.        {.                 client=soc;      .                 din=new datainputstream(client.getinputstream());.                 dout=new dataoutputstream(client.getoutputstream());.                 w = new printwriter(client.getoutputstream(), true);.                 r= new bufferedreader(new inputstreamreader(client.getinputstream()));.                 bufferedreader con = new bufferedreader(new inputstreamreader(system.in));..          start();..         } ........................            public void upload() throws exception.         {  ...           string file=din.readutf();.           file f=new file(file);.           system.out.println(""nthe client requested to download the file""+"" ""+f);.           boolean exsists=check(f);..          if (exsists==false){.                system.out.println(""file not found in server"");.                out.writeutf(""error"");//if not found sends an error message.             return;.            }.         else.            {.             dout.writeutf(""found"");//if found in server sends a found message...           fileinputstream fin=new fileinputstream(f);.          int ch;.            //reads and sends the file.         do.         {.          ch=fin.read();.           dout.writeutf(string.valueof(ch));.        }.        while(ch!=-1); .        fin.close(); .          dout.writeutf(""file receive successfully""); .        }.         }...        public boolean check(file file){..        if(file.exists()).        {.           return true;.         }.             else.       {..        return false;.        }.       }...the client code to download:..                  public void download(socket s) throws exception{...         datainputstream din=new datainputstream(s.getinputstream());.          dataoutputstream dout=new dataoutputstream(s.getoutputstream());.         bufferedreader r = new bufferedreader(new inputstreamreader(s.getinputstream()));.          bufferedreader con = new bufferedreader(new inputstreamreader(system.in));.          printwriter w = new printwriter(s.getoutputstream(), true);.          string request;.            system.out.print(""enter file name :"");....        request=con.readline();.        dout.writeutf(request);.       string msg=din.readutf();...        if(msg.compareto(""error"")==0).       {.          system.out.println(""file not found on server ..."");.        return;.        }.       else if(msg.compareto(""found"")==0)    .  {.        system.out.println(""receiving file ..."");.        file f=new file(request);.        string option;.        boolean exsists=check(f);.        if(exsists==true).      {.        string option;.          system.out.println(""file already exists. want to overwrite (y/n) ?"");..         option=con.readline();   .           if(option==""n"") .            {.         dout.flush();.           return; .           }..         }...         fileoutputstream fileout=new fileoutputstream(f);.         int ch;.         string temp;.    do.   {.         temp=din.readutf();.         ch=integer.parseint(temp);.         if(ch!=-1).  {.    fileout.write(ch);     .   }.  }while(ch!=-1);.  fileout.close();.  system.out.println(din.readutf());.   system.out.println(""success"");.   }"
