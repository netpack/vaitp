"how to call the constructor of an abstract class from another constructor inside the same class (method overloading) i am extending the api of a class that i am working on and would like to make it backward compatible - so that it doesn't break any existing users of the class. i have created the new functionality by adding a new parameter to the constructor. ..so that i don't repeat code (i could copy-paste code from the old constructor into the new) i would like to change the existing constructor to call the new constructor passing 0 as the default for the new parameter but i am getting a compilation error, method call expected. ..is what i am trying to do not possible (method overloading is not supported?) or am missing something? ..to help show what i mean, please see the simple example below,..public abstract class abstractcalculator {..     int result;..     // new parameter being added .     public abstractcalculator(int a, int b){.         result = a + b;.     }..     // existing functionality       .     public abstractcalculator(int a){.         //compilation error here - method call expected.         abstractcalculator(a, 0);.     }.}...public class calculator extends abstractcalculator{..     public calculator(int a){.         super(a);.     }..     public static void main(string args []){..         calculator calc = new calculator(4);.         system.out.println(calc.getresult());..     }    .}"
