"two classes implementing interface with different type arguments class singleton{.   data&lt;a&gt; a;.   data&lt;b&gt; b;.   data&lt;c&gt; c;.   // ... etc.   class data&lt;o extends i&lt;o&gt;&gt;{.       o o;.       public void update(o o){.          this.o.update(o);.       }   .   }.}.interface i&lt;t&gt;{.   void update(t t);.}..class a implements i&lt;a&gt;{..    private string a;..    @override.    public void update(a a) {.        this.a = a.a;.    }.}..class b extends a implements i&lt;b&gt;{..    private string b;..    @override.    public void update(b b) {.       super.update(b);.       this.b = b.b;.    }.}.class c implements i&lt;c&gt; {public void update(c c){}}...this code cannot be compiled, because super and sub-classes trying to implements the same interface but with different type arguments...interface i cannot be inherited with different type arguments (a,b), anyone has a workaround to solve this?"
