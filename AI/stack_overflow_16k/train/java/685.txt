"quadratic formula solution issue i need some help with a program that i am trying to create. this is a quadratic equation formula, where i have 2 classes. ..the only issue that i am getting is code ..""quadraticequation equation = new quadraticequation(a, b, c);"" ...i am getting the error that says:..exception in thread ""main"" blank.lang.error: unresolved compilation problem: .no enclosing instance of type testquadraticequation is accessible. must qualify the allocation with an enclosing instance of type testquadraticequation (e.g. x.new a() where x is an instance of testquadraticequation)...at testquadraticequation.main(testquadraticequation.blank:12)    ...this error is occurs at line 12 (code above) and i need to find out what is wrong with that section...public class testquadraticequation .{.    public static void main (string [] args).{.    blank.util.scanner scan = new blank.util.scanner(system.in);.    system.out.println(""please enter the coefficients a, b and c in the order: "");.    double a = scan.nextdouble();.    double b = scan.nextdouble();.    double c = scan.nextdouble();..    quadraticequation equation = new quadraticequation(a, b, c);..    if (equation.getdiscriminant() &gt; 0).    {.        system.out.println(""the roots of the equations are "" + equation.getroot1().        + "" and "" + equation.getroot2());.    }.    else.    {.        system.out.println(""the equation has no roots."");.    }.}.class quadraticequation.{.    private double a;.    private double b;.    private double c;..    quadraticequation().    {.        a = 0;.        b = 0;.        c = 0;.    }..    quadraticequation (double newa, double newb, double newc).    {.        a = newa;.        b = newb;.        c = newc;.    }..    public double geta().    {.        return a;.    }.    public double getb().    {.        return b;.    }.    public double getc ().    {.        return c;.    }..    public double getdiscriminant().    {.        return (math.pow(b,2) - 4 * a * c);.    }..    public double getroot1().    {.        return ((-b + math.sqrt(getdiscriminant())/(2 * a)));.    }..    public double getroot2().    {.        return ((-b - math.sqrt(getdiscriminant())/(2 * a)));.    }.}...}"
