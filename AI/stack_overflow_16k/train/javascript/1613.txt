"how to get blank object method name? i'm currently building a bigger object and need to get faster and more specific with debugging/inspecting values/results/returns...now i thought about the following:..var myobject = {.    whatever: null,.    whereever: null,.    debug: false,..    somefunction: function( arg ) {.        // general - would output *all* logs for all object functions..        // if ( true === myobject.debug ).        //  console.log( 'functionnamehere', arg );..        // more specific - would output *only* the log for the currently targeted function.        if ( 'functionname' === myobject.debug ).            console.log( 'functionnamehere', arg );.    },.};...this would allow me to simply define the object var debug as one function name and only log this part...the only problem is: how would i obtain the functionname/somefunction?..sidenotes: ...console.log( arguments.callee ); gives me the whole function source..console.log( arguments.callee.name ); returns empty..console.log( arguments.callee.tostring() ); returns empty.console.log( arguments.caller ); returns undefined...if i take a look into the log of the whole object, i see prototype.name=""empty"" and such. so no chance to get it directly out of the object...thanks!"
