"sorting an unordered list with blank i have an unordered list...this list has elements with checkboxes in it. if you check in a checkbox, the list element goes to the bottom of the list. when you check out one of the checkboxes, it has to go back to its original place. so far, i managed...but. take the following situation: you checked in all the checkboxes, and they seem to align according to their original place. now, when you check out a list element, it will stuck between to other elements, which are on their place, but they are checked in. i want that in that case, the checked off box will be the first in the list. then, when you check off the next box, that one will now be on the right place, aligning with thee unchecked boxes only...tl;dr:..i have to make a to do list, the 'done' elements go to the bottom, the undone elements sorted above, according to their timestamp...http://codepen.io/balazsorban44/pen/mavqmk..    &lt;!doctype html&gt;.&lt;html&gt;.  &lt;head&gt;.    &lt;title&gt;a todo list&lt;/title&gt;.    &lt;style media=""screen""&gt;.      *{.        margin:0;.        padding: 0;.        font-family: sans-serif;.        color: gold;.        font-weight: bolder;.        font-size: 1em;.        border: none;.      }.      body{.        display: flex;.        justify-content: center;.        align-items: center;.        min-height: 100vh;.        width: 100vw;.        background: #333;.      }.      #content{.        border: 1px solid #333;.        padding: 20px;.        border-radius: 10px;.        display: flex;.        flex-direction: column;.        align-items: center;.        background-color: gold;.        box-shadow: 0px 0px 4px 4px rgba(0,0,0,.2);.      }.      h1,h2{.        display: block;.        color: #444;.        font-size: 1.3em;.        padding: 10px;.        align-self: flex-start;.      }.      h2{.        font-size: 1.1em.      }.      input{.        color: #333;.        padding: 5px;.        border-radius: 5px;.        border: 1px solid #333;.        box-shadow: inset 0px 0px 3px rgba(0,0,0,.3).      }.      input:focus{.        outline: none.      }.      button{.        background: #333;.        border-radius: 5px;.        padding: 5px 10px;.        max-width: 50%;.        margin-top:15px;.        cursor: pointer.      }.      ul li{.        list-style-type: none;.        color:#333;.        min-width: 100px;.        padding: 5px;.        align-self: flex-start;.      }.      ul li input{.        margin: 0 5px.      }..    &lt;/style&gt;.  &lt;/head&gt;.  &lt;body onload=""loaded()""&gt;.    &lt;div id=content&gt;.      &lt;h1&gt;a very nice to do list&lt;/h1&gt;.      &lt;div&gt;.        &lt;input id=""todo-input"" type=""text"" name=""todo-input"" value="""" placeholder=""click + or press enter."" onkeydown=""enter()""&gt;.        &lt;button type=""button"" name=""button"" onclick=""addtask()""&gt;+&lt;/button&gt;.      &lt;/div&gt;.      &lt;h2&gt;your todo list (done/all): &lt;output&gt;/&lt;/output&gt;&lt;/h2&gt; .      &lt;ul id=""tasks""&gt;..      &lt;/ul&gt;.    &lt;/div&gt;.    &lt;script type=""text/blank""&gt;.    const inputarea= document.getelementbyid('todo-input').    const list = document.getelementbyid(""tasks"");.    tasks = [];...    function loaded(){.      inputarea.focus();.    }..    function addtask(){.      const newtask = document.createelement(""li"").      const text = document.createtextnode(inputarea.value).      const checkbox = document.createelement(""input"");..      newtask.appendchild(text);.      list.insertbefore(newtask, list.childnodes[0]);.      checkbox.setattribute(""type"", ""checkbox"");.      checkbox.setattribute(""onclick"", ""togglecheckbox()"");.      list.childnodes[0].insertbefore(checkbox, list.childnodes[0].childnodes[0]);.      tasks.push({timestamp: new date(), task: inputarea.value});.      list.childnodes[0].id=tasks[tasks.length-1].timestamp.gettime();.      inputarea.value ="""";.      inputarea.focus();.    }..    function enter(){.      if(event.keycode == 13) {.          addtask().        }.    }..    function togglecheckbox(){.      const task = event.target.parentnode.      if (task.style.textdecoration == '') {.        task.style.textdecoration = 'line-through';.        list.appendchild(task).      }.      else {.        task.style.textdecoration = ''.        for (var i = 0; i &lt; tasks.length; i++) {.          if (task.id &gt; list.childnodes[i].id) {.            list.insertbefore(task, list.childnodes[i]);.            break.          }.        }.      }.    }..    &lt;/script&gt;.  &lt;/body&gt;.&lt;/html&gt;"
