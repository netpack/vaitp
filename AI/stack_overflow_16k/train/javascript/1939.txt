"does defining a variable use more resources than overwriting a variable in js? if you plan to use a function that will overwrite the value of a variable many times, is it bad for performance to use var in the line that does the overwriting?..for example,..option 1..var currenttile;.function setcurrenttile(index) {.    currenttile = $scope.tiles[index];.}...option 2..function setcurrenttile(index) {.    var currenttile = $scope.tiles[index];.}...historically, i've been using option #1 because it seemed intuitive to reduce the number of var's in my code. but maybe it makes no difference and using the less verbose approach is more ideal...can anyone advise?....update for context..we generate a long array like below,..function prepgame() {.    // generate tile pattern.    var tiles = [];.    var times = 30;.    for ( var i = 0; i &lt; times; i++ ) {.        tiles.push(math.floor(math.random() * 9));.    }.    $scope.tiles = tiles;.}...then iterate through it, passing the values to setcurrenttile(index). so option 1 or option 2 would be called 30 times."
