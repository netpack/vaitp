"sort object by skills so i found a problem in an article (can't find the link or i'd have the solution) that asked the following question. ..given some user data sort users by skill. the following is the data..const namesandskills = {.   // dev : skills.   mark : [""blank"",""react"",""java""],.   rob : ""blank"",.   patrick : [""blank"", ""react"", ""python""]. } ..solution(expected output):..  blank: [""mark"", ""rob"", ""patrick""],.  react: [""mark"", ""patrick""],.  java: mark,.  python: patrick...my solution has only been able to separate the skills from the users, but i can't seem to find a way to compare the users with the skills.....const data = {.  // // dev : skills.  mark: [""blank"", ""react"", ""java""],.  rob: ""blank"",.  patrick: [""blank"", ""react"", ""python""].}..function swapnamesandskills(object) {.  let data = object.entries(object); //was thinking of using the separated entries to compare, but couldn't evaluate correctly...  //create a map to store our end key / values.  let skillstonames = new map();.  let skills = [].concat(...object.values(object));.  for (let i = 0; i &lt; skills.length; i++) {.    //if map doesnt have the skill as a key, add skill.    if (!skillstonames.has(skills[i])) {.      //array of names that have the skill.      skillstonames.set(skills[i], []);.    }.  }.  console.log(skillstonames);.}.swapnamesandskills(data);.....as you see i was looking at ways forward, but can't seem to land a solid way to reverse the data. solution doesn't have to solve the problem, i'm just stuck and can't find my way to the finish line."
