"need help understanding how to define both static and instantiatable classes in blank current broken code: http://jsfiddle.net/9f52n/2/..what i'm trying to do: learn how to define an object/function that behaves like a class, and be able to define subclasses, both static , and instantiatable (singleton in my example below).  ..currently, my code below doesn't work all that well. but, if the instantiatable class sand the static class were removed, you'll see that i have the very basics of class creation down...so, i guess my question is: what is the proper / most semantic way to define nested clases (singleton or otherwise) with the way i've defined tbr? (function(){...})(window)..var tbr = (function() {.    // define local copy of taco bell run.    var tbr = function() {.        return new tbr.fn.init();.    },.        message = ""hello world!"";..    tbr.fn = tbr.prototype = {.        constructor: tbr,.        init: function() {.            console.log(""from tbr constructor: "" + message);.        }.    }..    var instantiatableclass = function() {.        return new tbr.instantiatableclass, fn.init();.    }..   instantiatableclass.fn =instantiatableclass.prototype = {.        constructor: tbr.instantiatableclass,.        init: function() {.            console.log(""from instantiatableclass: "" + message);.        }.    }..    this.staticclass = function() {.        var submessage = ""little world"";.        init = function() {.            console.log(""from staticclass: "" + submessage);.        }.    }.    // expose tbr to the window object.    window.tbr = tbr;..})(window);"
