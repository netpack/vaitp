"defining an indexer for an object one can make an object iterable by implementing [symbol.iterator]...but how can one override the behavior of the [] operator?..for example i have a an object which has an array inside of it and i want to be able to access that given an index like obj[3]. ..is that possible? ..example..const signalarray = (data = []) =&gt; {.....return {.        add,.        remove,.        onadd,.        onremove,.        onsort,.        removeonadd,.        removeonremove,.        removeonsort,.        [symbol.iterator]() {.            return {.                next: () =&gt; {.                    if (index &lt; data.length) {.                        return { value: data[index++], done: false };.                    } else {.                        index = 0; .                        return { done: true };.                    }.                }.            }.        }.    }.}"
