"how to randomize json object and not repeat its value i have a piece of code that i'm been working it and i'm new to json, i'm implementing a randomizer for my quiz and it works, but the problem is it repeats the question. how can i make it not repeat the question when it has been already asked? here's my code. ..      var quiztitle = ""abstraction"";.    /**.     * set the information about your questions here. the correct answer string needs to match.     * the correct choice exactly, as it does string matching. (case sensitive).     *.     */.    var quiz = [{.            ""question"": ""which of these keywords are used to define an abstract class?"",.            ""image"": """",.            ""choices"": [.                ""abst"",.                ""abstract"",.                ""abstract"",.                ""abstract class"".            ],.            ""correct"": ""abstract"",.            ""explanation"": """",.        },.        {.            ""question"": ""which of these is not abstract?"",.            ""image"": """",.            ""choices"": [.                ""thread"",.                ""abstractlist"",.                ""list"",.                ""none of the mentioned"".            ],.            ""correct"": ""thread"",.            ""explanation"": ""explanation: thread is not an abstract class."",.        },.        {.            ""question"": ""if a class inheriting an abstract class does not define all of its function then it will be known as?"",.            ""image"": """",.            ""choices"": [.                ""abstract"",.                ""a simple class"",.                ""static class"",.                ""none of the mentioned"".            ],.    ];.    /******* no need to edit below this line *********/.    var currentquestion = 0,.        score = 0,.        submt = true,.        picked;.    jquery(document).ready(function($) {.        /**.         * html encoding function for alt tags and attributes to prevent messy.         * data appearing inside tag attributes..         */.        function htmlencode(value) {.            return $(document.createelement('div')).text(value).html();.        }.        /**.         * this will add the individual choices for each question to the ul#choice-block.         *.         * @param {choices} array the choices from each question.         */.        function addchoices(choices) {.            if (typeof choices !== ""undefined"" &amp;&amp; $.type(choices) == ""array"") {.                $('#choice-block').empty();.                for (var i = 0; i &lt; choices.length; i++) {.                    $(document.createelement('li')).addclass('choice choice-box').attr('data-index', i).text(choices[i]).appendto('#choice-block');.                }.            }.        }..        /**.         * resets all of the fields to prepare for next question.         */.        function nextquestion() {.            submt = true;.            $('#explanation').empty();.            $('#question').text(quiz[currentquestion]['question']);.            $('#pager').text('question ' + number(currentquestion + 1) + ' of ' + quiz.length);.            if (quiz[currentquestion].hasownproperty('image') &amp;&amp; quiz[currentquestion]['image'] != """") {.                if ($('#question-image').length == 0) {.                    $(document.createelement('img')).addclass('question-image').attr('id', 'question-image').attr('src', quiz[currentquestion]['image']).attr('alt', htmlencode(quiz[currentquestion]['question'])).insertafter('#question');.                } else {.                    $('#question-image').attr('src', quiz[currentquestion]['image']).attr('alt', htmlencode(quiz[currentquestion]['question']));.                }.            } else {.                $('#question-image').remove();.            }.            addchoices(quiz[currentquestion]['choices']);.            setupbuttons();.        }.        /**.         * after a selection is submitted, checks if its the right answer.         *.         * @param {choice} number the li zero-based index of the choice picked.         */.        function processquestion(choice) {.            if (quiz[currentquestion]['choices'][choice] == quiz[currentquestion]['correct']) {.                $('.choice').eq(choice).css({.                    'background-color': '#50d943'.                });.                $('#explanation').html('&lt;strong&gt;correct!&lt;/strong&gt; ' + htmlencode(quiz[currentquestion]['explanation']));.                score++;.            } else {.                $('.choice').eq(choice).css({.                    'background-color': '#d92623'.                });.                $('#explanation').html('&lt;strong&gt;incorrect.&lt;/strong&gt; ' + htmlencode(quiz[currentquestion]['explanation']));.            }.            shufflearray(quiz);.            currentquestion++;.            $('#submitbutton').html('next question &amp;raquo;').on('click', function() {.                if (currentquestion == quiz.length) {.                    endquiz();.                } else {.                    $(this).text('check answer').css({.                        'color': '#222'.                    }).off('click');.                    nextquestion();.                }.            }).        }.        /**.         * sets up the event listeners for each button..         */.        function setupbuttons() {.            $('.choice').on('mouseover', function() {.                $(this).css({.                    'background-color': '#e1e1e1'.                });.            });.            $('.choice').on('mouseout', function() {.                $(this).css({.                    'background-color': '#fff'.                });.            }).            $('.choice').on('click', function() {.                picked = $(this).attr('data-index');.                $('.choice').removeattr('style').off('mouseout mouseover');.                $(this).css({.                    'border-color': '#222',.                    'font-weight': 700,.                    'background-color': '#c1c1c1'.                });.                if (submt) {.                    submt = false;.                    $('#submitbutton').css({.                        'color': '#000'.                    }).on('click', function() {.                        $('.choice').off('click');.                        $(this).off('click');.                        processquestion(picked);.                    });.                }.            }).        }..        /**.         * randomize array element order in-place..         * using durstenfeld shuffle algorithm..         */.        function shufflearray(array) {.            for (var i = array.length - 1; i &gt; 0; i--) {.                var j = math.floor(math.random() * (i + 1));.                var temp = array[i];.                array[i] = array[j];.                array[j] = temp;.            }.            return array;.        }.        /**.         * quiz ends, display a message..         */.        function endquiz() {.            $('#explanation').empty();.            $('#question').empty();.            $('#choice-block').empty();.            $('#submitbutton').remove();.            $('#question').text(""you got "" + score + "" out of "" + quiz.length + "" correct."");.            $(document.createelement('h2')).css({.                'text-align': 'center',.                'font-size': '4em'.            }).text(math.round(score / quiz.length * 100) + '%').insertafter('#question');.        }.        /**.         * runs the first time and creates all of the elements for the quiz.         */.        function init() {.            //add title.            if (typeof quiztitle !== ""undefined"" &amp;&amp; $.type(quiztitle) === ""string"") {.                $(document.createelement('h1')).text(quiztitle).appendto('#frame');.            } else {.                $(document.createelement('h1')).text(""quiz"").appendto('#frame');.            }.            //add pager and questions.            if (typeof quiz !== ""undefined"" &amp;&amp; $.type(quiz) === ""array"") {.                //add pager.                $(document.createelement('p')).addclass('pager').attr('id', 'pager').text('question 1 of ' + quiz.length).appendto('#frame');.                //add first question.                $(document.createelement('h2')).addclass('question').attr('id', 'question').text(quiz[0]['question']).appendto('#frame');.                //add image if present.                if (quiz[0].hasownproperty('image') &amp;&amp; quiz[0]['image'] != """") {.                    $(document.createelement('img')).addclass('question-image').attr('id', 'question-image').attr('src', quiz[0]['image']).attr('alt', htmlencode(quiz[0]['question'])).appendto('#frame');.                }.                $(document.createelement('p')).addclass('explanation').attr('id', 'explanation').html('&amp;nbsp;').appendto('#frame');..                //questions holder.                $(document.createelement('ul')).attr('id', 'choice-block').appendto('#frame');..                //add choices.                addchoices(quiz[0]['choices']);..                //add submit button.                $(document.createelement('div')).addclass('choice-box').attr('id', 'submitbutton').text('check answer').css({.                    'font-weight': 700,.                    'color': '#222',.                    'padding': '30px 0'.                }).appendto('#frame');..                setupbuttons();.            }.        }..        init();.    });"
