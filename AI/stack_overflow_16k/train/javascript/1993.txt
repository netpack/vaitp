"can you mix blank object literals and prototypes in a js library code structure? i have a blank library i am building which currently uses object literals and i am now rebuilding it to use prototypes instead...below is a part of my current app which you can see keeps several template parsing functions organized under a templates object.....object literal format to keep related functions organized..templates: {..    parse: function(template, data){..    },...    sidebartemplate: function() {..    },..    sidebarpaneltemplate: function(paneloptionsobj) {..    },..    sidebarpanelbackbuttontemplate: function(paneloptionsobj) {..    },...    sidebarpanelloadertemplate: function(paneloptionsobj) {..    },.},.....now below is the format of my new prototype design.....prototype format../**. * example prototype library structure. * . * @param  {[type]} $         [description]. * @param  {[type]} window    [description]. * @param  {[type]} document  [description]. * @param  {[type]} undefined [description]. * @return {[type]}           [description]. */.(function($, window, document, undefined) {..    'use strict';..    var defaults = {.        fullscreen: true.    };..    var sidebar = function(element) {..        // you can access all corejs variables and functions like this..        this.core = $(element).data('corejs');..        this.$el = $(element);.        this.core.s = $.extend({}, defaults, this.core.s)..        this.init();..        return this;.    }..    sidebar.prototype.init = function() {..    };..    /**.    * destroy function must be defined..    * corejs will automatically call your module destroy function .    * before destroying the gallery.    */.    sidebar.prototype.destroy = function() {..    }..})(jquery, window, document);.....question..using my new prototype format, is there anyway to organize related functions like my template ones above for example?"
