"how do i append an html string containing many nodes directly to an existing dom element with utmost performance in mind? my question is if anybody has any ideas in how to append an html string containing many nodes directly to an existing dom element with utmost performance in mind. ..let me explain what i am doing. i am creating a blank templating script. right now it is wicked fast. i'm able to render 40,000 multi-array items from json as html nodes into the dom in just over 3 seconds (chrome 16 running on osx macbook pro). ..after i have parsed the string i insert it into a newly created span tag via .innerhtml and then append that span tag to the dom. its bloody quick, efficient and slick, but damn, it just won't work. why? because it wraps the nodes with an extraneous tag and this will, undoubtedly in some cases, interfere with css and who knows what else. so, i need to be able to append multiple newly created dom nodes directly under an existing html tag...so i switched from appending the span tag (along with all of its html assigned via innerhtml) to looping through each child node of that span and appending them separate. but, man, is it much slower! it takes almost 20 seconds to render 40,000 entries as opposed to 3 seconds. ..and i'm steering clear of jquery for this specific project. and, no, i'm never anticipating having 40,000 items rendered to a page in a real world situation. i'm just doing this to test the speed. i want the script to be absolutely as fast as possible."
