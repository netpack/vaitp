"js scope convention for third (and greater) nested scopes if you need to keep scope in a nested function, it is convention to make a variable that that is the the this like so: var that = this; and reference that in the nested function.   what is the convention name for the 3rd degree and beyond?..i have also come across a few situations where proxy is used, but have never had to pass nested proxy in jquery.  is there anything special for nested proxys..regular scope issue came up in backbone, with a potential (we are still working through it) to have to go another level down:..keypressed: function(keyevent) {.if(case1 &amp;&amp; case2 &amp;&amp; case3) {.  if(anothercase) {.    ......  }.  else if(yetanothercase) {.    .....    var that = this;.    window.waitintervalid = window.setinterval(function() {.      if(that.waitcount == 2) {.        that.iswaiting = false;.        that.waitcount = 0;..        that.maincounter = 0;.        that.isrecording = true;.        for(var i = 0; i &lt; that.signature; i++) {.          that.beatarray[i] = 0;.        }.        window.tapintervalid = window.setinterval(function() {.          that.count = that.maincounter + 1;              .          that.maincountertime = new date().gettime();.          that.maincounter = (that.maincounter + 1) % that.signature;.        }, that.average);.        that.istapping = false;.        that.countin = 1;.        var bpm = 1000 / that.average * 60;.        that.set('tempo', bpm);.        window.clearinterval(waitintervalid);.      }.      that.waitcount++;.    }, this.average);.    this.countin++;.  }.}.},...proxy scope : ..    // add click handler to this beat.    $('#beat'+this.model.cid).click($.proxy(this.toggle, this));.    return this;"
