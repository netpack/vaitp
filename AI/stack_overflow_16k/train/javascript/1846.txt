"how much memory is an empty blank object? option a:..myobj = {.    a: 'a',.    a1: 'a1',.    a2: 'a2',.    a2a: 'a2a',.    a2b: 'a2b',.    a3: 'a3',.    a3a: 'a3a',.    a3a1: 'a3a1',.    a3a2: 'a3a2',.    b: 'b',.    // ....};...vs.  option b:..myobj = {.    a: {.        a1: 'a1',.        a2: {.            a2a: 'a2a',.            a2b: 'a2b'.        },.        a3: {.            a3a: {.                a3a1: 'a3a1',.                a3a2: 'a3a2'.            }.        }.    },.    b: { ... }.};...i'm weighing this as a design decision.  here's a simpler case:..option a:..eventhandler: {.    triggerobj: triggerobj,.    triggeraction: triggerobj.somemethod,.    responseobj: responseobj,.    responseaction: responseobj.somemethod.}...vs. option b:..eventhandler: {.    trigger: {.        obj: triggerobj,.        action: triggerobj.somemethod.    },.    response: {.        obj: responseobj,.        action: responseobj.somemethod.    }.}...i'm pretty sure this is like the eye doctor:  they're so close, it doesn't really matter.  however, thought i'd see if there are any solid reasons for performance, or just for semantic/readability/other...relating back to the question title: how many extra object braces would be necessary to have a notable performance issue?  i doubt even a few 1000 or even a 1,000,000 would matter much :-"
