"recursive evenness check returns undefined there is an exercise in eloquent blank whose wording is:...  recursion.  .  we’ve seen that % (the remainder operator) can be used to test whether.  a number is even or odd by using % 2 to check whether it’s divisible by.  two. here’s another way to define whether a positive whole number is.  even or odd:.  .  .  zero is even..  one is odd..  for any other number n, its evenness is the same as n - 2..  .  .  define a recursive function iseven corresponding to this description. the.  function should accept a number parameter and return a boolean..  .  test it on 50 and 75. see how it behaves on -1. why? can you think.  of a way to fix this?...they provide a solution, and i’ve already written a working implementation, but another always returns undefined; why is this?..var iseven = function ( a ) {.    var r = false;.    if ( a === 0 || a === 1 ) {.        a === 0 ? r = true : r ;.        return r;.    } else.        a &lt; 0 ? iseven(-1 * a) : iseven(a - 2);.};..console.log(iseven(50));...when the number is not 0 or 1, the else branch seems to work fine; the problem, i think, is in the if branch."
