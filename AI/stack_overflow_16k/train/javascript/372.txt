"is there any way to add a new parameter to a function programmatically? since i can determine the number of arguments a function expects to have by calling its function.length property, is there any way for me to programmatically create the right number of parameters to insert into that function at runtime? example: ..var xyz = function(a,b) {};.var bcd = function(a,b,c,d,e,f) { }; // vararg example.var doc = document, func_length = xyz.length;.doc.xyz = (function() {..   return function(a,b,c,d,e) { /* works for one but not the other */ } }).call(doc);..   /* would prefer to `return function(a,b)` with only 2 parameters, if it is.   used for function `xyz` (though returning 5 works fine in this case), and to.   `return function(a,b,c,d,e,f)` with 6 if used for function `bcd` (which does.   not work with only five params). */..   // thinking about xyz.apply(null,arguments)...but which arguments..? :(..   // returning function(a,b,c,d,e) does not support functions with more than five .   // parameters...which would mostly be varargs - hence my question..   // i am also well aware that i can use an object or an array instead of.   // using many params...   /* this is for incorporating a user-defined function for use in my code, while .    * allowing for my function to do 'other stuff' afterward. (and allowing for .    * varargs, of course)..    * because coding something like: doc.xyz = xyz is inflexible */...as you can see, i don't know how to do this, or if it is even possible. the search bar hasn't given me any other questions like this one, otherwise i would not have asked..."
