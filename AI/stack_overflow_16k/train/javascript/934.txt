"filtering array of objects and nested objects i have an array of objects that looks like this:..  var data = [.  {.    type: ""parent"",.    children: [.      {.        type: ""parent"",.        children: [.            {.              type: ""parent"".            },.            {.              type: ""parent"",.              children: [.                {.                 type: ""notparent"".                },.                {.                 type: ""parent"".                }.              ].            }.        ].      }.    ].  },.  {.    type: ""parent"",.    children: [.      {.        type: ""parent"".      }.    ].  },.  {.    type: ""parent"",.    children: [.      {.        type: ""parent"",.        children: [.          {.            type: ""parent"".          },.          {.            type: ""parent"".          }.        ].      },.      {.        type: ""notparent"".      }.    ].  },.  {.    type: ""notparent"".  }.]...this data is an array of objects, and can have objects deeply nested. what i want to do is to create a new array that only contains the objects with the type: ""parent"" and remove all others. i am finding it hard to make this work for deeply nested objects. i have tried many variations of the following: ..        var findallparents = function(obj, type) {.            if(obj.type === type) { return obj; }.            for(var i in obj) {.                if(obj.hasownproperty(i)){.                    var foundparents = findallparents(obj[i], type);.                    if(foundparents) { return foundparents; }.                }.            }.            return null;.        };...i would like for this to return data like this:..  var data = [.  {.    type: ""parent"",.    children: [.      {.        type: ""parent"",.        children: [.            {.              type: ""parent"".            },.            {.              type: ""parent"",.              children: [.                {.                 type: ""parent"".                }.              ].            }.        ].      }.    ].  },.  {.    type: ""parent"",.    children: [.      {.        type: ""parent"".      }.    ].  },.  {.    type: ""parent"",.    children: [.      {.        type: ""parent"",.        children: [.          {.            type: ""parent"".          },.          {.            type: ""parent"".          }.        ].      }.    ].  }.]...only to return all objects with type: ""parent"""
