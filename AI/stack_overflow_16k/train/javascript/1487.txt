"how to create new instance of parent class in blank i have a class that inherits from another. within the base class, i'm wondering if it is possible to create and return a new instance of the calling parent class. ..here's an example:..base:..var util = require('util');..var thingbase = function(options) {.}..thingbase.prototype.mapper = function(data) {.  // do a bunch of stuff with data and then.  // return new instance of parent class.};...parent:..var foothing = function(options) {.  thingbase.call(this, options);.};..util.inherits(foothing, thingbase);..foothing.somemethod = function() {.  var data = 'some data';.  var newfoothing = this.mapper(data); // should return new foothing instance.};...the reason why i wouldn't just create a new instance from somemethod is that i want mapper to do a bunch of stuff to the data before it returns an instance. the stuff it will need to do is the same for all classes that inherit from base. i don't want to clutter up my classes with boilerplate to create a new instance of itself...is this possible? how might i go about achieving something like this?"
