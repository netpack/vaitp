"blank function fails return value i am a little baffled by this, but i have written a function that counts the number of dimensions in an array.  this code executed just fine in my work environment, but now that i am in my personal environment, the function (countdims()) no longer returns a value.  it appears to execute all the way up to the return statement.  here is the jsfiddle.  thoughts on why this might be?..and a snippet.....function constantarray(val,...dim){.  // function returns an nd-array of the given constant value. note that the ellipsis in.  // the function definition enables a variable number of arguments. note that at least one.  // dimension value must be given, and all desired dimension extents must be defined as.  // integer lengths..  arr_out = [];.  // the initial value forms the kernel of the array.  for (i = 0; i &lt; dim[dim.length - 1]; i++) {.    arr_out.push(val);.  }.  // reducing the dimension list on each pass provides a natural stopping point for recursion.  dim.pop(dim[dim.length - 1]);.  if (dim.length == 0) {.    return arr_out;.  }.  else {.    // note that the ellipsis in the function call allows us to pass the remaining dimensions.    // as a list. in this context, the ellipsis is the ""spread"" operator..    return constantarray(arr_out, ...dim);.  }.}..function countdims(arr, dim_cnt){.  // function returns the number of dimensions in an array. note that we keep the dimension.  // count in the function arguments to ease updating during recursive calls..    if (dim_cnt == undefined) {dim_cnt = 0};.    if (array.isarray(arr)) {.    dim_cnt++;.    countdims(arr[0], dim_cnt);.    }.    else {.      console.log(""the dimension count of this array is ""+dim_cnt);.      console.log(""i am in the return space!"").      return dim_cnt;.    }.}..x = constantarray(0, 4, 5).console.log(x).x_dims = countdims(x).console.log(x_dims)"
