"de-structure expected event parameter to just the target property , using array. find method am a newbie and am taking a challenge i got stucked. below is the problem..create a getselecteduser arrow function . it should take a userid parameter and use the array.find function on the users collection to find and return the selected user object. the .find call should take an inline arrow function and de-structure its parameter to obtain the id property in the users array...displayselecteduser is and event handler i need the function to de-structure the expected event parameter to just the target property...next, displayselecteduser should call getselecteduser with a certain property of target that represents the selected value of the select element from the change event. finally, assign the result ofthe .getselecteduser call to a user variable...next, use object.keys(..) to get the collection of properties of user. assign it to a properties variable...iterate over properties with the array .foreach function, and display the properties in the ui. a given property like *age has a corresponding span element with a data-age-value attribute. you can use es6 template strings to build the query selector targeting the span for that property, and then query the dom with it. you also want to make sure you only update the ui if the dom query was successful..this is my code .. const users = [];..  const getselecteduser = (userid) =&gt; {..    return users.find(({id}) =&gt; id === userid);.  };...  const displayselecteduser = ({event}) =&gt; {.     const selectuser = event.target; .     const value = selectuser.value; ..    getselecteduser(id); .  };..  const poweruptheui = () =&gt; {.    document.queryselector('select').addeventlistener('change', displayselecteduser);..    document.queryselector('#oracle').addeventlistener('click',  letscalculatebmi);..  };..  const displayusers = (users) =&gt; {.    users.foreach(user =&gt; {.      const select = document.queryselector('select');.      const option = document.createelement('option');..      option.text = user.name; .      option.value = user.id;.      select.appendchild(option);.    });..  };..  const fetchanddisplayusers = () =&gt; {.    users.push({.      age: 40,.      weight: 75,.      height: 6,.      country: 'nigeria',.      name: 'charles odili',.      id: 'dfhb454768dghtf'.    });..    users.push({.      age: 40,.      weight: 75,.      height: 6,.      country: 'nigeria',.      name: 'peter odili',.      id: 'gydf4'.    });..    displayusers(users);.  };..  const startapp = () =&gt; {..    poweruptheui();.    fetchanddisplayusers();.  };..  startapp();"
