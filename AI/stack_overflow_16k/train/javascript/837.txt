"changing function parameters in blank? say i have a blank function like below:..myfunction: function(data, callback){.  //do stuff.}...say i now want to add another parameter to this function.  lets call if flag.  i also don't want to change function calls all over the place.  it seems to me that most blank functions include their callback as the last parameter.  does this mean that i should alter the function like so:..myfunction: function(data, flag, callback){.  //do stuff.}...or is it better to alter it like so:..myfunction: function(data, callback, flag){.  //do stuff.}...the first method allows the callback to be at the end, but if i go this route i will need to add something to handle all old calls that pass the call back as the second parameter.  something like:..if (_.isfunction(flag)) {.  oncomplete = flag;.  return retall = false;.}...the second method looks a little strange and would require me to do something like this in order to handle old calls that do not include a third parameter:..if (flag == null) {.  flag = false;.}...is there a generally accepted way to handle the order of parameters in situations like this?  also, should i just track down all calls to the function and change what parameters are being passed in instead of handling it in the function itself?"
