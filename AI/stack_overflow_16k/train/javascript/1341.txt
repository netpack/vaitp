"can't figure out callback on $.get to read text file into an array i just want to get data from this text file, parse it a bit, and toss it into a couple of arrays. the asynchronous nature of ajax (which i didn't even know i was using...?) means that the array is still being populated before i try to access it. this seems to create a totally useless situation to me, as i need to access the arrays at different times during the users visit to the site. any ideas?..var words = new array();.var sylls = new array();.var csv_file = new array(); // for word arrays..$(document).ready(function(){.    readwords( addwords );.});..function readwords( process ) {.        $.get('terms.csv', function(data){.                csv_file = data.split('n');.                    // csv file is now in an array, split into seperate word array and syllable array.                    for (var i = 0; i &lt; csv_file.length; i++) {.                        var both = csv_file[i].split(',');  // split at the comma.                        words[i] = both[0]; // populate word array.                        sylls[i] = both[1]; // populate syllable array.                        //put_word(words[i], sylls[i]);..                    };..            });   .    process(words, sylls);.}..function addwords(w, ss){.    console.log(w);.}...this all eventually returns an empty array...edit--solution:..i'm not sure why no one suggested this before, but for those of you as frustrated with ajax as i am, here is the easy solution!..var words = new array();.var sylls = new array();.var csv_file = new array(); // for word arrays..$(document).ready(function(){.    get_words();..});..function get_words() {...        $.get('terms.csv', function(data){.            //async: false;.            csv_file = data.split('n');.                // csv file is now in an array, split into seperate word array and syllable array.                for (var i = 0; i &lt; csv_file.length; i++) {.                    var both = csv_file[i].split(',');  // split at the comma.                    words[i] = both[0]; // populate word array.                    sylls[i] = both[1]; // populate syllable array.                    //put_word(words[i], sylls[i]);.                };.            }).        .done(function() {.            // once it's done do this stuff.        });..}"
