"what is the difference between using a function to initialise a blank object with and without return statement? i have two functions to initialise objects. init and differentinit.  ..function init(){.    return {a:5};.}..function differentinit(){.    this.a =5;.}..obj = init();.newobj = new differentinit()...how are the objects obj and newobj different?.this is what the blank interpreter shows as the contents of the two objects...&gt;obj.&lt;·object {a: 5}.&gt;newobj.&lt;·differentinit {a: 5}...edit: as the answers (which are really good) have pointed out that newobj has an additional prototype as differentinit.prototype. i had thought an object can only be created with an additional prototype using the object.create() method. i don't know if this a far too generic question, but how many other ways are there to create objects with prototypes? and can the method used in this question be considered a good way to create an object with prototypes?"
