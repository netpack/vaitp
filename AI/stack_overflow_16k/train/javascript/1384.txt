"how to get the right index for a delayed trigger? following problem: i have an angular module with $http.get to get some google coordinates. this function triggers another function. this function again triggers another function. it will all make sense in a moment. ..angular module:..    var myapp = angular.module('wmw', []);.        myapp.controller('mainctrl', function ($scope, $http) {.            //angular method.            $scope.gettargetcords = function (data) {.                $http.get(data).success(function (response) {.                    $(document).triggerhandler('my_func:data-received', [response]);.                });.            };.        });...onsucess:..var onsuccess = function(position) {.    currentlat = position.coords.latitude ;.    currentlng = position.coords.longitude;.    for(i = 0; i&lt;locations.length;i++){.        var desturl = 'http://maps.googleapis.com/maps/api/geocode/xml?address=' + locations[i][ 'street' ] + ',' + locations[i][ 'city' ] + ',deutschland' + '&amp;sensor=true';.        var myangularscope = angular.element($(""#mainctrlid"")).scope();.        myangularscope.gettargetcords('http://maps.googleapis.com/maps/api/geocode/xml?address=' + locations[i][ 'street' ] + ',' + locations[i][ 'city' ] + ',deutschland' + '&amp;sensor=true');.    }   .};..navigator.geolocation.getcurrentposition(onsuccess, onerror);...the two triggers:..$(document).on('my_func:data-received', function(event, response) {.    map[s] = response;.    s++;.    if(s === locations.length){.        $(document).triggerhandler('alldata');.    }.});..$(document).on('alldata', function(){.    var thecoords = [];.    var distance = [];.    $('#filter-list').empty();.    for(var i = 0; i &lt; locations.length; i++){.        thecoords[0] = $(map[i]).find('lat').first().text();.        thecoords[1] = $(map[i]).find('lng').first().text();.        distance[i] = calculatedistance(currentlat, currentlng, thecoords[0], thecoords[1]);.        locations[i]['distance'] = distance[i];.    }.    locations.sort(function(a,b) .        { return a.distance - b.distance;}.    );.    for(var i = 0;i &lt; locations.length; i++){.        distance[i] = locations[i]['distance'].tofixed(2);.        distance[i] += ' km';.        locations[i]['distance'] = distance[i];.    }.    $('.loading').hide();.    for(var i = 0; i&lt;=5; i++){.        additemtolist(locations[i]);        .    }.});...what's happening? with those functions i retrieve the current location, the dest location and calculate the difference in km via a lat./long. calc function which i found on the web. .loading is just a div with ""calculating route..."" and a transparent grey background. so once everything is finished, the ""distance"" of every route will change to the calculated distance...the problem with this: in my "".on('my_func:data-received')"" i am using the variable ""s"" which is 0 at the start. in my logic i thought, that this would then put the responses one after another in my ""map"". but now i realised, that the ""data-received"" are not called one after another, but each time when data is retrieved. so when locations[0] is calling the $http.get and then after this locations[1] is calling the $http.get, it could happen, that locations[1] retrieves the data earlier. how could i have my ""s"" always be the right number? so that when i have locations[1] calling $http.get map[1] will be locations[1] response?..my head is exploding, as i cant find a solution to this problem, although it seems to be so basic. ..thank you in advance!"
