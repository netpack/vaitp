"can i use object.assign to create a ""class"" i currently have this bit of code here:..let loginwindow = object.assign({}, eventemitter.prototype, {.  window: null,.  create: () =&gt; {.    // load loginwindow settings.    settings.get(""loginwindowstate"").    .then((state) =&gt; {.      if (state === undefined) state = {};.      loginwindow.window = new browserwindow({.        x: state.x || 0,.        y: state.y || 0,.        width: state.width || 600,.        height: state.height || 700,.        frame: false,.        show: false.      });.      if (_.isempty(state)) {.        loginwindow.window.center();.      }.      if (state.maximized) {.        loginwindow.window.maximize();.      }.      loginwindow.window.loadurl(`file://${__dirname}/../views/index.html`);.      loginwindow.window.on('closed', () =&gt; { loginwindow.window = null; });.      loginwindow.window.on('ready-to-show', () =&gt; loginwindow.window.show());.      loginwindow.window.on('move', rememberwindowstate);.      loginwindow.window.on('resize', rememberwindowstate);.      loginwindow.window.on('maximize', rememberwindowstate);.      loginwindow.window.on('unmaximize', rememberwindowstate);.    });.    loginwindow.emit(""created"");.  },.  close: () =&gt; {.    loginwindow.window.close();.  }.});...i'm using it to control windows in my electron project, though i seem to be misunderstanding its construction...there is no this or at least it returns undefined at run time, also i can not do say..loginwindow.emit(""created"") from within its self, but if i was to create the object and do it from outside it would work just fine..i would like to use the event emitter on creation but instead i've replaced loginwindow.emit(""created"");..with..return promise.resolve(true);..and now i know when it's done being created, but i feel like i should be able to use an event emitter in its place instead."
