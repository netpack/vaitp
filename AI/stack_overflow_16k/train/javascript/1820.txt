"functional inheritance js without prototype (return overload methods) just started learning this topic. issue i dont understand how it works. there're no errors neigher expected result. in the example i short code to 1 alert, but it doesn't work..function app(){.   function render(){}.   this.run = function() {.       render();.   }.}..function mainwindow(){.   app.call(this);.   function render(){.       renderfirstcontroller();.       rendersecondcontroller();.       renderthirdcontroller();.   }.   this.render = render;.}..function firstcontroller(){.   mainwindow.call(this);.   function render(){.       console.log(""good"");.       // renderfirtsblock();.       // rendersecondblock();.       // renderthirdblock();.   }.   this.renderfirstcontroller = render;.}..function ready(){.   let app = new app();.   app.run();.}..document.addeventlistener(""domcontentloaded"", ready);...maybe i dont understand js oop, but i expect app.render as not empty function but assigned 3 x 3 = 9 inner functions. also someone advanced to create new objects. but i dont know where to create. this is example of 1x3x3 tree, but it could expand to 1xnxn; also i should be able to catch ""maximum call stack size exceeded"". so there's the problem"
