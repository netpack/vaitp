"how to put a console.log() in every function? i would like for functions to console.log() their names whenever they run. that way i can tell which functions are running in this big plate of spaghetti code i'm eating...so far i've got this..function printglobalfunctions() {.    var print_function_name = "".                   var identify_name = arguments.callee;.                   var identify_regex = new regexp('.*?(?=\\()');.                   identify_name = identify_regex.exec(identify_name);.                   identify_name = identify_name.tostring();.                   identify_name = identify_name.replace('function ', '');.                   console.log(identify_name);""; //.*?(?=()..    for (var prop in window) {.        if (typeof window[prop] === ""function"") {.            var func = window[prop].tostring();.            if (/[native code]/.test(func) === false) {.                if (/$/.test(prop) !== true &amp;&amp; /jquery/.test(prop) !== true) {.                    func = func.replace(print_function_name, """");.                    func = func.replace(/{/, ""{"" + print_function_name);.                    eval(prop + ""="" + func);.                }.            }.        }.    }.}...but that only prints global functions. i would like for it to print member functions and anonymous functions too. i imagine you would modify function.prototype but i don't know. overriding function.prototype.call is not enough because only .01% of the functions are called with myfunc.call()"
