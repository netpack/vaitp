"can't figure out how to continuously keep an app running, without having to refresh to reset all parameters correctly const qwerty = document.queryselector(""#qwerty"");.let phrase = document.queryselector(""#phrase"");.let missed =  0;.const reset = document.queryselector("".btn__reset"");.const startscreen = document.queryselector("".start"");.let myphrase ;.const phrases = [.""knowledge comes but wisdom lingers"",.""in the end everything is a gag"",.""fortune favors the brave"",.""a joke is a very serious thing"",.""where there is love there is life"".];.const ul = document.queryselector(""ul"");.let listitems = [];.let guessedlistitems = [];.let letterarray = [];.const overlay = document.queryselector(""#overlay"").const buttons = document.queryselectorall(""button"").const hearts = document.queryselectorall("".tries"")..reset.addeventlistener(""click"", () =&gt; {.    startscreen.style.display = ""none"";.});..function getrandomphraseasarray (arr) {.    //picks random number from 0-4 for array index.    let num = math.floor(5 * math.random());.    //splits that string of specified index into array of letters.    myphrase =  arr[num].split("""");.    console.log(myphrase);.    //returns that new array of letters in a variable called myphrase.    return myphrase;.}..function addphrasetodisplay(myphrase){.  for (let i = 0 ; i &lt; myphrase.length ; i++ ){.    //creates a new list item  elemetn.    const li = document.createelement(""li"");.//for each letter/index in array, a new list item is created.    li.textcontent += myphrase[i];.    //appends those elements to the ul.       ul.appendchild(li);.       listitems.push(li);.      // if the letter at index ""i"" is an empty string, "" "" .      // give it the specified class.     if (myphrase[i] == "" ""){.         li.classlist.add(""space"");.         //if element is a ., no class.        //change this to regex to filter out ..     } else if (myphrase[i] == ""."" || myphrase[i] == "",""){.            li.classlist.add(""show"");.            li.classlist.add(""letter"");.     }.     //if letter, add class name letter.     else {.        li.classlist.add(""letter"");.     }.  }.  //return the list items of the letters.  return myphrase;.}..function checkletter(clickedletter) {..  let letterfound = false;.    if (clickedletter.tagname == ""button""){.        clickedletter.classname = ""chosen"";.        clickedletter.setattribute(""disabled"", ""true"");.        const li = document.queryselectorall("".letter"");.        for (let i = 0 ; i &lt; li.length ; i++){.            if (clickedletter.textcontent.tolowercase() == li[i].textcontent.tolowercase()){.        li[i].classlist.add(""show"");.        letterfound = true;.            } .        }.  }..  if (letterfound) {.        return clickedletter.textcontent.tolowercase();.  }.  else {.    return null;.  } .}..function checkwin() {.  const h2 =  document.queryselector(""h2"");.  function contains (item){.        return item.classlist.contains(""show"");.    }.    if(missed === 5){.         h2.textcontent = ""you lose, try again!"";.         startscreen.style.display = ""block"";.         startscreen.classlist.add(""lose"");.         reset.textcontent = ""new game?"";.         newgame();.        }.    else if (letterarray.every(contains)){.        startscreen.style.display = ""block"";.        startscreen.classlist.add(""win"");.        h2.textcontent = ""you win!"";.        reset.textcontent = ""new game?"";.        newgame();      .    }   .}..function newgame(){.     missed = 0;.     myphrase = [];.     for (let i = 0 ; i &lt; listitems.length ; i++) {.            ul.firstelementchild.remove();.        }.    listitems.length = 0.    for (let i = 0 ; i &lt; buttons.length ; i++){.        if (buttons[i].disabled ==  true) {.            buttons[i].disabled = false;.            buttons[i].classlist.remove(""chosen"");.        }    .    }.    const  ol = document.queryselector(""ol"").        for (let i = 0 ; i &lt; hearts.length ; i++){.        ol.appendchild(hearts[i]);.        }.    console.log(missed).    getrandomphraseasarray(phrases);.    addphrasetodisplay(myphrase);.}..qwerty.addeventlistener('click', (e) =&gt; {.        for (let i = 0 ; i &lt; listitems.length ; i++){.         if (listitems[i].classlist.contains(""space"")){.            //guessedlistitems now only contain spaces.             guessedlistitems.push(listitems[i]);.        }.        else if (listitems[i].classlist.contains(""letter"")){.            //lettersarray  now only contains letters.             letterarray.push(listitems[i]);.        }   .    }.}, {once: true});..qwerty.addeventlistener(""click"", (e) =&gt; {.  const clickedletter = e.target;.  if (clickedletter.tagname == ""div""){.    //does not remove heart if user clicks on area around keyboard.         return false.  }.  checkletter(clickedletter);.  console.log(checkletter(clickedletter));.  if (checkletter(clickedletter)  == null){.    missed+=1;.    const ol = document.queryselector(""ol"");.    const tries = document.queryselectorall("".tries"");.    ul.children ;.    ol.removechild(tries[0]);.    checkwin();.  }.  else {.    checkwin();.  }.});..getrandomphraseasarray(phrases);.addphrasetodisplay(myphrase);...https://jsfiddle.net/qo8gp5b9/..here is a jfiddle demo this simple game i wrote..the problem is, i cannot seem to make the game ""reset"" correctly after the first go around. after the player either guesses correctly or loses all of their lives, they are prompted with a window to start a new game. however,  i am able to reset everything back to how it initially was after you first load the page, except the program continuously shows the ""win"" screen after the first guess on the second go around. i cannot seem to figure out where in my code to bug is happening. can someone help me out? i am aware my code snippet is long, but i would really appreciate it"
