"typeerror: object function object() { [native code] } has no method 'method' going through the example code for chapter 5.4 in blank: the good parts, the following is used to demonstrate the use of the functional pattern to call super methods:..object.method('superior', function (name) {.    var that = this, method = that[name];.    return function () {.        return method.apply(that, arguments);.    };.});...this would be used as follows (where ""cat"" is another constructor function that has a 'get_name' function defined) :..var coolcat = function (spec) {.    var that = cat(spec),.        super_get_name = that.superior('get_name');.    that.get_name = function (n) {.        return 'like ' + super_get_name(  ) + ' baby';.    };.    return that;.};...however when running the sample code, f12 tools show the following:..uncaught typeerror: object function object() { [native code] } has no method 'method'...what am i missing here?"
