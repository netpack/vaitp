"blank encapsulation so i've been looking into full development object oriented blank practices, and wonder about the following examples...as i understand it, (and it makes sense to me) that the following 'secret' field is 'private' :..var myobject = function() {..    var secret = 'sshhh';..    this.getsecret() = function() {.        return secret;.    }..}...and this is because the field secret has function scope that the inner function can access, but nothing outside ... so far so good...but i've seen the following around (and especially in douglas crockford's book) : ..var myobject = function() {..    var secret = 'sshhh';..    return {.       getsecret : function() {.            return secret;.       }.    }   ..}();...and was wondering what the difference is, why is it better? i understand that in this case we're not even returning the same object that the private field exists in, but don't see a huge benefit as you can't access the field directly either way."
