"how to get a reference to function inside the function say i've a function like this..function a() {. //get a reference. console.log( /*something that will get me reference to function a*/);.}...why?..i'm thinking so i can do this.....function car() {.   //{reference2myself}.prototype = vechile.prototype;.   car.prototype = vechile.prototype;.}...note, i've to manually set the car reference, i dont want to do that..also, btw, why isn't prototype set inside the main factory function, i understand it'd mean for every instance created off that function all prototype props would be reassigned to the same thing. ..what i really wanted to make:..object.prototype.extend = function(clas) {.   clas.call(this);.   this.prototype = this.prototype || {};.   object.setprototypeof(this.prototype, clas.prototype);.   this.prototype.constructor = arguments.caller;.}..//then i could use it like this..function vechile(){. this.loc=0;.}..vechile.prototype.move = function(){.  this.loc++;.};..function van(){. this.extend(vechile);.}.van.prototype.pickup = function(){};..var a = new van();.    // now a should have pickup method.    // move method.    // and van prototype should be and object which should have its __proto__ set to car.prototype...update..i think i've finally figure out the code that lets me simulate class inheritance easily. please let me know if i'm missing something...object.prototype.extends = function(clas) {.   clas.call(this);.   var proto = object.getprototypeof(this);.   object.setprototypeof(proto, clas.prototype);.}..//then i could use it like this.//super class.function vechile(){. this.loc=0;.}..vechile.prototype.move = function(){.  this.loc++;.};..//sub class.function van(){.  this.extends(vechile);.}..van.prototype.pickup = function(){};..var a = new van();"
