"blank expression seperated by , i stumbled upon this blank statement:..const pipe = (...fns) =&gt; x =&gt; fns.reduce((y, f) =&gt; f(y), x);...i don't understand the expression f(y), x. with some experimenting i found out that this is working too: f(y(x)). it gives the exact same result (for my example at least and is much more understandable to me)...  const pipe1 = (...fns) =&gt; x =&gt; fns.reduce((y, f) =&gt; f(y), x);.  const pipe2 = (...fns) =&gt; x =&gt; fns.reduce((y, f) =&gt; f(y(x)));.  const addthree = x =&gt; x + 3;.  const addtwo = x =&gt; x + 2;.  let x1 = pipe1(addtwo, addthree)(2); //x1 is seven.  let x2 = pipe2(addtwo, addthree)(2); //x2 is seven...then i thought that this is some syntax sugar for x,y for x(y) and tried this:.. let z = n =&gt; addthree, n; //addthree(n)? no, that does not work!...i need some light on the expression f(y), x). yes i read some stackoverflow articles that the expression is evaluated form left to right and the last is returned. it just makes no sense to me in this example."
