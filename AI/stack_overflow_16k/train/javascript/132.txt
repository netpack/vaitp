"what is wrong with the iterator for a tree data structure? i am trying to implement a naive iterator for a tree data structure. why is the name of the last node in the tree ('level 2: b') not printed to the console? what is wrong with the iterator?....class node {.    constructor(name) {.        this.name = name;.        this.child = [];.    }..    add(name) {.        const node = new node(name);.        this.child.push(node);.        return node;.    }..    [symbol.iterator]() {.        return this;.    }..    next() {.        if (this.current === undefined) {.            this.current = 0;.            return {.                done: (this.child.length &gt; 0) ? false : true,.                value: this.            }.        }..        const other = this.child[this.current].next();.        if (other.done) {.            this.current++;.            if (this.current &lt; this.child.length) {.                other.done = false;.            }.        }.        return other;.    }.}..const root = new node('level 0');.let node = root.add('level 1: a');.node.add('level 2: a');.root.add('level 1: b');.root.add('level 1: c');.node = root.add('level 1: d');.node.add('level 2: b');..for (const node of root) {.    console.log(node.name);.}..console.log(root);.....this should be so simple, but it's not working."
