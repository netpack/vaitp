"issue with event bubbling in js &lt;!doctype html&gt;.&lt;html&gt;.&lt;body&gt;.&lt;style type=""text/css""&gt;.#a {background-color:blue;width:100px;height:200px;}.#b {background-color:red;margin-left:25px;width:50px;height:100px;}.&lt;/style&gt; .&lt;div id=""a""&gt;a.    &lt;div id=""b""&gt;b&lt;/div&gt; .&lt;/div&gt;.&lt;script&gt;.document.getelementbyid(""a"").onclick = function() {console.log(""a is clicked"");} .document.getelementbyid(""b"").onclick = function(event) {console.log(""b is clicked"");event.stoppropagation();} .document.onclick = function() {console.log(""document is clicked"");} .&lt;/script&gt;.&lt;/body&gt;.&lt;/html&gt;...questions:..1.function(event), event is formal parameter, what is the actual parameter? how did actual parameter pass to event? because usually we use parameters in below style:..function method(int num){ //num is the formal./*implementation*/.}..//in main.method(42); //42 is the actual....when i clicked div a, in console, it shows: ....a is clicked.document is clicked....i thought the result should be ...  a is clicked.   b is clicked...this is my thought: when clicked div a, document.getelementbyid(""a"").onclick got excuted, then document.getelementbyid(""b"").onclick got excuted, since we have event.stoppropagation(); it will stop in div b, and will not excute document.onclick, but it seems not work this way, can anyone help me to understand what happened here?"
