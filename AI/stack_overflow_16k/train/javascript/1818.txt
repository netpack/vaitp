"parallel asyncronous xmlhttprequests are only calling back once i am issuing two api calls in parallel, asynchronously so i don't lock up the browser , and i am only receiving one callback. ..here is the code ../* loop runs twice, from 0 to 1 */.for(var accountindex in walletform.masterpublickey){.    /* bunch of code, then... */..    /* construct an api call to insight */.    var xhr = new xmlhttprequest();.    xhr.open(""get"", ""https://insight.bitpay.com/api/addrs/"" + stringofaddresses + ""/txs?from=0&amp;to=100"", true);.    xhr.onreadystatechange = function() {.        if (xhr.readystate == 4) {.        $scope.$apply(function () {.            txlistinsight.txs[accountindex] = ( json.parse(xhr.responsetext));.            /* set semaphore */.            txlistinsight.txsready[accountindex] = true;.            parsetransactions(accountindex);.            console.log(txlist);.        }).        }.    }.    xhr.send();.}...i can even see the two requests in the chrome dev console network tab and the responses are correct. why am i only getting one callback and not two? is my second callback overwriting the reference to the first one? ..why is there a library on the internet called “asyncxmlhttprequest”? i am using angularjs as well--shall i look into ""promises""? ..another option would be to avoid the problem entirely by combining my two api requests into one, but i'm not sure what the character limit is."
