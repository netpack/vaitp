"comparison of methods used to return the value of a property deep within a blank object consider the following company object:..var employee = {.    empid: 45435,.    salary: 44000,.    title: ""janitor"",.    firstname: ""richard"",.    lastname: ""stallman"".}..var department = {.    name: ""maintenance"",.    building: ""h"",.    room: 404,.    departmentlead: employee.}..var company = {.    name: ""bluth's original frozen banana stand"",.    revenue: 'always',.    maintenancedept: department.}...if i wanted to access the title property of the employee object, i could reference it with:..var title = company.maintenancedept.departmentlead.title;...however, if departmentlead is undefined, a typeerror will be thrown. so, i must write a test before accessing title:..if(company &amp;&amp; .   company.maintenancedept &amp;&amp; .   company.maintenancedept.departmentlead &amp;&amp;.   company.maintenancedept.departmentlead.title){ ... }...is this the best way of doing this? obviously, this example is contrived because i defined company before using it, so i know title exists. the same cannot be said for a company object returned from an ajax call. a solution i've been using has been:..// edit: i've been informed adding properties to object.prototype is not a smart thing to do...so don't do this.object.prototype.propertywithpath = function (path) {.    var keys = path.split('.');.    var parent = this;.    var child;..    for (var i = 0; i &lt; keys.length; i++) {.        child = keys[i];..        if (parent[child] === undefined) {.            return undefined;.        }.        parent = parent[child];.    }.    return parent;.};...besides the performance hit, are there any downsides to using this method vs the alternative?"
