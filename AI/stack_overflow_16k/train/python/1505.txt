"blank ignores sigint in multithreaded programs - how to fix that? i have blank 2.6 on macos x and a multithread operation. following test code works fine and shuts down app on ctrl-c:..import threading, time, os, sys, signal.def siginthandler( signum, frame ) :.  sys.exit( 0 ).signal.signal( signal.sigint, siginthandler ).class workthread( threading.thread ) :.  def run( self ) :.    while true :.      time.sleep( 1 ).thread = workthread().thread.start().time.sleep( 1000 )...but if i change only one string, adding some real work to worker thread, the app will never terminate on ctrl-c:..import threading, time, os, sys, signal.def siginthandler( signum, frame ) :.  sys.exit( 0 ).signal.signal( signal.sigint, siginthandler ).class workthread( threading.thread ) :.  def run( self ) :.    while true :.      os.system( ""svn up"" ) # this is really slow and can fail..      time.sleep( 1 ).thread = workthread().thread.start().time.sleep( 1000 )...is it possible to fix it, or blank is not intended to be used with threading?"
