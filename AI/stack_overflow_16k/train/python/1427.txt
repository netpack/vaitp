"attribute error person and customer classes .  write a class named person with data attributes for a person's name, address, telephone and email. next, write a class named customer that is a subclass of the person class. the customer class should have a data attribute for a customer number and a boolean data attribute indicating whether the customer wishes to be one the mailing list. demonstrate an instance of the customer class in a simple program. ...i am getting an attibute error. .., line 6, in main.    '555-987-1549','adsf@asd.com','y','1153').typeerror: __init__() takes 5 positional arguments but 7 were given...i don't completely follow the point of using the boolean expression so maybe someone could explain why it is being used and help me with why i am getting that error. ..heres my code..class person:..class person:.    def __init__(self, name, address, telephone, email):.        self.__name = name.        self.__address = address.        self.__telephone = telephone.        self.__email = email..    def set_name(self, name):.        self.__name = name..    def set_address(self, address):.        self.__address = address..    def set_telephone(self, telephone):.        self.__telephone = telephone..    def set_email(self, email):.        self.__email = email..    def get_name(self):.        return self.__name..    def get_address(self):.        return self.__address..    def get_telephone(self):.        return self.__telephone..    def get_email(self):.        return self.__email...class customer:..import person..class customer(person.person):.    def __init__(self, name, address, telephone, email):.        person.person.__init__(self, mail, number).        self.mailing = 'y'== true.        self.__mail = mail.        self.__number = number..    def set_mail(self, mail):.        self.__mail = mail..    def set_number(self, number):.        self.__number = number..    def get_mail(self):.        return self.__mail..    def get_number(self):.        return self.__number..    def maillist(self, mail):.        if mailing == true:.            return""on the mailing list"".        else:.            return""not on the mailing list""..    def __str__(self):.        return ""nname: {}naddress: {}ntelephone: {}nemail: {}nmail: {}nnumber: {}""..            format(self.get_name(), self.get_address(),.                   self.get_telephone(), self.get_email().                   , self.maillist(self.get_mail()),self.get_number())...customertest:..import customer..def main():..    customer = customer.customer('josh', 'long st, dallas tx',.                                 '555-987-1549','adsf@asd.com','y','1153').    print(customer)..main()"
