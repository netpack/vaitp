"conventions of importing blank main programs often i write command line utilities that are only meant to be run as main. for example, i might have a file that looks like this:..#!/usr/bin/env blank..if __name__ == '__main__':.    import sys.    # do stuff...in other words, there is nothing going on that isn't under the if statement checking that this file is being run as main. i tried importing a file like this to see what would happen, and the import was successful...so as i expected, one is allowed to import files like this, but what is the convention surrounding this practice? is one supposed to throw an error telling the user that there is nothing to be imported? or if all the contents of the file are supposed to be run as main, does one need to check if the program is being run as main? or is the conditional not necessary? ..also, if i have import statements, should they be at the top of the file, or under the conditional? if the modules are only being used under the conditional, it would seem to me that they should be imported under the conditional and not at the top of the file."
