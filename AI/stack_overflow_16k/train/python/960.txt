"simple blank message encoder/decoder issue i'm new to blank and just playing around with some code. i am trying to build a ""secret message generator"" which takes a string (e.g. ""1234567890"") and outputs it based on a simple pattern (e.g. ""1357924680""). i have the encoder working 90% (currently it can't handle apostrophes), but the decoder is giving me a lot of trouble. for anything over 6 characters, there is no problem. inputting ""1357924680"" outputs ""1234567890"". however, for shorter odd numbered strings (e.g. ""hello""), it does not show the last character (e.g. it outputs ""hell""). my code is below. there may be a simpler way to write it, but since i built this myself, i'd appreciate working with my code rather than rewriting it. so, how can it be fixed?..#simple decoder..def decode(s2):.    oddlist = [].    evenlist = [].    final = [].    s2 = s2.lower() #makes a string lowercase.    size = len(s2) #gets the string size.    print ""size "" + str(size) #test print.    half = size / 2.    print ""half "" + str(half).    i = 0.    while i &lt; half:.        if size % 2 == 0: #checks if it is even.            split = size / 2 #splits it.            oddlist.append(s2[0:split]) #makes a list of the first half.            evenlist.append(s2[split:]) #makes a list of the second half.            joinodd = ''.join(oddlist) #list -&gt; string.            joineven = ''.join(evenlist) #list -&gt; string.        else:.            split = (size / 2) + 1.            print split.            oddlist.append(s2[0:split]) #makes a list of the first half.            evenlist.append(s2[split:]) #makes a list of the second half.            joinodd = ''.join(oddlist) #list -&gt; string.            joineven = ''.join(evenlist) #list -&gt; string.        string = joinodd[i] + joineven[i].        final.append(string).        i = i + 1.    decoded = ''.join(final).    print final.    return decoded..print decode(""hello"")"
