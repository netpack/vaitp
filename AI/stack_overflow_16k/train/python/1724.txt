"cycle through a resource until all the parameters are satisfied i am trying to log a process; this process has 3 states, and they are sequential, so a->b->c; they can happen only in this sequence...the only way that i have to follow this process is through a function, that return the current state of a specific type analyzed, that is passed to the function.the return data from a function (it is a list), which looks like this:..[typex, date, time, process running].compound, 12/12/14, 10:20, a...i need to be sure that a specific type, goes from a to b and then c. i am using this in a chemical analysis application, that parse results coming from a machine. i can't do nothing beside use the api that the machine supply; and this function is one of them. you can run it any time you want; it will always return the info about a specific type...my approach:..running = true.while running:.    return_value = myfunction(type)  .    if a in return_value[3]:.        valuea = true.        print ""found a"".    if b in return_value[3]:.        valueb = true.        print ""found b"".    if c in return_value[3]:.        valuec = true.        print ""found c""    .    if valuea and valueb and valuec:.        running  = false.        print ""done""...this works, but it looks not really elegant imo; since every time i run the function, it will verify again all the if conditions, even if i already found one or 2 of them. not a big concern for my example, but i have to run this on a process that deal with thousands of entry, so performances may be an issue in the long run. also if i call the function and it return the same value, i  get printed the value over and over:..found a.found a.[value change].found b.found b.found b.[value change].found c.done...pretty sure that there is a better way; if i put a sleep in the while loop, i may loose state b, and get only a and c, if i do it too often, i will get print on screen that goes on forever, printing the same string, since the value didn't change...the final result should be one print per type; in this way i don't get a long output. what would be a good blankic way to do so?"
