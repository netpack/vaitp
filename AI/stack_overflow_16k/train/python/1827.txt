"doctest in class don't pass i have a class name ""vector"" and i need to implemente some methodes..i have built-in 'doctest.testmod()' in the code. i wrote all the methodes (beside str and repr) i need but i don't understand why am i getting all these failures..i would be greatfull if anypne can help..tnx...from math import sqrt..class vector:..    def __init__(self, x = 0, y = 0, z = 0):        .        self.x=x.        self.y=y.        self.z=z..    def to_tuple(self):.        '''.        &gt;&gt;&gt; vector(1,0,0).to_tuple().        (1, 0, 0).        '''.        return (self.x,self.y,self.z)..    def __str__(self):.        '''.        __str__.        &gt;&gt;&gt; str(vector(1.0, 0.0, 1.0)).        '(1.0, 0.0, 1.0)'.        '''.        return str(self.to_tuple())..    def __repr__(self):.        return str(self)..    def __eq__(self, other):.        '''.        &gt;&gt;&gt; vector(3,6,10.) == vector(3.,6.,10).        true.        &gt;&gt;&gt; vector(1,0.,-1.) == vector(1.,0.,1).        false.        '''.        if self.x==other[0] and self.y==other[1] and self.z==other[2]:.            return true.        else:.            return false..    def __add__(self, other):      .        '''.        &gt;&gt;&gt; vector(1,2,3) + vector(0.5,3,-1).        (1.5, 5, 2).        '''  .        return (self.x+other[0],self.y+other[1],self.z+other[2])..    def __neg__(self):.        '''.        &gt;&gt;&gt; -vector(1,8,-4.3).        (-1, -8, 4.3).        '''.        return (self.x*-1,self.y*-1,self.z*-1)..    def __sub__(self, other):.        '''.        &gt;&gt;&gt; vector(1,2,3) - vector(0.5,3,-1).        (0.5, -1, 4).        '''.        self.__add__(other.__neg__)..    def __mul__(self, scalar):.        '''.        &gt;&gt;&gt; vector(1,5,3) * 2.        (2, 10, 6).        &gt;&gt;&gt; vector(1,5,3) * (-0.5).        (-0.5, -2.5, -1.5).        '''.        if type(scalar)!=int or float:.            raise typeerror(""vector multiplication only defined for scalar"").        else:.            return (scalar*self.x,scalar*self.y,scalar*self.z).    def inner(self, other):  .        '''.        &gt;&gt;&gt; vector(1,2,3).inner(vector(-1,5,3)).        18.        '''     .        return (self.x*other[0]+self.y*other[1]+self.z*other[2])..    def norm(self):.        '''.        &gt;&gt;&gt; vector(0,3,4).norm().        5.0.        '''.        return sqrt(self.inner(self))..import doctest...doctest.testmod()...output:..6 items had failures:.   1 of   1 in __main__.vector.__add__.   2 of   2 in __main__.vector.__eq__.   2 of   2 in __main__.vector.__mul__.   1 of   1 in __main__.vector.__sub__.   1 of   1 in __main__.vector.inner.   1 of   1 in __main__.vector.norm.***test failed*** 8 failures."
