"blank comparing parentheses from user input and making sure they have a pair i'm writing a program to take a user input of parentheses i.e. {} [] () and checking to see if they have a pair (opening and closing). i'm running into an error when running my code where i always get the return false. i've tried different ways of checking against a pre set ""list"" but it doesn't seem to work. i have to use the class from above too. any help is appreciated. ..some example inputs are:..    &gt;&gt;&gt;parenthesesmatch('{[]}').    true.    &gt;&gt;&gt;parenthesesmatch('({})').    true.    &gt;&gt;&gt;parenthesesmatch('{[)]}').    false...my code:..    #george flamburis...class stack():.def __init__(self,que=[]):.    self.lst = que.def __repr__(self):.    return ""stack({})"".format(self.lst).def push(self, add):.    self.lst.append(add).def pop(self):.    return self.lst.pop().def isempty(self):.    return self.lst==[].def first(self, loc=0):            #naming of this method can't be [].    return self.lst[loc].def len(self):.    return len(self.lst)..def parenthesesmatch(match):.     s = stack().     end = [].     for char in match:.         if char in ""[ { ("":.             s.push(char).         else:.             end.append(char)..     if s.len()==len(end):.             for num in range(len(end)):.                     if s.first(num) and end[num] not in '[]' or '{}' or'()':.                             return false.             return true.     elif s.len()!=len(end):.             return false"
