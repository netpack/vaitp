"why is single int 24 bytes, but in list it tends to 8 bytes here is what i am looking at:..in [1]: import sys..in [2]: sys.getsizeof(45).out[2]: 24..in [3]: sys.getsizeof([]).out[3]: 72..in [4]: sys.getsizeof(range(1000)).out[4]: 8072...i know that int in blank is growable (can get bigger that 24 bytes) objects that live on the heap, and i see why that object can be quite large, but isn't a list just a collections of such objects? apparently it is not, what is going on here?"
