"creating a list of dictionaries from another list of dictionaries sorry for the long post. i have been trying to figure this out for days. but, i'm stumped. blank is not my native language...i am pulling a list of dictionaries containing information about 1,400 hosts from an api...i convert the json data to a blank list of dictionaries. i create a second list to be used to populate a new.list of dictionaries, one with a subset of the information from the list pulled from the api...i create a list of the keys i need the info from. next, i create two for loops. the first iterates through.the original list of dictionaries and the second iterates through the list of keys that i want to put into.the new list of dictionaries...if i add print statements in the two loops, i can confirm that i am iterating through the correct information.that i am looking for and that this information is being added to the new list of dictionaries...both lists of dictionaries, the list of keys, and a new dictionary ( to be used in the loop ) are all defined.as global in scope...however, later in the script when i go to reference any specific element of the final list of dictionaries,.all 1,400 dictionaries contain the same values from the last entry of the original list of dictionaries...host_info is a list of dictionaries pulled from an api..host_fields is a list of keys that i want to parse from host_info..# new list of dictionaries. we will populate the keys in these.# from the host_fields list above..export_list_of_dictionaries = []..# new dictionary for use in populating in export_list_of_dictionaries.new_host = {}..# loop through the host_info list of dictionaries to pull.# the specific host_fields.for index in  range(len(host_info)):.    for field in host_fields:.        # add the field as a key to the new_host dictionary.        new_host[field] = host_info[index][field]..    # **** the line above is cycling through the fields of host_fields correctly ****..# print(index) **** the index is cycling through host_info correctly ****.# add the new_host dictionary to the new export_list_of_dictionaries.export_list_of_dictionaries.append(new_host)..# **** the print statement below shows that each of the elements has the correct ip.#print(export_list_of_dictionaries[index]['ip']).# print(len(export_list_of_dictionaries)) **** this printed the correct number of elements ****...the keys from the original list of dicts print correctly. each ip from host_info is different...# print the ip for the first element in each list of dictionary.print(""ip from the first element of the original list of dictionaries"").print(host_info[0]['ip']).print(host_info[1]['ip']).print(host_info[-1]['ip'])...here's where the trouble becomes apparent:.however, the keys from the final list of dicts all have the same ip, which is incorrect...print(""ip from the first element of the final list of dictionaries"").print(export_list_of_dictionaries[0]['ip']).print(export_list_of_dictionaries[1]['ip']).print(export_list_of_dictionaries[-1]['ip'])...simple answers only please, i'm new to blank."
