"multiple equal testing for arbitrary length of a list[str] to solve longestcommonprefix i am working on longest common prefix - leetcode...  write a function to find the longest common prefix string amongst an array of strings..  .  if there is no common prefix, return an empty string """"..  .  example 1:.  .  input: [""flower"",""flow"",""flight""].output: ""fl""..  .  example 2:.  .  input: [""dog"",""racecar"",""car""].explanation: there is no common prefix among the input strings...  .  note:.  .  all given inputs are in lowercase letters a-z...i design such a solution..def longestcommonprefix(self, strs: list[str]) -&gt; str:.    res = ''.    #base case 1.    if len(strs) &lt; 1: return res.    size = min(len(s) for s in strs).    #base case 2 one of them is empty .    if size &lt; 1: return res ..    #iteration case .    for i in range(size):.        if strs[0][i] == strs[1][i] == str[2][i]:.            res += strs[0][i].        else: break ...if if strs[0][i] == strs[1][i] == strs[2][i]: add the element to res ..however, in my solution,the length of strs is fixed as three, the given condition is a arbitrary length of strs..how could write such an expression like ..            if strs[0][i] == strs[1][i] == str[s2][i] ....strs[length-1][i]:...for else solution: ..    #iteration case .    for i in range(size):.        prefix = strs[0][i].        for j in range(1, len(strs)): #check the chain equal .            if strs[j][i] != prefix: break .        else:.            res += prefix..    return res"
