"error: 'bad file descriptor' i don't understand why i keep getting the following error message when i run my code:..with open(classchoice, 'r+') as resultfile:.oserror: [errno 9] bad file descriptor...this is my code:..import collections..classchoice = int(input(""which class do you want to order? "")).if classchoice == 1:.    open (""class 1.txt"").elif classchoice == 2:.    open (""class 2.txt"").else:.    open (""class 3.txt"")..scores = {}.def alphabetical():.    with open(classchoice, 'r+') as resultfile: .        for line in resultfile:.            name, score = lines.split("":"").            scores.setdefault(name, collections.deque(maxlen=3)).append(int(score))..    for name in sorted(scores):.        m = max(scores[name]).        print('{name}: {m}'.format(name=name, m=m))..def highestscore():.    with open(classchoice, 'r+') as resultfile:.        for line in resultfile:.            name, score = line.split("":"").            scores.setdefault(name, collections.deque(maxlen=3)).append(int(score))..    for name in sorted(scores, key=lambda name: max(scores[name]), reverse=true):.        m = max(scores[name]).        print('{name}: {m}'.format(name=name, m=m))..def averagescore():.    with open(classchoice, 'r+') as resultfile:.        d = {}.        for line in resultfile:.            column = line.split("":"").            names = column[0].            scores = int(column[1].strip()).            d.setdefault(names, []).append(scores).        averages=[]..        for names, v in d.items():.            average = (sum(v[-3:])/len(v[-3:])).            averages.append((names, average)).        for names, average in sorted(averages, key=lambda a: a[1], reverse=true):.            print(names, average)..orderchoice = (input(""how do you want to order the data? "")).if orderchoice == ""alphabetically"":.                  alphabetical().elif orderchoice == ""with highest score for the tests, highest to lowest"":.                  highestscore().else:.                  averagescore()"
