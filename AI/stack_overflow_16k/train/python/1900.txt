"can't define variables in modules i'm having trouble with 2 variables in this code nmin and ns, i guess it is a modularization problem. ..def le():.    ns=0.    nmin=0.    my_list=[].    while true:    .        s=input('enter the salary ').        if s=='': break.        s=float(s).        ns=ns+1  #couting the numbers of salaries (s) typed (says undefined).        bonus=s*0.2.        if bonus &lt; 100:.            bonus=100.            nmin=nmin+1  #couting the numbers minimal bonuses (says undefined).        my_list.append(s).        my_list.append(bonus).        return my_list, nmin, ns...def calculos(my_list):.    vmax=my_list[1].    total=0.    for i in  my_list[1::2]:.        total=total + i.    for i in my_list[1::2]:.        if i &gt; vmax:.            vmax=i.    return vmax, total..def printing(my_list, vmax, total, nmin, ns ):.        print('the total amount spent on bonus is r${:5.2f}'.format(total)).        print('the number of salaries if {2d}'. format(ns)).        print('the highest bonus amount paid is r${:5.2f}'.format(vmax)).        print('the number of minimal bonuses is {2d}'.format(nmin)).        return ....my_list= le().vmax, total= calculos(my_list).write= printing(my_list, vmax, total, nmin, ns)*...i returned them in the first module, used as arguments on def printing and in the main, calling the modules. still, it stays undefined on the last line...ps: when i remove them off the whole code, it works."
