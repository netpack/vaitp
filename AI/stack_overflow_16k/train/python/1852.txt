"confusing blank oop-inheritance i am new to blank language. .i have only 10 days experience on it..when i start learning there is no difficult, but it make me slow down when i reach ""object oriented concept"", especially ""inherited""...some of my background knowledge about ""inherited is the child class can get all of characteristic and behavior of parent class, in.other words - data and methods of parent""..ok, i am going to show the concept that make me confuse with two programs..both of them are getting the same result, so why people are making different...first:..class parent():    .    parentdata = 0    .    def __init__(self):        .        pass    .    def getparentdata(self):.        return parent.parentdata.    def setparentdata(self, setdata):.        parent.parentdata = setdata....class child(parent):.    childdata = 0.    def __init__(self):.        pass.    def getchilddata(self):.        return child.childdata.    def setchilddata(self, setdata):.        child.childdata = setdata...child = child().print ""default child's data is :"" + str(child.getchilddata())#getting 0.child.setchilddata(3).print ""after adding child's data is :""+ str(child.getchilddata()) # getting 3.print ""default parent's data is:""+ str(child.getparentdata())# getting 0.child.setparentdata(1).print ""after adding parent's data is :""+str(child.getparentdata())# getting 1...second:..class parent():.    parentdata = 0.    def __init__(self):.        pass.    def getparentdata(self):.        return parent.parentdata.    def setparentdata(self, setdata):.        parent.parentdata = setdata..class child(parent):.    childdata = 0.    def __init__(self):.        #super(child, self).__init__().        #super(child, self).__init__(self, self).        parent.__init__(self).    def getchilddata(self):.        return child.childdata.    def setchilddata(self, setdata):.        child.childdata = setdata.child = child().print ""default child's data is :"" + str(child.getchilddata())#getting 0.child.setchilddata(3).print ""after adding child's data is :""+ str(child.getchilddata()) # getting 3.print ""default parent's data is:""+ str(child.getparentdata())# getting 0.child.setparentdata(1).print ""after adding parent's data is :""+str(child.getparentdata())# getting 1...and please also guide me, how to use super() method for instance of parent.__init__(self).somebody used, super method in there and some are doing as my way.i am not clearly these two different...in these two program - i am not using __init__ as constructor..if i am going to use __init__ as to add data into the class's data(childdata,parentdata), how do i insert parameter in parent.__init__(self) and both of their def __init__(self): method?"
