"calculation of infinite series using loops in blank i wish to make the code for a function that calculates the following infinite series:....which converges to ""sin(x)"". i wrote the code for getting the value for x:..import math..def zero_to_infinity():.    i = 0.    while true:.        yield i.        i += 1..def calcmyseries(x):.    res, temp = 0, 0.    for i in zero_to_infinity():.        res += (((-1)**i)*(x**(2*i+1)))/math.factorial(2*i+1).        if res == temp:.            break.        temp = res.    return res...the code works ok with small values (e.g) 10, 20. however; for large values it generates false numbers. here is a sample of the output:..&gt;&gt; calcmyseries(10): -0.54402111088927.&gt;&gt; sin(10) =  -0.5440211108893698.&gt;&gt; calcmyseries(40): -3.282209134433358.&gt;&gt; sin(40) =  0.7451131604793488...why is the output behaving as such? are bits being omitted while doing the calculations with larger numbers?"
