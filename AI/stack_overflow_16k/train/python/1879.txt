"blank nameerror: name -- syntax error .  possible duplicate:.  i have a compiler error &ldquo;not defined&rdquo; although there is a definition  .....   from gasp import *.grid_size = 30.margin = grid_size..background_color = color.black    # colors we use.wall_color = (0.6 * 255, 0.9 * 255, 0.9 * 255)..# the shape of the maze.  each character.# represents a different type of object.#   % - wall.#   . - food.#   o - capsule.#   g - ghost.#   p - chomp.# other characters are ignored...the_layout = [.  ""%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"",    .  ""%.....%.................%.....%"",.  ""%o%%%.%.%%%.%%%%%%%.%%%.%.%%%o%"",.  ""%.%.....%......%......%.....%.%"",.  ""%...%%%.%.%%%%.%.%%%%.%.%%%...%"",.  ""%%%.%...%.%.........%.%...%.%%%"",.  ""%...%.%%%.%.%%% %%%.%.%%%.%...%"",.  ""%.%%%.......%gg gg%.......%%%.%"",.  ""%...%.%%%.%.%%%%%%%.%.%%%.%...%"",.  ""%%%.%...%.%.........%.%...%.%%%"",.  ""%...%%%.%.%%%%.%.%%%%.%.%%%...%"",.  ""%.%.....%......%......%.....%.%"",.  ""%o%%%.%.%%%.%%%%%%%.%%%.%.%%%o%"",.  ""%.....%........p........%.....%"",.  ""%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%""]...class immovable:.    def is_a_wall(self):.        return false..class nothing(immovable):.    pass..class maze:.    def __init__(self):.        self.have_window = false.        self.game_over = false.        self.set_layout(the_layout).        set_speed(20)..    def set_layout(self, layout):.        height = len(layout)                   .        width = len(layout[0])                .        self.make_window(width, height).        self.make_map(width, height)         .        max_y = height - 1.        for x in range( width ):     .            for y in range(height):.                char = layout[max_y - y][x]   .                self.make_object((x, y), char) ..    def make_window(self, width, height):.        grid_width = (width -1) * grid_size.        grid_height = (height - 1) * grid_size.        screen_width = 2 * margin + grid_width.        screen_height = 2 *  margin + grid_height.        begin_graphics(screen_width, screen_height,""chomp"",background_color)..    def to_screen(self, point):.        (x,y) = point.        x = x * grid_size + margin.        y = y * grid_size + margin.        return(x,y)..    def make_map(self, width, height):.        self.width = width.        self.height = height.        self.map = [].        for y in range(width):.            new_row = [].            for x in range(width):.                new_row.append(nothing()).            self.map.append(new_row)..    def make_object(self,point,charactor):.        (x,y) = point.        if charactor == ""%"":.            self.map[y][x] = wall(self,point)..    def finished(self):.        return self.game_over..    def play(self):.        update_when('next_tick')..    def done(self):.        end_graphics().        self.map = []..    def object_at(self,point):.        (x,y) = point.        if y &lt; 0 or y &gt;= self.height:.            return nothing().        if x &lt; 0 or x &gt;= self.width:.            return nothing().        return self.map[y][x].....class wall(immovable):.    def __init__(self, maze, point):.        self.place = point                          # store our position.        self.screen_point = maze.to_screen(point).        self.maze = maze                            # keep hold of maze.        self.draw()..    def draw(self):.        (screen_x, screen_y) = self.screen_point.        dot_size = grid_size * 0.2.        circle(self.screen_point, dot_size,   .                color = wall_color, filled = 1).        (x, y) = self.place.        neighbors = [ (x+1, y), (x-1, y)].        for neighbor in neighbors:.            self.check_neighbor(neighbor)..    def check_neighbor(self,neighbor):.        maze = self.maze.        object = maze.object_at(neighbor)..        if object.is_a_wall():.            here = self.screen_point.            there = maze.to_screen(neighbor).            line(here, there, color = wall_color,thickness = 2)..    def is_a_wall(self):.        return true..the_maze = maze()..while not the_maze.finished():.    the_maze.play()..the_maze.done()...i got this error..... traceback (most recent call last):   file ""chomp.py"", line 110, in..  .  .      class wall(immovable):   file ""chomp.py"", line 124, in wall.      for neighbor in neighbors: nameerror: name '...neighbors' is not defined..i spent lot of time still can't find what's wrong, need some help"
