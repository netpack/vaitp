"creating a buffer class by extending blank str i guess this is best explained by code and comments:..import struct..class binary_buffer(str):.    def __init__(self, msg=""""):.        self = msg.    def write_ubyte(self, ubyte):.        self += struct.pack(""=b"", ubyte).        return len(self)..output.&gt;&gt; bb = binary_buffer().&gt;&gt; bb # buffer starts out empty, as it should.''.&gt;&gt; bb.write_ubyte(200).1   # we can see that we've successfully written one byte to the buffer.&gt;&gt; bb.''  # huh? we just wrote something, but where has it gone?"
