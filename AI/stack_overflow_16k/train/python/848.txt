"i am trying to sort a linked list in descending order can you please help me, i am trying to sort the linked lists according to the documentation in the add function but i am getting an error which says:.f.add('b', 2).file """", line 69, in add.attributeerror: 'nonetype' object has no attribute 'next'.how can i avoid this?.thankyou...class frequency(object):.    """"""..    stores a letter:frequency pair...    &gt;&gt;&gt; f = frequency('c', 2).    &gt;&gt;&gt; f.letter.    'c'.    &gt;&gt;&gt; f.frequency.    2.    &gt;&gt;&gt; f.    {c: 2}.    """""".    def __init__(self, letter, frequency):.        self.letter = letter.        self.frequency = frequency.        self.next = none..    def __repr__(self):.        return '{%s: %d}' % (self.letter, self.frequency)..class sortedfrequencylist(object):.    """""".    stores a collection of frequency objects as a sorted linked list..    items are sorted from the highest frequency to the lowest..    """""".    def __init__(self):.        self.head = none..    def add(self, letter, frequency):.        """""".        adds the given `letter`:`frequency` combination as a frequency object.        to the list. if the given `letter` is already in the list, the given.        `frequency` is added to its frequency...        &gt;&gt;&gt; f = sortedfrequencylist().        &gt;&gt;&gt; f.add('a', 3).        &gt;&gt;&gt; f.        ({a: 3}).        &gt;&gt;&gt; f.add('b', 2).        &gt;&gt;&gt; f.            ({a: 3}, {b: 2}).        &gt;&gt;&gt; f.add('c', 4).        &gt;&gt;&gt; f.        ({c: 4}, {a: 3}, {b: 2}).        &gt;&gt;&gt; f.add('b', 3).        &gt;&gt;&gt; f.        ({b: 5}, {c: 4}, {a: 3}).        """"""..        current = self.head.        found = false.        if self.head is none:.            self.head = frequency(letter, frequency).        else:.            prev = none.            while current is not none:.                if current.letter == letter:.                    current.frequency = current.frequency + frequency.                    found = true.                prev = current.                current = current.next..                next1 = current.next.                if next1 is none:.                    current = next1..                if current.frequency &lt; next1.frequency:.                    temp = current.                    current = next1.                    next1 = temp.                else:.                    current = next1.                    next1 = current.next.next...            if found is false:.                prev.next = frequency(letter, frequency)"
