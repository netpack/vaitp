"blank: add elements to dictionary attribute of class not works i' trying to create a class containing a dictionary as attribute, and methods to add elements to the dictionary and to show all the elements that the dictionary contains. .so i tried this: ..class catalogue:.    def __init__(self):    .        self.dictionary = dict()..    def addelement(self,name,price):.       if(self.dictionary.has_key(name)):.            print ""this item is already in the catalogue. "".       else:.            print ""the item "", name , ""was added to the catalogue"".            self.dictionary[name] = price         ..    def showelements(self):.        print ""catalogue: "".        print self.dictionary...and then when used this class inside main function, addelements() doesn't work properly ..catalogue = catalogue..item  = raw_input(""name of the item: "").price = raw_input(""price: "")..catalogue().addelement(item, price)..catalogue().showelements()...for example if i put as item= ""cd"" , and price = ""1"" .the outputs of those methods are: ..from catalogue().addelements(item,price).. the item cd was added to the catalogue. {'cd', '1'}...but then when i used catalogue().showelements() .. catalogue:. {}...it seems that dictionary is not passed by reference in the method addelements. ..thanks"
