"averaging the difference between multiple values in a dictionary i have a tab delimited text file with 2 columns, bill to name and date, date is in excel number format.  the code.....import csv.from collections import defaultdict..d = defaultdict( list )..input_file = ""c:\users\intern\documents\blank.txt"".output_file = ""c:\users\intern\documents\b.csv""..with open( input_file, 'r') as infile:.    reader = csv.reader(infile, delimiter='t').    next(reader, none)  # skip the header.    for row in reader:.        d[ row[0] ].append( int(row[1]) )..with open( output_file, 'w' ) as outfile:.    writer = csv.writer(outfile, delimiter='t').    for key, value in d.items():.    if len(value) == 1:.        avg_diff = none # or 0 -- this indicates there was only 1 purchase.    else:.    # this requires your dates to be sorted, ascending, but that just takes.    # wrapping 'value' in 'sorted' if it isn't sorted yet.        avg_diff = mean([v[i] - v[i-1] for i, v in enumerate(value) if i]).    writer.writerow( [key, avg_diff] )...current error:..typeerror                                 traceback (most recent call last).&lt;iblank-input-2-1e819db94549&gt; in &lt;module&gt;().     22         # this requires your dates to be sorted, ascending, but that just takes.     23         # wrapping 'value' in 'sorted' if it isn't sorted yet.---&gt; 24             avg_diff = mean([v[i] - v[i-1] for i, v in enumerate(value) if i]).     25         writer.writerow( [key, avg_diff] )..&lt;iblank-input-2-1e819db94549&gt; in &lt;listcomp&gt;(.0).     22         # this requires your dates to be sorted, ascending, but that just takes.     23         # wrapping 'value' in 'sorted' if it isn't sorted yet.---&gt; 24             avg_diff = mean([v[i] - v[i-1] for i, v in enumerate(value) if i]).     25         writer.writerow( [key, avg_diff] )..typeerror: 'float' object is not subscriptable..this is what i'm running into now with the updated code."
