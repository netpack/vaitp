"how to create a timezone/dst accurate date-time plus unix epoch number? for a database project, i want a two-field table consisting of the integer portion of a unix epoch timestamp, and the corresponding human-readable date and time. (i only need 5-minute increments, and i want an integer, so i'm ignoring the decimal portion of the epochal float.)..being a blank newbie, i am uncertain about the reliability of my methods: my approach currently is to use a time-tuple, which includes the timezone info. but time-tuple appears not to allow addition and subtraction, while datetime objects do. so i thrash around with some conversions. my first attempt:..import datetime.import time.sp = '%m/%d/%y %h:%m'.otime = datetime.datetime(2010, 3, 14, 0, 0, 0, 0).itime = int(round(time.mktime(otime.timetuple()))).for x in range(0, 50):.    print(str(itime)+ "", "" + str(time.strftime(sp, otime.timetuple()))).    otime = otime + datetime.timedelta(seconds=300).    ttime = time.localtime(time.mktime(otime.timetuple())).    otime = datetime.datetime.fromtimestamp(time.mktime(ttime)).    itime = int(round(time.mktime(ttime)))...this works, and traverses dst time changes correctly for my timezone...just incrementing the unix epoch seconds seems simpler, though:..import datetime.import time..sp = '%m/%d/%y %h:%m'.otime = datetime.datetime(2010, 3, 14, 0, 0, 0, 0).itime = int(round(time.mktime(otime.timetuple()))).for x in range(0, 50):.    print(str(itime)+ "", "" + str(time.strftime(sp, otime.timetuple()))).    itime = itime + 300.    otime = datetime.datetime.fromtimestamp(float(itime))...both methods seem to give identical output in the ranges i've checked, for example the dst time-change in 2010:..1268558100, 03/14/2010 01:15.1268558400, 03/14/2010 01:20.1268558700, 03/14/2010 01:25.1268559000, 03/14/2010 01:30.1268559300, 03/14/2010 01:35.1268559600, 03/14/2010 01:40.1268559900, 03/14/2010 01:45.1268560200, 03/14/2010 01:50.1268560500, 03/14/2010 01:55.1268560800, 03/14/2010 03:00.1268561100, 03/14/2010 03:05.1268561400, 03/14/2010 03:10.1268561700, 03/14/2010 03:15...my question: is there a reason to use datetime.timedelta() instead of simply incrementing the unix epoch integer by 300 seconds? will that end up biting me unexpectedly? is there a more elegant way to do this?"
