"modyfying parent class attribute in __init__ i would like to build object oriented model for file/strings converter. .i managed to solved the issue using functional approach but it just beggs for oop...here is the case:..my input data to convert is a list of common dictionaries but with different values (dump from csv file)...i need to update value of data3 in class a which is hidden inside of a list (fileheader) that is initialized within a's __init__ method.....class common(object).    def __init__(self, c):  # for now c will be a dictionary that we iterate over in external loop.        self.c = c..    def printdata(self, obj): # method used for printing (writting to a file in future).        print ''.join(obj)...   .. class a(common):   # creates file header.    def __init__(self, c):  #c is a dict.        self.c = c.        __data1 = 'data1'.        self.__data2 =  'data2'.        self.data3 = 'data3'.        self.fileheader = [__data1, __data2, self.__data3] # contains data3 value that i want to modify in class b.....class b(a):  # creates file footer, need to use modified fileheader value.    def __init__(self, c):.        a.__init__(self, c)     # gives me access to self.fileheader.        ## magically change fileheader's value updateing data3##.        data4 = 'data4' .        data5 = 'data5'.        .....        self.filefooter = [data4, ''.join(self.fileheader), data5]  # refering fileheader here gives me original 'data3' value...actual behaviour is that i get:.fileheader = ['data1', 'data2', 'data3'].filefooter = ['data4','data1', 'data2', 'data3', 'data5' ]..desired behaviour is to get modified data3='data3_modified':.fileheader - no changes.filefooter = ['data4','data1', 'data2, 'data3_modified', 'data5' ]..note that i've ignored ''.join() result for readability"
