"matplotlib sierpinski triangle from tkinter import *.import timeit.import matplotlib.pyplot as plt.#------------------------------------------------------------------------.# st_recur.#------------------------------------------------------------------------.def midpoint(p1,p2):.    return ((p1[0]+p2[0])/2,(p1[1]+p2[1])/2).def st_recur(level, p1, p2, p3):.    if level == 1:.        canvas.create_polygon(p1, p2, p3).        canvas.update.    else:.        p4 = midpoint(p1, p2).        p5 = midpoint(p2, p3).        p6 = midpoint(p1, p3).        st_recur(level - 1,p1,p4,p6).        st_recur(level - 1,p4,p2,p5).        st_recur(level - 1,p6, p5,p3)..#------------------------------------------------------------------------.# drawsierpinskitriangle.#------------------------------------------------------------------------.def drawsierpinskitriangle(event=none):.    global size.    level = int(levels.get()).    canvas.delete(""all"").    p1 = (0.1*size, 0.9*size)   # bottom left.    p2 = (0.5*size, 0.1*size)   # top.    p3 = (0.9*size, 0.9*size)   # bottom right.    st_recur( level, p1, p2, p3)....#===================================================================================.root = tk().root.title(""sierpinski triangle"")..#---- entry box for level number.label(root, text=""levels:"").grid(row=1, column=1, sticky=w).levels = stringvar().levels_entry = entry(root, width=7, textvariable=levels).levels_entry.grid(row=1, column=2)..#---- button to draw.button(root, text=""draw"", command=drawsierpinskitriangle).grid(row=1, column=3).#---- return key to draw.root.bind(""&lt;return&gt;"", drawsierpinskitriangle)..#---- canvas to draw.size = 500.canvas = canvas(root, width=size, height=size, borderwidth=1, highlightbackground='black', background='white').canvas.grid(row=1, column=4)..#---- space out widgets.for child in root.winfo_children():.    child.grid_configure(padx=5, pady=5)..#---- start event loop.start = timeit.timeit().a = st_recur.end = timeit.timeit().print(start - end)..plt.plot(start - end).plt.show()...root.mainloop()...could someone please help me plot a graph of this sierpinski triangle program? i'm trying to determine whether or not the program is linear o(n^2) or exponential o(logn). i'm unsure of how to integrate the st_recure function and the running time into mat plot lib. the goal is to measure the running time and plot."
