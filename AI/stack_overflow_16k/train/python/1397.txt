"blank - variable length argument list within class i have tried to produce a simplified version of what i am trying to accomplish; here it is:..class customstring():.    def __init__(self, function):.        self._creator_function = function..    @property.    def string(self, *args):.        return self._creator_function(*args)...def creator1(arg1):.    return 'hello ' + arg1..def creator2(arg1, arg2):.    return 'aloha ' + arg1 + ',' + arg2...the customstring class is meant to be a dynamic string generator, which is provided a function on initialisation that performs that returns the string given specific arguments. those functions might take an explicit number of arguments, as in the example below, but the class method should be flexible because each instance might have a different creator function...if i run the following:..c = customstring(creator1).c.string('john')...i would expect to see:..'hello john'...but i get an error instead:..typeerror: creator1() missing 1 required positional argument: 'arg1'"
