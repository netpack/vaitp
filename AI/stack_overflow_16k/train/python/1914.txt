"extracting data from website page 1 please, i want to extract the previous closing price, opening price, high, low and close from the picture below...the screen shot..below is my blank code but the output is skipping the needed to extract. the output it display is, ...import urllib.request as urllib2.from bs4 import beautifulsoup as bs..url=""http://www.nse.com.ng/market-data/trading-statistics/equities"".rawhtml = urllib2.urlopen(url).read().parsedhtml = bs(rawhtml, 'html.parser')..stock = parsedhtml.find('tbody', attrs={'id': 'datacontainer'}).print(stock)...i have been able to scrap the dynamic content. however, it returns only the content on the first page. the other contents are paginated and they have the same url. the url is [http://www.nse.com.ng/market-data/trading-statistics/equities]. my new code :..from bs4 import beautifulsoup as bs.import sys  .from pyqt5.qtwidgets import qapplication  .from pyqt5.qtcore import qurl  .from pyqt5.qtwebenginewidgets import qwebenginepage ..class client (qwebenginepage):  .  def __init__(self, url):  .    self.app = qapplication(sys.argv)  .    qwebenginepage.__init__(self).    self.html = ''.    self.loadfinished.connect(self._on_load_finished)  .    self.load(qurl(url))  .    self.app.exec_()  ..  def _on_load_finished(self, result):  .    self.html = self.tohtml(self.callable).    print('load finished')..  def callable (self, html_str):.      self.html = html_str.      self.app.quit().  #  self.app.quit()  ..url = 'http://www.nse.com.ng/market-data/trading-statistics/equities'  .r = client(url)  .#parsedhtml = r.mainframe.tohtml() .soup = bs(r.html, 'html.parser').stock = soup.find('table', attrs={'class': 'table table-condensed table-striped'}).print(stock)...'..please, any idea on how to unwrap the other paginated items..thanks...@shivam pandya"
