"creating a list of ordereddicts i'm trying to parse this comma separated content which lists out some surveys for hips. here is my code:..with open('surveys.txt') as data:.    text = data.read().    surveys = ordereddict().    for survey in text.split('n'):.        for line in survey.split('n'):.            # skip empty or comment lines.            if line == '' or line.startswith('#'):.                continue.            try:.                key, value = [_.strip() for _ in line.split('=')].                surveys[key] = value.            except valueerror:.                continue...the gives me an ordereddict containing the elements of the last survey. this is because the content of surveys is over-written after each loop iteration...i tried to resolve this by creating an ordereddict for each new survey, and appending it to a list, using this code:..with open('surveys.txt') as data:.    text = data.read().    surveys = [].    for survey in text.split('n'):.        survey_od = ordereddict().        for line in survey.split('n'):.            # skip empty or comment lines.            if line == '' or line.startswith('#'):.                continue.            try:.                key, value = [_.strip() for _ in line.split('=')].                survey_od[key] = value.            except valueerror:.                continue.        surveys.append(survey_od)...but this creates a separate ordereddict for each comma separated value, like this:..ordereddict([('hips_order', '3')]) ordereddict([('hips_frame', 'galactic')]) ordereddict([('hips_tile_format', 'jpeg fits')])...when, instead i expect something like this:..ordereddict([('hips_order', '3'), ('hips_frame', 'galactic'), ('hips_tile_format', 'jpeg fits')])"
