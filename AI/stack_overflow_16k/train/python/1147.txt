"it always shows errors in .argparse? this is when  i try to run it at first with no changes     ..c:usersbilel.mkdownloadsvideo-object-detection-master&gt;blank main.py --detect_class detect_class --voice_cmd --score_threshold score_threshold --tracking_threshold tracking_threshold net_model detect_mode.    input args:  namespace(detect_class='detect_class', detect_mode='detect_mode', net_model='net_model', score_threshold='score_threshold', tracking_threshold='tracking_threshold', voice_cmd=true).    traceback (most recent call last):.      file ""main.py"", line 238, in &lt;module&gt;.        if args.detect_mode &gt; 1 :.    typeerror: '&gt;' not supported between instances of 'str' and 'int'...if i put the type of arguments ""net_models"" detect_mode etc .like .net_models type : int .detect_mode type :int.score_threshold type :float.tracking_threshold type :float..c:usersbilel.mkdownloadsvideo-object-detection-master&gt;blank main.py --detect_class detect_class --voice_cmd --score_threshold score_threshold --tracking_threshold tracking_threshold net_model detect_mode.usage: main.py [-h] [--detect_class detect_class] [--voice_cmd].               [--score_threshold score_threshold].               [--tracking_threshold tracking_threshold].               net_model detect_mode.main.py: error: argument net_model: invalid int value: 'net_model'...if i add :..args = sys.argv[1:].mode = int(args[0])...this is the error i get:..c:usersbilel.mkdownloadsvideo-object-detection-master&gt;blank main.py --detect_class detect_class --voice_cmd --score_threshold score_threshold --tracking_threshold tracking_threshold net_model detect_mode.traceback (most recent call last):.  file ""main.py"", line 219, in &lt;module&gt;.    mode = int(args[0]).valueerror: invalid literal for int() with base 10: '--detect_class'...the code/..if __name__ == '__main__':.    import threading.    import argparse.    import math.    import sys .    #import pdb.    #pdb.set_trace().    parser = argparse.argumentparser().    parser.add_argument(""net_model"", help=""faster_rcnn_inception_v2_coco_2018_01_28"" ).    parser.add_argument(""detect_mode"", help=""the detection mode: .        1 - detect all objects .        2 - detect a specific object .        3 - track a specific object"" )          .    parser.add_argument(""--detect_class"", help=""the class to detect. required when mode &gt; 1"").    parser.add_argument(""--voice_cmd"", help=""enable voice commands"", action =""store_true"").    parser.add_argument(""--score_threshold"", help=""only show detections with a probability of correctness above the specified threshold"",default=0.3).    parser.add_argument(""--tracking_threshold"", help=""tolerance (delta) between the object being detected and the position it is supposed to be in"",default=50)  .    args = parser.parse_args()    .    #args = vars(parser.parse_args()).    #args = parser.parse_args().    #parser.print_help().    print('input args: ', args)           .    if args.detect_mode &gt; 1 : .       if args.detect_class is none:.          print(""error: you must specify a class to detect if detection mode &gt; 1"")             .       sys.exit(0).    else:.        currentclassdetecting = args.detect_class"
