"connectfour in blank: embedding a while loop under a for loop so i'm trying to implement a connectfour game in blank, and i'm having some trouble with counting the pieces (from a single player) that are lined up together in a row. my code:..    class connectfour(object):.def __init__(self):.    self.row=6.    self.col=7.    self.board = []..    #initialize the board.    for arow in range(self.row):.        row = [].        for acol in range(self.col):.            row.append(none).        self.board.append(row)..    #function for counting the number of the same pieces in a row..    def count_it(self, row, column, step_row, step_col):.    assert row &gt;= 0 and row &lt; 6 and column &gt;= 0 and column &lt; 7.    assert step_row != 0 or step_col != 0.    counter1 = 0.    counter2 = 0.    if self.board[row][column] == none:.        return 0.    elif self.board[row][column] == 1:.        for i in range(6):.            while self.board[row + (i*step_row)][column + (i*step_col)] == 1:.                counter1 += 1.        return counter1.    else:.        for i in range(6):.            while self.board[row + (i * step_row)][column + (i*step_col)] == 2:.                counter2 += 1.        return counter2...when i input a location and ""step"" in my function, i would like to get the number of pieces player 1 or player 2 has lined up but when i enter:..    x= connectfour().    x.board[5][6] = 1  .    x.board[4][6] = 1 ..    x.count_it(5,6,-1,0)...i get no output."
