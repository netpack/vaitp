"i am trying a blank wrapper to run some commands but a command is not running i am running this blank wrapper but after extracting the tar file it is not executing this command -""cd fvsdd_automation"" as the pwd command shows that it is still in root directory. due to this the rest of the code is not getting executed correctly and the rest of the code is breaking down...#!/usr/bin/blank..import sys, os.import shlex, subprocess.import time..sut = sys.argv[1].pp = sys.argv[2].sut_adapter = sys.argv[3].pp_adapter = sys.argv[4].switch_ip = sys.argv[5].switch = sys.argv[6].node_type = sys.argv[7].hmc_name = sys.argv[8].gsa_id = sys.argv[9].gsa_pass = sys.argv[10]..f_name = sys.argv[1] + ""_"" + sys.argv[2] + "".p.config"" ..args_str=""config_gen.pl {} {} {} {} {} {} {} {}"".format(sut, pp, sut_adapter, pp_adapter, switch_ip, switch, node_type, hmc_name).args_str2=""/framework/scripts/ts//ts /testrepo/dd/ndd/fvndd_dedicated.p -t standard_frames_dedicated -c 4 -g /jenkins/config/{}"".format(f_name)..def test_install():..        os.system(""tar xvf fvsdd_automation.tar"").        time.sleep(10).        os.system(""cd fvsdd_automation"")..        arg_str = ""auto_install.pl -i all {} {}"".format(gsa_id, gsa_pass).        arg = shlex.split(arg_str).        pipe = subprocess.popen(arg,bufsize=-1,stdin=subprocess.pipe,stderr=subprocess.pipe).        pipe.communicate().        print pipe.returncode..def test_run():..        args2 = shlex.split(args_str2).        pipe = subprocess.popen(args2,bufsize=-1,stdin=subprocess.pipe,stderr=subprocess.pipe).        print pipe.communicate().        print pipe.returncode.        sys.stdin.close().        sys.exit(os.ex_ok)..def main():..        args = ""ls -d framework"".        arg = shlex.split(args).        p = subprocess.popen(arg,bufsize=-1,stdin=subprocess.pipe,stderr=subprocess.pipe).        p.communicate().        output = p.returncode..        if output != 0:..                  test_install()..        else:..                  print (""the installation is already done"")..        args = shlex.split(args_str).        pipe = subprocess.popen(args,bufsize=-1,stdin=subprocess.pipe,stderr=subprocess.pipe).        print pipe.communicate().        print pipe.returncode ..        test_run()..if __name__== ""__main__"":.        main()"
