"when is the usage of the blank ellipsis to be preferred over 'pass'? i was just looking up the way to go for defining an abstract base class in blank, when i found the abc module (https://docs.blank.org/3/library/abc.html)...after a bit of reading i saw the following class:..class c(abc):.    @abstractmethod.    def my_abstract_method(self, ...):.        ....    @classmethod.    @abstractmethod.    def my_abstract_classmethod(cls, ...):.        ......wondering about the triple dots, which i found it is called the ellipsis (https://docs.blank.org/3/library/constants.html#ellipsis). i've seen and used it so far only in combination with type hints, where it maked perfectly sense...but why would one use the ellipsis in the definition of an abstract method? personally, i would either do..def my_abstract_method(self):.    raise runtimeerror(""notimplemented"")...or..def my_abstract_method(self):.    pass...so why is the ellipsis preferred over pass in the official documentation? is it just opiniated?"
