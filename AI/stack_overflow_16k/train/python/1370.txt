"how can i add something to a list in a specific spot without using insert would love some advice please. i am fairly new to programming and am working on an assignment where i need to add something a value into a list in a specified position. the parameters of the assignment are that you have to use a loop, and you cannot use any built in functions other than range() or append(). ..the error i am getting is that the line 4th from bottom says ""typeerror: can only concatenate list (not ""int"") to list"" and i am not sure how to fix this. .any advice would be much appreciated! please note - as this is for an assignment i'm not looking for the code, rather advice on where i am going wrong and how i can fix it as i want to learn and understand!..my_list = [1, 2, 3, 4, 5, 4, 1, 4, 6]..#function 1 - takes list as parameter and returns length.def length(my_list):.    count = 0.    for x in my_list:.        count = count + 1.    return count..#function 5 - returns a copy of the list with the value inserted at the specified pos.def insert_value(my_list, value, insert_position):.    count = 0.    new_list = [].    if insert_position &gt; length(my_list):.        new_list = my_list.append(value).    elif insert_position &lt; 0:.        new_list = value + my_list.    while count &lt; insert_position:.        new_list = my_list[:insert_position].        count= count + 1.        new_list = new_list + value.        new_list = new_list[insert_position+1:].    return new_list.print(insert_value(my_list, 11, 6))"
