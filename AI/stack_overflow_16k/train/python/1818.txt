"configuring a module with conditional imports lets say i have a module called config.py which contains data relating to the harware i'm connected to and i now wish to work with two different pieces of hardware, hw1 and hw2. config.py has access to a flag so it knows which hardware i'm working with. i wish to put specific hw1 config data in its own file and likewise for hw2. ..so i now have something like this:..config.py.hw1_config.py.hw2_config.py...and then do a conditional import to import one or the other into config.py..if hw = ""hw1"":.   from hw1_conifg import * .elif hw = ""hw2"":.   from hw2_conifg import * ...is this a good approach?..would it be possible for me to create folders within config.py's folder called hw1 and hw2 and move hw1_config.py into the hw1 folder, renaming it config.py. likewise for hw2_config.py. how would the conditional imports look then?..config.py./hw1/config.py./hw2/config.py...i might also wish in the future to break up config.py into for example startup_config.py and shutdown_config.py. again these files differ depending on the hw involved. what might be a good file/folder structure in this case?..config/startup.py .config/shutdown.py.config/hw1/startup.py .config/hw1/shutdown.py.config/hw2/startup.py .config/hw2/shutdown.py"
