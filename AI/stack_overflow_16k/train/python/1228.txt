"can an object pass itself as a paramter to a function in blank? so i'm building a game, and i have a message handler that deals (so far) with running the game itself, and now the lobby. every time a message is sent, a new instance of that message handler is created. for example.....from wshandler.py:..def on_message(self, message):.    mh = protocol.msghandler.handlerimplementation(self).    message = tornado.escape.json_decode(message).    mh.handle_message(message)...now that mh object... it calls a function in the lobby class, which puts them into a queue. the queue is going to be implemented on a thread, that starts when the program is started.....from main.py:..lobby = model.lobby.lobby().threading.thread(target = lobby.match_players).start()...what i'm basically asking is can i do this, in handlerimplementation.....def join_queue(self, username):.    main.lobby.join_queue(username, self)...and this in lobby.py:..def join_queue(self, username, messager):.    self.lock.acquire().    self.queue.append((username, messager)).    self.lock.release()...so that when i'm matching players in lobby.match_players i can basically just do this.....def match_players(self):.    while(true):.        while len(self.queue) &lt; 2: pass.        self.lock.acquire().        if len(self.queue) &gt;= 2:.            player1 = self.queue.pop(0).            player2 = self.queue.pop(0).            player1[1].player_connect(player1[0], player2[0]).            player2[1].player_connect(player2[0], player1[0]).        self.lock.release()...assuming player_connect is a defined function in handlerimplementation?"
