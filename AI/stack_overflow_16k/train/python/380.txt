"concise flexible struct definition i need to define a bunch of flexible structs (objects with a simple collection of named fields, where you can add new fields later, but i don't need methods or inheritance or anything like that) in blank 2.7. (the context is that i'm reading stuff from binary files with struct.unpack_from, then adding further data to the results.)..a class meets the requirements, e.g...class thing:.    def __init__(self, foo, bar):.        self.foo = foo.        self.bar = bar...the only downside being that each field name must be written out three times. collections.namedtuple gives a more precise definition syntax but you can't add fields to the resulting objects...is there a way to get flexibility of a class with at least some of the brevity of collections.namedtuple?"
