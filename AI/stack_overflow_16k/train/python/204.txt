"derived class does not call init i am trying to understand a certain oauth2/web2py integration, but some quirks in the blank class model are making it difficult for me to grasp. specifically, i have this web2py controller:..def google():.    if 'state' in request.vars and request.vars.state == 'google':.        session.state = request.vars.state.    person = person(""google"").    print person.render().    return person.render()...so we have are using the person class here. the implementation is like this:..class person(base):...no __init__ is present in the person class. the base class has an __init__ function:..class base(object):.    def __init__(.        self,.        hooks=[],.        theme=""%(name)s/"",.        view=""app/generic"",.        meta=none,.        context=none.        ):.        from gluon.storage import storage.        self.meta = meta or storage().        self.context = context or storage().        self.context.alerts = [].        self.context.content_types = [].        self.context.categories = [].        self.context.menus = [].        self.context.internalpages = [].        self.theme = theme.        self.view = view..        # hooks call.        self.start().        self.build().        self.pre_render()..        # aditional hooks.        if not isinstance(hooks, list):.            hooks = [hooks]..        for hook in hooks:.            self.__getattribute__(hook)()...so my questions is as follows: if person is not explicitly calling base.__init__, will it be called at all?..or, to make it more general: will the base class __init__ function be called if the derived class has no __init__ function? and if the derived class has an __init__ function but does not explicitly call the base class __init__ function?"
