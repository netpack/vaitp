"blank - object created outside of function is fully accessable inside? i have some problems understanding the variable scope. for normal variables i understand it, but if i define a object things confuses me. please have a look at this code:..class test():.    pass..text=""hi there"".num=1..p=test().p.var=""good bye"".p.arr = [].p.num = 5..def output_before():.    print ""before change: object text "" ,p.var.    print ""before change: object number "", p.num.    print ""before change: basic text "" ,text.    print ""before change: basic num "", num..def output_after():.    print ""after change: object text "" ,p.var.    print ""after change: object number "", p.num.    print ""after change: basic text "" ,text.    print ""after change: basic num "", num....def change():.    text = ""whats up"".    num=5.    p.num=10.    p.var=""good night"".    p.arr.append (""sleep well"")...output_before().change().output_after()..print p.arr..for i in range(5):.    change().print p.arr...which gives me this ouput:..before change: object text  good bye.before change: object number  5.before change: basic text  hi there.before change: basic num  1.after change: object text  good night.after change: object number  10.after change: basic text  hi there.after change: basic num  1.['sleep well'].['sleep well', 'sleep well', 'sleep well', 'sleep well', 'sleep well', 'sleep well']...the object from class test seems to be global by default. is this right ?..thanks,.andy"
