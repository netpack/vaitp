"unable to clean up temp file: c:dropboxcopyrightstmp18valt i am using the following script to add a copy right to all the files in the directories and subdirectories for a give directory passed as first argument ,am running the script as follows but running into below error....can anyone provide inputs on ohw to fix it?..error:-..unable to clean up temp file: c:dropboxcopyrightstmp18valt.traceback (most recent call last):.  file ""add_copyright.py"", line 69, in &lt;module&gt;.    prepend_file(fullname, dirpath).  file ""add_copyright.py"", line 54, in prepend_file.    os.remove(temp_fname).windowserror: [error 32] the process cannot access the file because it is being used by another process: 'c:\dropbox\copyrights\tmp18valt'...code:-..import fnmatch.import os.import shutil.import sys.import tempfile..file_patterns_to_match = ['*.c','*.h','*.cpp','*.txt']..headertext = """"""/*. * copyright (c) 2012-2013, the linux foundation. all rights reserved.. *. * previously licensed under the isc license by qualcomm atheros, inc.. *. *. * permission to use, copy, modify, and/or distribute this software for. * any purpose with or without fee is hereby granted, provided that the. * above copyright notice and this permission notice appear in all. * copies.. *. * the software is provided ""as is"" and the author disclaims all. * warranties with regard to this software including all implied. * warranties of merchantability and fitness. in no event shall the. * author be liable for any special, direct, indirect, or consequential. * damages or any damages whatsoever resulting from loss of use, data or. * profits, whether in an action of contract, negligence or other. * tortious action, arising out of or in connection with the use or. * performance of this software.. */.""""""..# make any newlines in headertext match the system line ending.headertext = headertext.replace('n', os.linesep)..def want_this_file(fname):.    for pat in file_patterns_to_match:.        if fnmatch.fnmatch(fname, pat):.            return true.    return false..def prepend_file(fullname, path):.    # with statement means temp file is written and closed at end of with.    with tempfile.namedtemporaryfile(dir=path, delete=false) as out_file:.        # get the name immediately.        temp_fname = out_file.name..        try:.            # use binary mode to avoid newline translations.            with open(fullname, ""rb"") as in_file:.                out_file.write(headertext).                shutil.copyfileobj(in_file, out_file).        except exception:.            # on any error, clean up temp file and re-raise exception.            try:.                os.remove(temp_fname).            except exception:.                print(""unable to clean up temp file: "" + temp_fname).                pass.            raise.    # rename temp file to fullname, clobbering original.    os.rename(temp_fname, fullname)...start_directory = sys.argv[1]..for dirpath, dirnames, filenames in os.walk(start_directory):.    for fname in filenames:.        if want_this_file(fname):.            fullname = os.path.join(dirpath, fname).            prepend_file(fullname, dirpath)"
