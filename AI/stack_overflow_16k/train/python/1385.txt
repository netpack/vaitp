"how to couple 'reasons' with return values, elegantly what often happens in code i'm writing is i'll have a function that checks a condition dependent on many other conditions, e.g.:..def is_foo(bar):.    if x: return true.    if y: return false.    if z: return true.    return false...then, i'll want to debug my code or log it, so i'll change the above to:..def is_foo_reason(bar):.    if x: return true, ""cause of x you fool"".    if y: return false, ""no x but y"".    if z: return true, ""z z z z z z"".    return false, ""default"".#for backwards compatibility:.def is_foo(bar): return is_foo_reason(bar)[0] ...then the code that wants the reason (so it can log it / show it to user, w/e) calls the _reason version...my question is: is there any more elegant way to do this?"
