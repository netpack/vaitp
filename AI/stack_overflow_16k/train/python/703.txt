"trying to figure out the logic in my connect four game in blank i'm a fairly new to blank and i'm working on a connect four game. i'm able to initialize the board, make moves myself, and make the computer move. however, i know that there must be a better way of ""placing my pieces"" than the huge nest of if statements that i have. furthermore, i'm not sure how to approach the logic of actually checking whether or not the game has been ""won"" or drawn...here's my code:..import random..board = [[""."" for x in range(7)] for x in range(6)].symbol = """"..def boardlogic(pick, user):.    if user == ""user"":.        symbol = ""0"".    else:.        symbol = ""x"".    if board[0][pick] != ""."":.        if board[1][pick] != ""."":.            if board[2][pick] != ""."":.                if board[3][pick] != ""."":.                    if board[4][pick] != ""."":.                        if board[5][pick] != ""."":.                            if board[6][pick] != ""."":.                                print(""that column is full."").                            else:.                                board[6][pick] = symbol.                        else:.                            board[5][pick] = symbol.                    else:.                        board[4][pick] = symbol.                else:.                    board[3][pick] = symbol.            else:.                board[2][pick] = symbol.        else:.            board[1][pick] = symbol.    else:.        board[0][pick] = symbol..def printboard():.    for row in board:.        for val in row:.            print '{:4}'.format(val),.        print..won = false.while not won:.    printboard()..    #pick a column.    #add functionality to disallow a full column from being entered.    while true:.        try:.            yourpick = int(raw_input('pick a column 0 - 6: ')).        except valueerror: # just catch the exceptions you know!.            print 'that's not a number!'.        else:.            if 0 &lt;= yourpick &lt; 6: # this is faster.                break.            else:.                print 'out of range. try again'.    print(yourpick).    #column logic.    boardlogic(yourpick, ""user"")..    #opponent randomly picks a column.    theirpick = random.randint(0, 6).    print(theirpick).    #column logic.    boardlogic(theirpick, ""notuser"")..    #check win conditions.    #won = true"
