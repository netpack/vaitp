"how to declare a variable to be used by the imported module i have a module with the name my_module.py.inside of this module there is a function my_function:..def myfunction():.    print my_variable...apparently when this functions is called it prints my_variable which is not instantiated anywhere yet. so, calling myfunction() from inside of the module itself will crash the execution...now, aside from my_module.py i have another script with the name my_app.py residing in the same folder...inside of my_app.py i am importing my_module.py and instantiating my_variable under its namespace. after my_variable is instantiated i am calling my_module.myfunction() which picks up my_variable and prints its context out:..import module.module.my_variable = 'this variable is instantiated inside of another script'.module.myfunction()...while this approach works i wonder if it is designed properly. is there other way to instantiate a variable outside the imported module to be used by this imported module?"
