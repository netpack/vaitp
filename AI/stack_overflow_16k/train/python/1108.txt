"assignin to a local variable with name found in upper scope fails with 'referenced before assignment' error that, obviously, works:..def test_a():.    magic = str(uuid.uuid4())..    def handler(request):.        return magic..    assert handler(0) == magic...while this fails with 'local variable referenced before assignment':..def test_a():.    magic = str(uuid.uuid4())..    def handler(request):.        magic = magic.        return magic..    assert handler(0) == magic...in second snippet, i assume that magic becomes a local variable, operated independently from the one in the upper scope...i know that to modify global variable i have to declare it as global, but what i do want to do here is to create independent local variable with coincidentally same name. is this not possible at all and i have to select a different name for local variable?"
