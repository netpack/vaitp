how to load config file in blank from an external module i have a config module (myconfig.py) present in a library for which i created a standard distribution package using setuptools...  --configpackage.    |.    | ---- myconfig.py.    | ---- __init__.py...myconfig.py is a key value pair like this:..my_name = 'myname'.my_age = '99'...now i have another blank project where i import this config module like this   ..import configpackage.myconfig as customconfig...if this config file was native to my blank project and had not come from an external project then i would have done something like this:..app = flask(__name__) .app.config.from_object('app.configpackage.config')...where config is actually config.py file under configpackage. ..and any key value pair in config.py could then be accessed as .. myname = app.config['my_name']...my problem is that i am not able to load the external config file in the above mentioned way for a native config file. what i have tried is this which doesn't work:..import configpackage.myconfig as customconfig..app = flask(__name__) .app.config.from_object(customconfig).myname = app.config['my_name']...i get the following error..model_name =  app.config['model_name'].keyerror: 'model_name'..which means that it is not able to load the config file from external module correctly. can anyone tell me the right way to accomplish this ?
