"creating class instances from a list using blank.....i have a list that contain names. i want to use each item in the list to create instances of a class. i can't use these items in their current condition (they're strings). does anyone know how to do this in a loop...class trap(movevariables):.    def __init__(self):.        movevariables.__init__(self).        if self.x==0:.            self.x=input('move distance(mm) ').        if self.vmax==0:.            self.vmax=input('max velocity? (mm/s)  ').        if self.a==0:.            percentg=input('acceleration as decimal percent of g'  ).            self.a=percentg*9806.65.        self.xmin=((self.vmax**2)/(2*self.a)).        self.calc().    def calc(self):.        if (self.x/2)&gt;self.xmin:.            self.ta=2*((self.vmax)/self.a)                # to reach maximum velocity, the move is a symetrical trapezoid and the (acceleration time*2) is used.            self.halfta=self.ta/2.                               # to calculate the total amount of time consumed by acceleration and deceleration.            self.xa=.5*self.a*(self.halfta)**2.        else:                                                               # if the move is not a trap, maxv is not reached and the acceleration time is set to zero for subsequent calculations                                                        .            self.ta=0.        if (self.x/2)&lt;self.xmin:.            self.tva=(self.x/self.a)**.5.            self.halftva=self.tva/2.            self.vtriang=self.a*self.halftva.        else:.            self.tva=0.        if (self.x/2)&gt;self.xmin:.            self.tvc=(self.x-2*self.xmin)/(self.vmax)  # calculate the constant velocity time if you do get to it.        else:.            self.tvc=0.        self.t=(self.ta+self.tva+self.tvc).        print self...i'm a mechanical engineer. the trap class describes a motion profile that is common throughout the design of our machinery. there are many independent axes (trap classes) in our equipment so i need to distinguish between them by creating unique instances. the trap class inherits from movevariables many getter/setter functions structured as properties. in this way i can edit the variables by using the instance names. i'm thinking that i can initialize many machine axes at once by looping through the list instead of typing each one."
