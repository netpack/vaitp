"reloading blank module with flattened namespace i have a package with a similar structure as scipy/numpy, where you have a few main submodules, and each submodule contains functions from various files that have been flattened into the same namespace. let's say..package/.  sub1/.    __init__.py.    file1.py.    file2.py...and then sub1/__init__.py looks like this:..from .file1 import func1, func2.from .file2 import func3...the result is that i can do..import package.sub1.package.sub1.func1()...however, the problem is that the following does not work:..&gt;&gt;&gt; import package.sub1.-- change things in file1.py --.&gt;&gt;&gt; reload(package.sub1)...the function does not update. it works if i do import package.sub1.file1 instead, so there is something with flattening the namespace, that makes it lose the connection to the module. my main question is how i can still use the reload command, while still getting the benefits of being able to write sibling functions in separate files."
