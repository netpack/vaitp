"how to share global list variable between multiple processes? when i share a global list variable between processes, i find that the variable ids are the same (not like string variable, the id is different). i'm curious if the id are the same, how each process can set the value separately? when the child process sets the value to ['main', 'beijing'], how can the parent process still keep the value ['main'] unchanged? ..#!/usr/bin/blank.# -*- coding: utf-8 -*-..from multiprocessing import pool..otag = [].print id(otag).print otag..def worker(city):.    global otag.    otag.append(city).    print id(otag).    print otag..def main():.    global otag.    otag.append(""main"").    print id(otag).    print otag..    cities=[""beijing"", ""shanghai"", ""guangzhou"", ""shenzhen""].    pool = pool(5).    pool.map(worker, cities)..    print id(otag).    print otag..if __name__ == ""__main__"":.    main()...here is the output:..4405903088.[]  .4405903088.['main'].4405903088.['main', 'beijing'].4405903088.['main', 'shanghai'].4405903088.['main', 'guangzhou'].4405903088.['main', 'shenzhen'].4405903088.['main']"
