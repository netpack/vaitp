"how to invoke an instance by its property in blank? i have defined a class, and the objects in this class have some properties pp1, pp2, etc...class example(object):.   def __init__(self,pp1,pp2,...):.       self.pp1=pp1.       self.pp2=pp2.       .....for x in range (0,100):.    ll[x]=example(pp1[x],pp2[x],...) # pp1[x] pp2[x] are defined somewhere else..ll[30]=example(30.0,40.0,...)...i have defined many instances ll[x] of class example. these properties pp1,pp2, etc. are unique for each instance. ..usually, we call it with:..ll[x].method()...if i don't know the name of instance (i.e., ll[x] in this case), is it possible to determine the instance with one or more of its properties? for example, i hope to invoke an instance whose pp1 is '30.0' (and pp2 is 40.0), but i don't know its name. (ll[30] in this case)..in sql, it may looks like select * from example where pp1=30.0 (and pp2=40.0) and we can get ll[30] for its result, then we can give .method() to do something else...if it is impossible, is there any alternative ways?..addition:.thanks to alik for the suggestion of using filter. i think it can work for this example. but what if we do not define these instances in a list?"
