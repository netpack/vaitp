"problems involving py2exe & blank services my goal is to create a single (or mutliple) .exe that can be used to install a windows system service. currently this is just a proof of concept so all my service does is write to a file to confirm it's existence. ..when i invoke the service from a .py file it installs and runs fine. when i make a .exe out of it using py2exe, it will run fine, however i do get some messages in the windows event log (application) that certain libraries are not found. sometimes windows stops the service after startup, sometimes windows ignores the ""module not found"" errors. all of this takes place on a xp sp3 machine...when i move the same .exe compiled w/py2exe to a win 7 sp1 machine, win7 informs me that the .exe cannot run without blank27.dll. so i move blank27.dll in the cwd of the .exe, and win 7 then tells me it has failed to load the .dll. when i try to run the .exe on a xp sp2 machine, xp tells me that the file cannot be loaded...here is the corresponding code:..pysvc.py (this is the actual service, pysvc.py install is the string used to install it from the prompt  :..import win32service  .import win32serviceutil  .import win32event.import servicemanager..class pysvc(win32serviceutil.serviceframework):  .    _svc_name_ = ""pysvc""  ..    _svc_display_name_ = ""blank test""  .    _svc_description_ = ""service test""  ..    def __init__(self, args):  .        win32serviceutil.serviceframework.__init__(self,args)  .        self.hwaitstop = win32event.createevent(none, 0, 0, none)  ..    # meat and potatos. this is the actual code that's run. currently testing.    # to see behavior inside and outside of loop..    def svcdorun(self):  ...        f = open('test.dat', 'w+')  .        rc = none  .        f.write('outside l00pn')  .        # continue iteration if stop event not recieved  .        while rc != win32event.wait_object_0:  .            f.write('beautiful test data new inside l00pn')  .            f.flush()  .            # block for 5 seconds and listen for a stop event  .            rc = win32event.waitforsingleobject(self.hwaitstop, 5000)  ..        f.write('shutting downn')  .        f.close()  ..    # called on shut down      .    def svcstop(self):  .        self.reportservicestatus(win32service.service_stop_pending)  .        win32event.setevent(self.hwaitstop)  ..if __name__ == '__main__':  .    win32serviceutil.handlecommandline(pysvc) ...the following is the code for ""setup.py"". setup.py py2exe is the string used to create the .exe...from distutils.core import setup.import py2exe......setup(.            name = 'pysvc',.            description = 'service test',.            version = '1.00.00',.                service = ['pysvc'],..                console = ['pysvc.py'],.                zipfile=none,.                options = {.                                ""py2exe"":{.                                           ""includes"":""win32service,win32serviceutil,win32event,servicemanager"",...                                    },.                            },.    )                            ...due to the .exe's apparent success on the local machine but failure on several other machines (that do not have blank installed), i am currently inclined to believe that this is a problem with imports or the way that the imports are being compiled. i would be eternally grateful if anyone could provide some insight as to why this .exe doesn't want to behave as it should. thank you for your time."
