"associating string keys with int in nested dictionary i'm trying to associate keys with a unique identifier. that is, transform dict1 to dict2:..dict1={'a': {'a': 1},.       'b': {'b': .5, 'c': .36, 'e': .14},.       'c': {'a': .5, 'c': .5},.       'd': {'g': 1},.       'e': {'f': 1},.       'f': {}.       }..dict2={1: {1: 1},.       2: {2: .5, 3: .36, 5: .14},.       3: {1: .5, 3: .5},.       4: {7: 1},.       5: {6: 1},.       6: {}.       }...i came up with something recursively but my code isn't working too well for nested keys. any suggestions on how to fix the code or approach this problem?..def transform(d, count = 1):.    output={}.    for k,v in d.iteritems():.        k=count.        count = count + 1.        if isinstance(v,dict):.            v=transform(v, count).        output[k]=v.    return output"
