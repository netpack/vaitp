"blank - 'too many values to unpack', and 'list has no attribute 'iteritems'' i am trying to compare two strings: devline and fin_h. .when i split the words in both strings and iterate over words in both strings, i keep getting the error too many values to unpack. ..if i add iteritems() like other so posts mention, then, i get this error: list has no attribute 'iteritems'...the strings are:..rob car mary bike george house jerry condo..rob car mary dc   george dc    jerry dc..i want to check if the word in string1 matches the word in string2. the words i want to compare are the alternate words such as car, bike, house, condo. i want to compare those words with car, dc, dc, dc.  if the words are equal, then print true or else, it is false. if the word tuple is (bike, dc), then still print out true because dc signifies any value that can be accepted as an input. ..my code looks like this:..def comparelines(devline, final_hypoth):..devsplit = devline.split().hypsplit = final_hypoth.split()..for word in hypsplit.iteritems():..      #if hword  != ""?"":.           print word...i had also tried using the zip() function because it seemed more blankic to use it:..def comparelines(devline, final_hypoth):.    devsplit = devline.split().    hypsplit = final_hypoth.split()..    wordset = ["" "".join(tup for tup in zip(devsplit[1::2], hypsplit[1::2])]..    # what to do next? ...this prints out the odd words in both strings together in an array like (car, car), (bike dc), (house dc), (condo, dc). however, how do i compare both of these values? this way seems easier to print out either true or false if the two words are equal or if the two comparisons include a dc."
