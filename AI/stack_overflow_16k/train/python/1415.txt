"blank submodule imports using __init__.py i'm learning blank, and i can't figure out how imports in __init__.py work...i understand from the blank tutorial that the __init__.py file initializes a package, and that i can import subpackages here...i'm doing something wrong, though. could you explain for me (and for future blank-learners) what i'm doing wrong?..here's a simplified example of what i'm trying to do...this is my file structure:..package.    __init__.py.    test.py.    subpackage.        __init__.py.        hello_world.py...the contents of hello_world.py:..def do_something():.    print ""hello, world!""...subpackage/__init__.py is empty...package/__init__.py contains:..import test.submodule.do_something...and finally, test.py contains:..do_something()...this is how i attempt to run hello_world.py using osx terminal and blank 3:..blank test.py...blank then throws the following error:..nameerror: name 'do_something' is not defined"
