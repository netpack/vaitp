"is there a standard function code like `lambda x, y: x.custom_method(y)`? i know that i can call magic methods using functions from operator module, for example:..operator.add(a, b)...is equal to..a.__add__(b)...is there a standard function for calling a custom method (like operator.methodcaller but also accepts method arguments when called)?.currently i have code like this:..def methodapply(name):.    """"""apply a custom method...    usage:.        methodapply('some')(a, *args, **kwargs) =&gt; a.some(*args, **kwargs)..    """""".    def func(instance, *args, **kwargs):.        return getattr(instance, name)(*args, **kwargs).    func.__doc__ = """"""call {!r} instance method"""""".format(name).    return func"
