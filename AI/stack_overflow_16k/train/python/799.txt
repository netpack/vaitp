"is `global` the correct way for a class to access a module level variable? i am creating an enter/exit block for a module level construct. i have the following example to test how to access the module level variable from within the class:.._variablescope = ''..class variablescope(object):.  def __init__(self, scope):.    self._scope = scope..  def __enter__(self):.    global _variablescope.    _variablescope += self._scope..x = variablescope('mytest').x.__enter__().print(_variablescope)...this gets me the expected value of 'mytest', but .....is the use of global inside the __enter__() method correct and good practice?"
