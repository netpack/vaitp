"blank class initialization and memory model behavior i know this has been documented somewhere on stack overflow, but i can't for the life of me find it... i'll be happy to accept any relevant links...i have the following code:..class a:.    def __init__(self, x=[]):.        x += [1].        print id(x), x..print ""try with default:"".a = a().b = a().c = a().d = a()..print ""try with custom:"".a = a([1]).b = a([2]).c = a([3]).d = a([4])...which generates the following output:..try with default:.4342272584 [1].4342272584 [1, 1].4342272584 [1, 1, 1].4342272584 [1, 1, 1, 1].try with custom:.4342456688 [1, 1].4342456688 [2, 1].4342456688 [3, 1].4342456688 [4, 1]...why is it when using the default constructor value, the array grows on each subsequent construction?"
