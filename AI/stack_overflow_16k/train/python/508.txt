"how does this specific section of code work? def add_info_extractor(self, ie):.    """"""add an infoextractor object to the end of the list."""""".    self._ies.append(ie).    if not isinstance(ie, type):.        self._ies_instances[ie.ie_key()] = ie.        ie.set_downloader(self)..def get_info_extractor(self, ie_key):.    """""".    get an instance of an ie with name ie_key, it will try to get one from.    the _ies list, if there's no instance it will create a new one and add.    it to the extractor list..    """""".    ie = self._ies_instances.get(ie_key).    if ie is none:.        ie = get_info_extractor(ie_key)().        self.add_info_extractor(ie).    return ie...the following is taken from a popular blank repo, the youtube-dl. in an effor to become a better programmer i cam across this section and i'm having trouble understanding it...particularly the last method and how it does not enter infinite recursion if the ie_key is not found in the list...as well as the isinstance comparision in the first method...i understand the normal implementation is something to the effect of:  isinstance('hello', str) , but how can type() be a type? moreover what's the point of comparing an ie object to type?"
