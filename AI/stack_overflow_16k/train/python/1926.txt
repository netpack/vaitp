"change length of operation depending on a value context..i am trying to create a program that gets the product of all n pairs in a number reading from left to right..for example, in the number 2345678:...the product of all 2 pairs would be 2*3 = 6, 3*4=12, 4*5=20, 5*6=30 etc....the product of all 3 pairs would be 2*3*4=24,3*4*5=60, 4*5*6=120 etc......i have completed most of the solution to the problem, but i cannot create an operation that can adapt for any value of n..code..num = 2345678.num = str(num)...n = 2.start_pos = 0..for i in range(start_pos,len(num)):.    try:.        x += 1.        t = int(num[i]) * int(num[i+1]) # hardcoded for n = 2.        print(t).        start_pos += 1.    except indexerror:.        break...operation for different n values..n = 2: t = int(num[i]) * int(num[i+1])..n = 3: t = int(num[i]) * int(num[i+1]) * int(num[i+2])..n = 4: t = int(num[i]) * int(num[i+1]) * int(num[i+2]) * int(num[i+3])..n = 5: t = int(num[i]) * int(num[i+1]) * int(num[i+2]) * int(num[i+3]) * int(num[i+4])..how could i create an operation that can adapt for any value of n?"
