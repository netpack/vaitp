"comparing two ways of getting sub-list length i have two implementations of getting a sub-list length. there is a dramatic performance difference. i would like to know why...import time..# list with 100000 integers.with open('integerarray.txt') as f:.    input_list = [int(x) for x in f.read().splitlines()]..i = 50000..start_1 = time.time().len(input_list[i:]).print(""--- %s seconds --- "" % (time.time() - start_1))..start_2 = time.time().len(input_list) -i.print(""--- %s seconds --- "" % (time.time() - start_2))...output:..--- 0.000550985336304 seconds ---.--- 2.14576721191e-06 seconds ---...why is this? does this mean i have to avoid using the first method and use the second at all times?"
