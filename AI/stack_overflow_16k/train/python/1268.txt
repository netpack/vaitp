"how to collect a set of boolean values and return a final test combining all with 'and' in blank? i am trying to defining a function to return true if the pattern matches all the strings in the list. like, matchall(pattern, list)...my initial try is:..import re..def matchall(pattern, list): .    list_truth = list.    for i in list:.       list_truth[i] = re.search(pattern,i) != none.    if false in list_truth:.       return false.    else:.       return true...yet, it doesn't work. please let me know which part i was doing wrong. much thanks!..for example, the sample input / output look like:..print matchall('a', ['a', 'ab', 'abc']) # true.print matchall('a', ['a', 'ab', 'bc'])  # false.print matchall('(ab)?', ['a', 'ab', 'abc'])  # true.print matchall('.', ['a', 'ab', 'abc'])      # true.print matchall('.{2,3}', ['a', 'ab', 'abc']) # false...i have also modified my code as:..import re.def matchall(pattern, list1): .list_truth = list.for i in list1:.    if re.search(pattern,i) != none:.        pass.    else:.        return false.return true...yet, it returns the correct result but i don't think it is a good way to construct the function. does anybody has idea on how can i optimize it? thanks!"
