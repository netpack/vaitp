"how can i optmize this blank code? i'm making a code that receive a list of phone numbers and then checks if one or more of the numbers is a prefix of other numbers in the list. i want to optimize to the maximum so that it can run as fast as possible. here's the code:..cases = []..t = int(input())..for i in range(0, t):.    n = int(input()).    case = [].    for j in range(0, n):.        case.append(str(input())).    cases.append(sorted(case))..print(cases)..for c in cases:.    answer = 'yes'.    for k in range(0, len(c)):.        if answer == 'yes':.            for l in range(0, len(c)):.                if c[k] != c[l]:            .                    if c[k] == c[l][0:len(c[k])]:.                        answer = 'no'.                        break.        else:.            break.    print(answer) ...edit: using the answer proposed by @gelineau, the code run in 0.82s, being that before it went from >3s to reach the solution. with that now the solution looks like this:..cases = []..t = int(input())..for i in range(0, t):.    n = int(input()).    case = [].    for j in range(0, n):.        case.append(str(input())).    cases.append(case)..for case in cases:.    answer = 'yes'.    case.sort()    .    for case_k, case_next in zip(case, case[1:]):.        if case_k == case_next[:len(case_k)]:.            answer = 'no'.            break.    print(answer)"
