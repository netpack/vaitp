"execute other commands while one is already running as the title states, how would i execute other commands while one is being processed already? .lets say hypothetically i have this:..import urllib.request.import re.class runcommands:.      def say(self,word):.          return word.      def rsay(self,word):.          return word[::-1].      def urban(self,term):.          data = urllib.request.urlopen(""http://urbandictionary.com/define.php?term=%s"" % term).read().decode().          definition = re.search('&lt;div class=""definition""&gt;(.*?)&lt;/div&gt;',data).group(1).          return definition.      def run(self):.          while true:.                command = input(""command: "").                command,data = command.split("" "",1).                if command == ""say"": print(self.say(data)).                if command == ""reversesay"": print(self.rsay(data)).                if command == ""urbandictionary"": print(self.urban(data))...now, i realize that doing runcommands().run() i have to input commands one at a time but hypothetically if i could some how input multiple commands like this:.. me: ""urbandictionary hello"". me: ""reverse hello"" # before it posts the result...how would i get it to run both simultaneously even though it would actually do ""urbandictionary hello"" then ""reverse hello"" second i heard thready could do this but i'm not sure how would i would do that with threading. is threading the only option to have it actually post ""olleh"" before it returns the urban dictionary result for hello even though i did ""urbandictionary hello"" first?"
