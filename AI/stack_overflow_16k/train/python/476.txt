"object oriented programming with tamagotchi class write a class tamagotchi that creates a tamagotchi object with the specified name. you should decide what properties the tamagotchi object should have in order to support the required behaviour as elaborated below. a tamagotchi object, t has three methods:...teach where there can be a variable number of string inputs. this teaches the tamagotchi these words. symbols will also work. if you try to teach a tamagotchi the same words more than once, it will ignore the later attempts..play will make the tamagotchi return a stringified list of words that it has been taught (in sequential order)..kill will kill the tamagotchi. once a tamagotchi is in heaven, it cannot be taught and will not respond when you try to play with it. instead, all further method calls will return the string ""&lt;name&gt; is pining for the fjords"" where &lt;name&gt; is the name of the tamagotchi....this is my code:..class tamagotchi():.    def __init__(self, name):.        self.name = name..    def teach(self, words):.        new_words = [].        [new_words.append(x) for x in words if x not in new_words].        ("""".join(new_words))..    def play(self):.        return 'meow meow says ' + tamogotchi.teach(words)...test codes:..&gt;&gt;&gt; meow_meow = tamagotchi(""meow meow"").&gt;&gt;&gt; meow_meow.teach(""meow"").&gt;&gt;&gt; meow_meow.play().'meow meow says meow'.&gt;&gt;&gt; meow_meow.teach(""purr"").&gt;&gt;&gt; meow_meow.teach(""meow"").&gt;&gt;&gt; meow_meow.play().'meow meow says meow and purr'.&gt;&gt;&gt; meow_meow.kill().'meow_meow killed'.&gt;&gt;&gt; meow_meow.teach(""hello"").'meow meow is pining for the fjords'.&gt;&gt;&gt; meow_meow.play().'meow meow is pining for the fjords'...whats wrong with my code? i didn't get the result i want for meow_meow.play()"
