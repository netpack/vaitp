"writing memory scanner in blank (edited)..sorry for changing the content...i've change the code...nameprocess = 'calc.exe'.def getpid():.    for proc in psutil.process_iter():..        if str(nameprocess) in str(proc.name):.            print nameprocess,'pid = ', proc.pid.            return proc.pid..pid = getpid().process_query_information = 0x0400.process_vm_read = 0x0010..process = windll.kernel32.openprocess(process_query_information|process_vm_read,false,pid).readprocess = windll.kernel32.readprocessmemory.rdbuf = ctypes.c_uint().bytread = ctypes.c_ulong(0).for i in range(11):.    num = int('0x%08x'%(0x00400000+i),16)..    try:.        if readprocess(process,hex(num),ctypes.byref(rdbuf),.            ctypes.sizeof(rdbuf),ctypes.byref(bytread)):.            print hex(num),rdbuf.value..    except:none..print '----------------done---------------'...the result output is:..calc.exe pid =  4552.0x400000 4293587451.0x400001 4293587451.0x400002 4293587451.0x400003 4293587451.0x400004 4293587451.0x400005 4293587451.0x400006 4293587451.0x400007 4293587451.0x400008 4293587451.0x400009 4293587451.0x40000a 4293587451.----------------done---------------.[finished in 0.2s]...but i want it to look like this ..00400000   ae               scas byte ptr es:[edi].00400001   0001             add byte ptr ds:[ecx],al.00400003   0000             add byte ptr ds:[eax],al.00400005   0000             add byte ptr ds:[eax],al.00400007   01ee             add esi,ebp.00400009   ffee             jmp far esi                              ; illegal use of register.0040000b   ff01             inc dword ptr ds:[ecx]...just like debuggers do..i hope that you guys understand what i am trying to do..when reading processmemory, is 'rdbuf' gets all the information.what i want? what is it exactly getting from the process?"
