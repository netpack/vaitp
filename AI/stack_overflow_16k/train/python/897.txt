"blank __init__ self attribute not available despite being printable it worked fine all day suddenly it stopped.  i don't believe i changed the code at all maybe my brain stopped working???..class borderwidgetwithlabel(borderwidget): ..    def __init__(self, **kwargs):.        super(borderwidgetwithlabel, self).__init__(**kwargs)..        self.text="" "".        self.text=kwargs.get('text',' ').        print self.text.        self.txt_bg_color=kwargs.get(""txt_bg_color"", [0,0,0,0]).        self.bg_color=kwargs.get(""bg_color"", [0,0,0,0])..        self.bind(pos=self.update_canvas).        self.bind(size=self.update_canvas).        self.update_canvas()...    def update_canvas(self, *args):.        #need to reset everything.        self.canvas.clear()..        with self.canvas:..            get_color(self.border_color).            if(self.text!=""""):.                texture=simple_text_texture(self.text)...the problem:../typeclasses/borderwidget.py"", line 75, in update_canvas.if(self.text!=""""):.attributeerror: 'borderwidgetwithlabel' object has no attribute 'text'...i started getting that error i added self.text="" "" in the __init__ as well as the if statement in the update_canvas.  what am i doing wrong??..if i get rid of all the uses of self.text then the print self.text works no problem...update:: fixed by adding text=' ' as a class variable.  is this necessary?? or is there something wrong with the code.  as print self.text in the init works fine without the class variable i am unable to provide a less complete sample..update:: i removed the self.update_canvas() last line of the init and it worked without the class variable but i attempted to reproduce that with the following..class someclass:.def __init__(self, **kwargs):.    self.text=kwargs.get(""text"",""hello"").    self.update_class()...def update_class(self, *args):.    if(self.text!=' '):.        print self.text....someclass()...i don't know why i was unable to reproduce it then"
