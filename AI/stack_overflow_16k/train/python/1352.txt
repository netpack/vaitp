"permuting a list of chars takes all my memory (blank) i am building a dictionary of all the alpha and numbers. the problem with this code is ""within matter of second consumes 100% of my memory"". do you think my implementation is bad?.any help is appreciated. ..from timeit import timer.from itertools import permutations.dictionary = [].small_alpha = map(chr, range(97,123))..lookup.append(small_alpha)..def test():.    for i in permutations(lookup, 10):.        dictionary.append(''.join(i))..if __name__ == '__main__':.    test()...(edited).i am a well educated. no intent of hacking. this is realistically not possible even if i have 100 machines. no one can compute such a big number. just was trying out if it is possible to some extent"
