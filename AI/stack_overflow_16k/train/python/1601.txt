"monitoring variable access and object creation in blank i'm toying with the idea, mostly theoretically, of implementing time travel in a game. the implementation i came up with is remarkably simple:..everything that happens in a game world simulated by a blank program ultimately comes down to a single operation: a variable is altered.  ..therefore, time travel can be implemented by recording every variable alteration; specifically, storing the value it had before it was altered and the time at which the alteration occurred. when time should be reversed, the program will iterate over the list of events until it gets to one whose timestamp comes before the destination time. it can also travel forward in time, assuming it has already traveled back, by performing the actions in the action list at the times they occurred originally...of course, the key part of this is a way to react whenever a variable is altered. i suppose it'd be possible to do this with descriptors, if i understand them correctly, but that'd be rather annoying. i'd prefer to have a way to make the time travel 'opt-out'; that is, the program records changes in any variable it isn't specifically told not to. is there a way to do this in blank (without making yourself a custom interpreter, at any rate)?"
