"leetcode problem 135 candy one-pass solution to find the number of candies given to each child the problem (https://leetcode.com/problems/candy/description/) statement is as follows:..there are n children standing in a line. each child is assigned a rating value. you are giving candies to these children subjected to the following requirements:..(1) each child must have at least one candy...(2) children with a higher rating get more candies than their neighbors...(3) what is the minimum candies you must give?..e.g. input: [1,0,2], output: 5; input: [1,2,2], output: 4..in the problem discussion there is a proposal of one-pass solution:..https://leetcode.com/problems/candy/discuss/42770/one-pass-constant-space-java-solution..while however only gives the total number of candies given out. i wish to modify the solution to output the number of candies given to each child. my attempt is as follows:..class solution:.    def candy(self, ratings: list[int]) -&gt; int:.        if not ratings: return 0.        n = len(ratings).        res = [1]*n   # minimum 1 for each.        i = 1.        while i &lt; n:.            if ratings[i-1] &gt; ratings[i]:.                # check whether needed to add candy to current child .                # based on right neighbor.                r = i   .                while r &lt; n and ratings[r-1] &gt; ratings[r]:.                    for j in range(i, r): res[j-1] += 1.                i = r.            else:.                # add candy to current child based on left neighbor.                if ratings[i-1] &lt; ratings[i] and res[i-1] &gt;= res[i]: res[i] = res[i-1] + 1.                i += 1.        print(res)...could somebody help me to troubleshoot or provide a one-pass solution?"
