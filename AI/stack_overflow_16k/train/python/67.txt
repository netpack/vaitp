"blank recursively traverse through all subdirs and write the filenames to output file i want to recursively traverse through all subdirs in a root folder and write all filenames to an output file.  then in each subdir, create a new output file inside the subdir and recursively traverse through its subdirs and append the filename to the new output file...so in the example below, under the music folder it should create a music.m3u8 file and recursively traverse all subdirs and add all filenames in each subdir to the music.m3u8 file.  then in rock folder, create a rock.m3u8 file and recursively traverse all subdirs within the rock folder and add all filenames in each subdirs in rock.m3u8. finally in each album folder, create album1.m3u8, album2.m3u8, etc with the filenames in its folder. how can i do this in blank3.6?..music.....rock.........album1.........album2.....hip-hop.........album3.........album4...this is what i have but only adds the filenames of each folder to an output file but doesn't recursively adds to the root output file...import os..rootdir = '/users/bayman/music'.ext = ["".mp3"", "".flac""].for root, dirs, files in os.walk(rootdir):.    path = root.split(os.sep)..    if any(file.endswith(tuple(ext)) for file in files):.        m3ufile = str(os.path.basename(root))+'.m3u8'.        list_file_path = os.path.join(root, m3ufile).        with open(list_file_path, 'w') as list_file:.            list_file.write(""#extm3un"").            for file in sorted(files):.                if file.endswith(tuple(ext)):.                    list_file.write(file + 'n')"
