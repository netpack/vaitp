"blank should return more than 1 argument hello i'm beginner in blank and i'm trying to execute this program to create an inverted index for a collection file:..import sys.import re.from porterstemmer import porterstemmer.from collections import defaultdict.from array import array.import gc..porter=porterstemmer()..class createindex:..def __init__(self):.    self.index=defaultdict(list)    #the inverted index...def getstopwords(self):.    '''get stopwords from the stopwords file'''.    f=open(self.stopwordsfile, 'r').    stopwords=[line.rstrip() for line in f].    self.sw=dict.fromkeys(stopwords).    f.close()...def getterms(self, line):.    '''given a stream of text, get the terms from the text'''.    line=line.lower().    line=re.sub(r'[^a-z0-9 ]',' ',line) #put spaces instead of non-alphanumeric characters.    line=line.split().    line=[x for x in line if x not in self.sw]  #eliminate the stopwords.    line=[ porter.stem(word, 0, len(word)-1) for word in line].    return line...def parsecollection(self):.    ''' returns the id, title and text of the next page in the collection '''.    doc=[].    for line in self.collfile:.        if line=='&lt;/page&gt;n':.            break.        doc.append(line)..    curpage=''.join(doc).    pageid=re.search('&lt;id&gt;(.*?)&lt;/id&gt;', curpage, re.dotall).    pagetitle=re.search('&lt;title&gt;(.*?)&lt;/title&gt;', curpage, re.dotall).    pagetext=re.search('&lt;text&gt;(.*?)&lt;/text&gt;', curpage, re.dotall)..    if pageid==none or pagetitle==none or pagetext==none:.        return {}..    d={}.    d['id']=pageid.group(1).    d['title']=pagetitle.group(1).    d['text']=pagetext.group(1)..    return d...def writeindextofile(self):.    '''write the inverted index to the file'''.    f=open(self.indexfile, 'w').    for term in self.index.iterkeys():.        postinglist=[].        for p in self.index[term]:.            docid=p[0].            positions=p[1].            postinglist.append(':'.join([str(docid) ,','.join(map(str,positions))])).        print &gt;&gt; f, ''.join((term,'|',';'.join(postinglist)))..    f.close()...def getparams(self):.    '''get the parameters stopwords file, collection file, and the output index file'''.    param=sys.argv.    self.stopwordsfile=param[0].    self.collectionfile=param[1].    self.indexfile=param[2]...def createindex(self):.    '''main of the program, creates the index'''.    self.getparams().    self.collfile=open(self.collectionfile,'r').    self.getstopwords()..    #bug in blank garbage collector!.    #appending to list becomes o(n) instead of o(1) as the size grows if gc is enabled..    gc.disable()..    pagedict={}.    pagedict=self.parsecollection().    #main loop creating the index.    while pagedict != {}:                    .        lines='n'.join((pagedict['title'],pagedict['text'])).        pageid=int(pagedict['id']).        terms=self.getterms(lines)..        #build the index for the current page.        termdictpage={}.        for position, term in enumerate(terms):.            try:.                termdictpage[term][1].append(position).            except:.                termdictpage[term]=[pageid, array('i',[position])]..        #merge the current page index with the main index.        for termpage, postingpage in termdictpage.iteritems():.            self.index[termpage].append(postingpage)..        pagedict=self.parsecollection()...    gc.enable()..    self.writeindextofile()...if __name__==""__main__"":.c=createindex().c.createindex()...and it says that there is only 1 argument in the sys.argv.....how should the other arguments appear???"
