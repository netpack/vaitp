"how to iterate a function over multiple lists? i have the following function:..def calc(x: float, y: float, z: float) -&gt; dict:.    n1 = x*y.    n2 = y*z.    n3 = z**2.    return {""c"": n1, ""d"" : n2, ""e"" : n3}...i can take a list such as [10,10,20] and input it into the function using the *args approach:..list_1 = [10,10,20].calc(*list_1)..#results.{'c' : 100, 'd': 200, 'e': 400}...however, let's assume i want to pass an array or multiple lists into the function, such as: ..list_2 = [[10,10,20],.          [20,25,30],.          [35,40,45]]...where i want the function to iterate over each individual list...i have thought about using a loop, but cannot get how to iterate over each aspect of the multi-dimensional list...i have tried potentially using the index by doing the following:..for x in len(list_2):.      call(*list_2[x])...but i get the following error:..'int' object is not ierable...ideally, i would like this to be vectorized and avoid using loops, but any input or direction is much appreciated!"
