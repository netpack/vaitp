"blank built-in functions principle? when i read the blank source code i found the built-in functions like ..class staticmethod(object):.    """""".    .....    """""".    def __getattribute__(self, name): # real signature unknown; restored from __doc__.        """""" x.__getattribute__('name') &lt;==&gt; x.name """""".        pass..    def __get__(self, obj, type=none): # real signature unknown; restored from __doc__.        """""" descr.__get__(obj[, type]) -&gt; value """""".        pass..    def __init__(self, function): # real signature unknown; restored from __doc__.        pass..    @staticmethod # known case of __new__.    def __new__(s, *more): # real signature unknown; restored from __doc__.        """""" t.__new__(s, ...) -&gt; a new object with type s, a subtype of t """""".        pass..    __func__ = property(lambda self: object(), lambda self, v: none, lambda self: none)  # default...my question is what does the empty method for ? why write it here?"
