"error handling for when a directory doesn't exist i have a situation where i want to store mp3s in a directory, create that directory if it doesn't exist, and exit the program if the directory cannot be created. i read that os.path.exists() involves more of a hit to performance than os.makedirs(), so with that in mind i crafted the following code: ..try: .    # if directory has not yet been created.    os.makedirs('tracks').    with open('tracks/' + title + '.mp3', 'w') as mp3:.        mp3.write(mp3file.content).        print '%s has been created.' % filename..except oserror, e:.    # if directory has already been created and is accessible.    if os.path.exists('tracks'):.        with open('tracks/' + title + '.mp3', 'w') as mp3:.            mp3.write(mp3file.content).            print '%s has been created.' % filename..    else: # directory cannot be created because of file permissions, etc. .        sys.exit(""error creating 'tracks' directory. cannot save mp3. check permissions."")...does this make sense? or should i stick with the cleaner but perhaps costlier version of simply checking whether the directory exists first and then making it? 9/10 times, the directory is going to be there."
