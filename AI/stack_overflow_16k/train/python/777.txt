"is there a possible way to write the watchdog api logging messages that pop up in the blank shell to a text file? i'm trying to find a possible way to write the logging messages of the watchdog api to a text file..import sys.import time.import logging.from watchdog.observers import observer.from watchdog.events import loggingeventhandler..def filelogging():.    a = str(input(""give a directory you want to log (vb. d:\...\examplemap): ""))..    logging.basicconfig(level=logging.info, format='%(asctime)s - %(message)s', datefmt='%h:%m:%s').    path = a.    event_handler = loggingeventhandler()  .    observer = observer().    observer.schedule(event_handler, path, recursive=true)..    f = open(""d:examplemaplogfile.txt"", ""a+"").    f.write(str(***possible way to write logging message to text file***)))..    print(""to close the program press ctrl + c."").    observer.start()..    try:.        while true:.            time.sleep(1).    except keyboardinterrupt:.        observer.stop().    observer.join().    f.close()..filelogging()...i can't seem to find what writes the messages to the blank shell...do any of you have any idea on how i can do this?..i thought it was the observer command but it doesn't seem so and i get the machine code in the logfile...&lt;windowsapiobserver(thread-1, initial daemon)&gt;&lt;windowsapiobserver(thread-3, initial daemon)&gt;...i would like that have the result below in logfile.txt and when something different happens it also gets put into the logfile.txt...14:43:32 - modified file: d:\examplemap\text1.txt"
