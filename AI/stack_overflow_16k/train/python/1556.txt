"how to remove duplicates, by sublist item subset, in a list of lists in blank? i have a list of lists in blank that is defined like this: [[2, 3, 5], [3, 3, 1], [2, 3, 8]], not i want to delete the duplicate entries, but by duplicate i mean that the first two elements of each list match, for example, the first and third list have 2 and 3 as their first and second elements, therefore, i count it as a duplicate, and after removing i want to have the final list: [[2, 3, 5], [3, 3, 1]]. currently, i have something like this:..arr = [[2, 3, 5], [3, 3, 1], [2, 3, 8]]..first = [item[0] for item in arr].second = [item[1] for item in arr].zipped = zip(first, second)...this produces list of tuples with the first two entries of each list. now, i can try to get the index of duplicate entries and remove those indices from the original list. but, are there shorter ways to do what i want? if not, what is the best way to get the duplicate indices here?"
