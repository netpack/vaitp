"remove user site directories from sys.path without ""-s"" in shebang the -s argument to the blank interpreter prevents sys.path from having user directories:..-s     don't add user site directory to sys.path...setting the blanknousersite environment variable is another way to achieve the same result.  note that setting a user site directory in blankpath and then calling a script with -s ""overrides"" the ""user site"" removal...if i do not control how a blank script is invoked, is there an easy way to remove user directories in a blank script or module?  i could iterate over sys.path and remove any entries that start with os.environ[""home""].  is that the right way?  will i miss any or maybe remove directories that i shouldn't (e.g., what if someone installed blank in their home directory, maybe even in ~/.local/... somewhere?)?  is home env var the right thing to look for?  i don't see any sys.path.usersite that i can use to seed the path scrubbing effort (but see update 1)...is there a way to scrub user site directories that's easier than adding that iteration blob at the top of all the blank scripts?..a shebang line like so achieves this:..#!/usr/local/bin/blank -s...but if one doesn't want to hard-code the path to the blank interpreter, one can use this idiom:..#!/usr/bin/env blank...adding arguments (like -s) to the above doesn't work, however, because of the way shebang lines are interpreted on most unix systems (see update 2):..env: blank -s: no such file or directory..there's two subtle variations to this question:..(1) how to emulate what -s does when your script was not invoked with -s (including allowing user site directories if they are in blankpath)?  maybe the best way(?) for this variation is:..#!/bin/sh.exec blank -s &lt;&lt; eof.... blank code....eof...edit the above fails if you want to pass args.  this may work better:..#!/bin/sh.exec blank -s - ""$@"" &lt;&lt; ""eof"".... blank code....eof...notice the quoted ""eof"" to avoid having the shell try to do expansions and substitions in the here document body...as a side note: that also helps if i want the blank -s functionality  (which does not have an environment variable knob equivalent) or other blank option arguments...(2) how to emulate -s regardless of blankpath (i.e., remove user site directories even if they are in blankpath)?..i guess what i was hoping for was a sys variable that points to the user site dir.  but i couldn't find one...update 1: thanks to blender's comment - the variable is in the site module: site.user_site.  so you can iterate over sys.path looking for entries rooted in that directory (could have .egg files in your user_site and to emulate -s, you would need to remove those as well)...update 2: using env -s is another solution.  it allows you to pass arguments to the command spawned by env(1) in a shebang line.  freebsd has had -s for years (since 6.0).  linux systems that use coreutils (most) have it as of coreutils 8.30 1.  it will take a while for linux distros to get that version of coreutils, so depending on it for portable scripting is probably not prudent yet (now = 2019)...#!/usr/bin/env -s blank -s...p.s. see also this older similar thread."
