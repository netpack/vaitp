"creating trapezoid. requires exactly double number of points to find i want to create a strip on 2d plane. i got solution to do this by making trapezoid. in fact, other ways of creating strip on 2d (scalable to nd) plane is also acceptable..this code takes area of trapezoid from user and then picking any random number from input range 0 - 1 and then incrementally picking second number set until required (approx) area is obtained. .the function create_trapezoid gives first point set, second point set, length of trapezoid and achieved area. it looks perfect. then i pick some random numbers to determine after how many tries a number falls in newly made strip. the theoretical limit should be 1 / area. but it always give me exactly double number. anybody guide me what i am missing?..import math.import random...def test_point(point, strip_pts):.    inside = false.    a = point[0] + point[1].    if strip_pts[0] &lt; a &lt; strip_pts[1]:.        inside = true.    return inside...def calculate_area(l1, l2, h):.    return 0.5 * (l1 + l2) * h...def create_trapezoid(area):.    actual_failure_region = area.    p1 = random.random()  # first point set.    l1 = math.sqrt(p1 ** 2 + p1 ** 2).    l2 = l1.    increment = area / 10000.    h = 0.    a_temp = 0.    while a_temp &lt; actual_failure_region:.        l2 = l2 + increment.        h = h + increment.        a_temp = calculate_area(l1, l2, h).    achieved_area_region = a_temp.    p2 = math.sqrt((l2 ** 2) / 2).    return [p1, p2, l1, l2, h, achieved_area_region]...iterations = 1000.mean_number_of_tries = 0.for i in range(1, iterations + 1):.    strip_points = create_trapezoid(0.1).    falls_in_trapezoid = false.    j = 0.    tries = 0.    while falls_in_trapezoid is false:.        test_case = (random.random(), random.random()).        falls_in_trapezoid = test_point(test_case, strip_points).        tries = tries + 1.    mean_number_of_tries = mean_number_of_tries + tries.    print(i, ""f_measure:"", tries, ""mean:"", mean_number_of_tries / i)...i have made 2d visualization of strip and one random point that lies in strip on: https://www.desmos.com/calculator/z0x2e2l7md"
