"why doesn't my code for codehs 8.3.8: word ladder pass the autograder? this is what i am supposed to do:..your friend wants to try to make a word ladder! this is a list of words where each word has a one-letter difference from the word before it. here’s an example:..cat.cot.cog.log...write a program to help your friend. it should do the following:..ask your friend for an initial word..repeatedly ask them for an index and a letter..you should replace the letter at the index they provided with the letter they enter..you should then print the new word..stop asking for input when the user enters -1 for the index..here’s what should be happening behind the scenes:..you should have a function, get_index, that repeatedly asks the user for an index until they enter a valid integer that is within the acceptable range of indices for the initial string. (if they enter a number out of range, you should output invalid index.).you should have another function, get_letter, that repeatedly asks the user for a letter until they enter exactly one lowercase letter. (if they enter more than one character, you should output must be exactly one character!. if they enter a capital letter, you should output character must be a lowercase letter!.).you should store a list version of the current word in a variable. this is what you should update each time the user swaps out a new letter..each time you have to print the current word, print the string version of the list you are keeping in your variable..here’s what an example run of your program might look like:..enter a word: cat.enter an index (-1 to quit): 1.enter a letter: o.cot.enter an index (-1 to quit): 2.enter a letter: g.cog.enter an index (-1 to quit): 5.invalid index.enter an index (-1 to quit): -3.invalid index.enter an index (-1 to quit): 0.enter a letter: l.character must be a lowercase letter!.enter a letter: l.log.enter an index (-1 to quit): -1...this is my code right now:..word = str(input(""your word: "")).print(word).run = true.while run:.    #ensure he enters a number not letter .    while true:.        try:.            get_index = int(input(""enter index: "")).            break.        except:.            print(""character must be a lowercase letter!"").    #check to see if the index is within the provided word lenght.    while -1 &lt; get_index &lt; len(word):.        #doesn't matter if he enters an uppercase letter becasue the lowermethod will turn it to lowercase.        get_letter = str(input(""enter letter: "")).lower().        #check to ensure he provides one letter only.        while len(get_letter) == 1:.            word = word[:get_index] + get_letter + word[get_index + 1 :].            print(word).            break.        else:.            print(""must be exactly one character!"").        break.    else:.        #quits if the index is -1.        if get_index == -1:.            run = false.        #if the index not -1 not in the length of the word ,prints invalid.        else:.            print(""invalid index"")...there is something wrong with this code. it does everything right, but for some reason, codehs says it's wrong."
