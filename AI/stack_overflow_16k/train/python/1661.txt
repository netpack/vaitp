"blank: passing conditional parameters by name i have a bunch of functions, some of them require a bar parameter, some of them require a foo parameter, some of them require neither, and some require both...i am hoping to call all of these functions from the same location, as the function is referenced from a variable...the possible solutions i have found is:...function(bar = ""some_value"", foo = ""other value"").using inspect and then detecting which arguments need to be passed in...i don't believe #1 will work, but i know that #2 will.  is there a native (not using a library) way for me to do this?..as an example:..functions = [lambda foo: foo.do_something(),.             lambda bar: bar.do_something_else(),.             lambda foo, bar: foo.something_with_bar(bar),.             lambda: do_another_task().].for function in functions:.    //call goes here...note:  i actually have many, many functions that i want to call with these parameters, and they aren't all stored nicely in an array.  i would prefer if i could do it without changing the functions themselves."
