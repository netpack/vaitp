"dictionary with list of values i have a file such as:..a 1.a 2.b 5.c 8.a 9...i want to add together the second field per key so that i have an aggregate number and therefore a single key:value pair...with a large dataset i am thinking the best way to go about this would be to create a dictionary that contains a list of values per unique key. is this the best approach?..how do i set the lists of values per key accurately (below code seems to overwrite values instead of appending)?..dict={}.file=open('foo.txt','r').lines=file.readlines().for line in lines:.        k, v=line.split().        dict[k]=[v]...now if i want to take the aggregate numbers populated in first dictionary and compare both the keys and the values against keys and values in another dictionary to determine differences between the two, i can only conclude something like the following:..for i in res.keys():..if res2.get(i):.    print 'match',i.else:.    print i,'does not match'...for i in res2.keys():..if res.get(i):.    print 'match',i.else:.    print i,'does not match'...for i in res.values():..if res2.get(i):.    print 'match',i.else:.    print i,'does not match'...for i in res2.values():..if res.get(i):.    print 'match',i.else:.    print i,'does not match'...cumbersome and buggy...need help!"
