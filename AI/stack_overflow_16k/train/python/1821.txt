"blank subprocess stdout iterator always blocks i want to capture the output while printing it, but i'm blocking forever without reading even a single line. what's going on? i'm using blank2...generator script:..#!/usr/bin/env blank2.7..import random.import time..while true:.    print(random.random()).    time.sleep(1)...sample generator output:..$ ./generator.py .0.334835137212.0.896609571236.0.833267988558.0.55456332113.^ctraceback (most recent call last):...reader script:..import subprocess..cmd = ['./generator.py'].p = subprocess.popen(cmd, stdout=subprocess.pipe)..for line in p.stdout:.    print(line).    print('looping')..p.wait()...i've also tried:..import subprocess.import sys..cmd = ['./generator.py'].p = subprocess.popen(cmd, stdout=subprocess.pipe)..while true:.    line = p.stdout.readline().    print(line)..    print('looping')..p.wait()......and:..import sys.import subprocess.import select.import time..cmd = ['./generator.py'].p = subprocess.popen(cmd, stdout=subprocess.pipe)..s = select.poll().s.register(p.stdout, select.pollin)..while true:.    if s.poll(1):.        line = p.stdout.read().    else:.        p.poll().        if p.returncode is not none:.            break..    print('looping').    time.sleep(1)..p.wait()"
