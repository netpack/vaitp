Module(
    body=[
        ImportFrom(
            module='pymemcache.client',
            names=[
                alias(name='base')],
            level=0),
        Assign(
            targets=[
                Name(id='client', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='base', ctx=Load()),
                    attr='Client',
                    ctx=Load()),
                args=[
                    Tuple(
                        elts=[
                            Constant(value='localhost'),
                            Constant(value=11211)],
                        ctx=Load())],
                keywords=[])),
        FunctionDef(
            name='get_data_from_memcache',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='key')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='data', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='client', ctx=Load()),
                            attr='get',
                            ctx=Load()),
                        args=[
                            Name(id='key', ctx=Load())],
                        keywords=[])),
                If(
                    test=UnaryOp(
                        op=Not(),
                        operand=Call(
                            func=Name(id='is_valid_data', ctx=Load()),
                            args=[
                                Name(id='data', ctx=Load())],
                            keywords=[])),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Invalid data received from memcache')],
                                keywords=[]))],
                    orelse=[]),
                Return(
                    value=Name(id='data', ctx=Load()))],
            decorator_list=[]),
        FunctionDef(
            name='is_valid_data',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='data')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                If(
                    test=Compare(
                        left=Name(id='data', ctx=Load()),
                        ops=[
                            Is()],
                        comparators=[
                            Constant(value=None)]),
                    body=[
                        Return(
                            value=Constant(value=False))],
                    orelse=[]),
                Return(
                    value=Constant(value=True))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='key', ctx=Store())],
            value=Constant(value='example_key')),
        Try(
            body=[
                Assign(
                    targets=[
                        Name(id='data', ctx=Store())],
                    value=Call(
                        func=Name(id='get_data_from_memcache', ctx=Load()),
                        args=[
                            Name(id='key', ctx=Load())],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load())],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Name(id='ValueError', ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    Name(id='e', ctx=Load())],
                                keywords=[]))])],
            orelse=[],
            finalbody=[])],
    type_ignores=[])