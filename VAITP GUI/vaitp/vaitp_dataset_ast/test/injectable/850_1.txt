Module(
    body=[
        ImportFrom(
            module='flask',
            names=[
                alias(name='Flask'),
                alias(name='request'),
                alias(name='jsonify')],
            level=0),
        Import(
            names=[
                alias(name='uuid')]),
        Import(
            names=[
                alias(name='hashlib')]),
        Assign(
            targets=[
                Name(id='app', ctx=Store())],
            value=Call(
                func=Name(id='Flask', ctx=Load()),
                args=[
                    Name(id='__name__', ctx=Load())],
                keywords=[])),
        Assign(
            targets=[
                Name(id='user_pins', ctx=Store())],
            value=Dict(
                keys=[
                    Constant(value='user1')],
                values=[
                    Call(
                        func=Attribute(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='hashlib', ctx=Load()),
                                    attr='sha256',
                                    ctx=Load()),
                                args=[
                                    Call(
                                        func=Attribute(
                                            value=Constant(value='secure_pin'),
                                            attr='encode',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])],
                                keywords=[]),
                            attr='hexdigest',
                            ctx=Load()),
                        args=[],
                        keywords=[])])),
        FunctionDef(
            name='verify_pin',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='username'),
                    arg(arg='pin')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='hashed_pin', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='hashlib', ctx=Load()),
                                    attr='sha256',
                                    ctx=Load()),
                                args=[
                                    Call(
                                        func=Attribute(
                                            value=Name(id='pin', ctx=Load()),
                                            attr='encode',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[])],
                                keywords=[]),
                            attr='hexdigest',
                            ctx=Load()),
                        args=[],
                        keywords=[])),
                Return(
                    value=Compare(
                        left=Call(
                            func=Attribute(
                                value=Name(id='user_pins', ctx=Load()),
                                attr='get',
                                ctx=Load()),
                            args=[
                                Name(id='username', ctx=Load())],
                            keywords=[]),
                        ops=[
                            Eq()],
                        comparators=[
                            Name(id='hashed_pin', ctx=Load())]))],
            decorator_list=[]),
        FunctionDef(
            name='change_wifi_settings',
            args=arguments(
                posonlyargs=[],
                args=[],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='username', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Attribute(
                                value=Name(id='request', ctx=Load()),
                                attr='json',
                                ctx=Load()),
                            attr='get',
                            ctx=Load()),
                        args=[
                            Constant(value='username')],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pin', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Attribute(
                                value=Name(id='request', ctx=Load()),
                                attr='json',
                                ctx=Load()),
                            attr='get',
                            ctx=Load()),
                        args=[
                            Constant(value='pin')],
                        keywords=[])),
                If(
                    test=UnaryOp(
                        op=Not(),
                        operand=Call(
                            func=Name(id='verify_pin', ctx=Load()),
                            args=[
                                Name(id='username', ctx=Load()),
                                Name(id='pin', ctx=Load())],
                            keywords=[])),
                    body=[
                        Return(
                            value=Tuple(
                                elts=[
                                    Call(
                                        func=Name(id='jsonify', ctx=Load()),
                                        args=[
                                            Dict(
                                                keys=[
                                                    Constant(value='error')],
                                                values=[
                                                    Constant(value='Unauthorized')])],
                                        keywords=[]),
                                    Constant(value=403)],
                                ctx=Load()))],
                    orelse=[]),
                Return(
                    value=Call(
                        func=Name(id='jsonify', ctx=Load()),
                        args=[
                            Dict(
                                keys=[
                                    Constant(value='success')],
                                values=[
                                    Constant(value='Wi-Fi settings changed successfully')])],
                        keywords=[]))],
            decorator_list=[
                Call(
                    func=Attribute(
                        value=Name(id='app', ctx=Load()),
                        attr='route',
                        ctx=Load()),
                    args=[
                        Constant(value='/api/change_wifi_settings')],
                    keywords=[
                        keyword(
                            arg='methods',
                            value=List(
                                elts=[
                                    Constant(value='POST')],
                                ctx=Load()))])]),
        If(
            test=Compare(
                left=Name(id='__name__', ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Constant(value='__main__')]),
            body=[
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Name(id='app', ctx=Load()),
                            attr='run',
                            ctx=Load()),
                        args=[],
                        keywords=[]))],
            orelse=[])],
    type_ignores=[])