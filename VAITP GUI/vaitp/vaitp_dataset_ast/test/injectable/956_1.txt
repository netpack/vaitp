Module(
    body=[
        ImportFrom(
            module='jinja2',
            names=[
                alias(name='Environment'),
                alias(name='escape')],
            level=0),
        Assign(
            targets=[
                Name(id='env', ctx=Store())],
            value=Call(
                func=Name(id='Environment', ctx=Load()),
                args=[],
                keywords=[
                    keyword(
                        arg='autoescape',
                        value=Constant(value=True))])),
        Assign(
            targets=[
                Name(id='template', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='env', ctx=Load()),
                    attr='from_string',
                    ctx=Load()),
                args=[
                    Constant(value='\n<div {{ attributes | safe }}></div>\n')],
                keywords=[])),
        Assign(
            targets=[
                Name(id='safe_attributes', ctx=Store())],
            value=Dict(
                keys=[
                    Constant(value='class'),
                    Constant(value='data-info')],
                values=[
                    Constant(value='my-class'),
                    Call(
                        func=Name(id='escape', ctx=Load()),
                        args=[
                            Constant(value='some safe info')],
                        keywords=[])])),
        Assign(
            targets=[
                Name(id='rendered', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='template', ctx=Load()),
                    attr='render',
                    ctx=Load()),
                args=[],
                keywords=[
                    keyword(
                        arg='attributes',
                        value=Call(
                            func=Attribute(
                                value=Constant(value=' '),
                                attr='join',
                                ctx=Load()),
                            args=[
                                GeneratorExp(
                                    elt=JoinedStr(
                                        values=[
                                            FormattedValue(
                                                value=Name(id='key', ctx=Load()),
                                                conversion=-1),
                                            Constant(value='="'),
                                            FormattedValue(
                                                value=Name(id='value', ctx=Load()),
                                                conversion=-1),
                                            Constant(value='"')]),
                                    generators=[
                                        comprehension(
                                            target=Tuple(
                                                elts=[
                                                    Name(id='key', ctx=Store()),
                                                    Name(id='value', ctx=Store())],
                                                ctx=Store()),
                                            iter=Call(
                                                func=Attribute(
                                                    value=Name(id='safe_attributes', ctx=Load()),
                                                    attr='items',
                                                    ctx=Load()),
                                                args=[],
                                                keywords=[]),
                                            ifs=[],
                                            is_async=0)])],
                            keywords=[]))])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='rendered', ctx=Load())],
                keywords=[]))],
    type_ignores=[])