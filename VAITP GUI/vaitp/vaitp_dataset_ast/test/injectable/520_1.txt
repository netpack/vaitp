Module(
    body=[
        Import(
            names=[
                alias(name='lxml.etree', asname='ET')]),
        FunctionDef(
            name='safe_parse_xmp',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='xmp_data')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='parser', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='ET', ctx=Load()),
                            attr='XMLParser',
                            ctx=Load()),
                        args=[],
                        keywords=[
                            keyword(
                                arg='recover',
                                value=Constant(value=False)),
                            keyword(
                                arg='no_network',
                                value=Constant(value=True))])),
                Return(
                    value=Call(
                        func=Attribute(
                            value=Name(id='ET', ctx=Load()),
                            attr='fromstring',
                            ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='xmp_data', ctx=Load()),
                                    attr='encode',
                                    ctx=Load()),
                                args=[
                                    Constant(value='utf-8')],
                                keywords=[]),
                            Name(id='parser', ctx=Load())],
                        keywords=[]))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='xmp_data', ctx=Store())],
            value=Constant(value='<xmpmeta>\n    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">\n        <rdf:Description rdf:about="http://example.com">\n            <dc:title>Example Title</dc:title>\n        </rdf:Description>\n    </rdf:RDF>\n</xmpmeta>')),
        Try(
            body=[
                Assign(
                    targets=[
                        Name(id='parsed_xmp', ctx=Store())],
                    value=Call(
                        func=Name(id='safe_parse_xmp', ctx=Load()),
                        args=[
                            Name(id='xmp_data', ctx=Load())],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='ET', ctx=Load()),
                                            attr='tostring',
                                            ctx=Load()),
                                        args=[
                                            Name(id='parsed_xmp', ctx=Load())],
                                        keywords=[
                                            keyword(
                                                arg='pretty_print',
                                                value=Constant(value=True))]),
                                    attr='decode',
                                    ctx=Load()),
                                args=[],
                                keywords=[])],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Attribute(
                        value=Name(id='ET', ctx=Load()),
                        attr='XMLSyntaxError',
                        ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    Constant(value='Failed to parse XMP data:'),
                                    Name(id='e', ctx=Load())],
                                keywords=[]))])],
            orelse=[],
            finalbody=[])],
    type_ignores=[])