Module(
    body=[
        ImportFrom(
            module='Products.CMFCore.utils',
            names=[
                alias(name='getToolByName')],
            level=0),
        ImportFrom(
            module='Products.CMFCore.exceptions',
            names=[
                alias(name='Unauthorized')],
            level=0),
        FunctionDef(
            name='safe_create_object',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='context'),
                    arg(arg='type_name'),
                    arg(arg='id')],
                kwonlyargs=[],
                kw_defaults=[],
                kwarg=arg(arg='kwargs'),
                defaults=[]),
            body=[
                If(
                    test=UnaryOp(
                        op=Not(),
                        operand=Call(
                            func=Attribute(
                                value=Name(id='context', ctx=Load()),
                                attr='checkPermission',
                                ctx=Load()),
                            args=[
                                Constant(value='Add portal content'),
                                Name(id='context', ctx=Load())],
                            keywords=[])),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='Unauthorized', ctx=Load()),
                                args=[
                                    Constant(value='You do not have permission to create this object.')],
                                keywords=[]))],
                    orelse=[]),
                Assign(
                    targets=[
                        Name(id='portal_types', ctx=Store())],
                    value=Call(
                        func=Name(id='getToolByName', ctx=Load()),
                        args=[
                            Name(id='context', ctx=Load()),
                            Constant(value='portal_types')],
                        keywords=[])),
                If(
                    test=Compare(
                        left=Name(id='type_name', ctx=Load()),
                        ops=[
                            In()],
                        comparators=[
                            Call(
                                func=Attribute(
                                    value=Name(id='portal_types', ctx=Load()),
                                    attr='listTypeInfo',
                                    ctx=Load()),
                                args=[],
                                keywords=[])]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='new_object', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='portal_types', ctx=Load()),
                                    attr='constructContent',
                                    ctx=Load()),
                                args=[
                                    Name(id='type_name', ctx=Load()),
                                    Name(id='context', ctx=Load()),
                                    Name(id='id', ctx=Load())],
                                keywords=[
                                    keyword(
                                        value=Name(id='kwargs', ctx=Load()))])),
                        Return(
                            value=Name(id='new_object', ctx=Load()))],
                    orelse=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Invalid type name provided.')],
                                keywords=[]))])],
            decorator_list=[])],
    type_ignores=[])