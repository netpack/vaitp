Module(
    body=[
        FunctionDef(
            name='tri_recursion',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='k')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                If(
                    test=Compare(
                        left=Name(id='k', ctx=Load()),
                        ops=[
                            Gt()],
                        comparators=[
                            Constant(value=0)]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='result', ctx=Store())],
                            value=BinOp(
                                left=Name(id='k', ctx=Load()),
                                op=Add(),
                                right=Call(
                                    func=Name(id='tri_recursion', ctx=Load()),
                                    args=[
                                        BinOp(
                                            left=Name(id='k', ctx=Load()),
                                            op=Sub(),
                                            right=Constant(value=1))],
                                    keywords=[]))),
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    Name(id='result', ctx=Load())],
                                keywords=[]))],
                    orelse=[
                        Assign(
                            targets=[
                                Name(id='result', ctx=Store())],
                            value=Constant(value=0))]),
                Return(
                    value=Name(id='result', ctx=Load()))],
            decorator_list=[])],
    type_ignores=[])