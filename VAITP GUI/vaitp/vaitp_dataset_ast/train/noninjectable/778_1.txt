Module(
    body=[
        ImportFrom(
            module='keystone',
            names=[
                alias(name='token')],
            level=0),
        ClassDef(
            name='VulnerableTokenProvider',
            bases=[
                Attribute(
                    value=Name(id='token', ctx=Load()),
                    attr='Provider',
                    ctx=Load())],
            keywords=[],
            body=[
                FunctionDef(
                    name='validate_token',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(arg='token_id'),
                            arg(arg='context')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[
                            Constant(value=None)]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='token_data', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='get_token_data',
                                    ctx=Load()),
                                args=[
                                    Name(id='token_id', ctx=Load())],
                                keywords=[])),
                        If(
                            test=Compare(
                                left=Name(id='token_data', ctx=Load()),
                                ops=[
                                    Is()],
                                comparators=[
                                    Constant(value=None)]),
                            body=[
                                Raise(
                                    exc=Call(
                                        func=Name(id='Exception', ctx=Load()),
                                        args=[
                                            Constant(value='Invalid token.')],
                                        keywords=[]))],
                            orelse=[]),
                        Return(
                            value=Name(id='token_data', ctx=Load()))],
                    decorator_list=[]),
                FunctionDef(
                    name='get_token_data',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(arg='token_id')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Pass()],
                    decorator_list=[])],
            decorator_list=[])],
    type_ignores=[])