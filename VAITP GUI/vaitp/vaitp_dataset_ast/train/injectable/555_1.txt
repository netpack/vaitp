Module(
    body=[
        Import(
            names=[
                alias(name='ast')]),
        FunctionDef(
            name='safe_eval',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='user_input')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='allowed_nodes', ctx=Store())],
                    value=Set(
                        elts=[
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Expression',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Num',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Str',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='List',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Tuple',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Dict',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='NameConstant',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='UnaryOp',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='BinOp',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Compare',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='BoolOp',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='IfExp',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Call',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Attribute',
                                ctx=Load()),
                            Attribute(
                                value=Name(id='ast', ctx=Load()),
                                attr='Subscript',
                                ctx=Load())])),
                Assign(
                    targets=[
                        Name(id='tree', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='ast', ctx=Load()),
                            attr='parse',
                            ctx=Load()),
                        args=[
                            Name(id='user_input', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='mode',
                                value=Constant(value='eval'))])),
                For(
                    target=Name(id='node', ctx=Store()),
                    iter=Call(
                        func=Attribute(
                            value=Name(id='ast', ctx=Load()),
                            attr='walk',
                            ctx=Load()),
                        args=[
                            Name(id='tree', ctx=Load())],
                        keywords=[]),
                    body=[
                        If(
                            test=Compare(
                                left=Call(
                                    func=Name(id='type', ctx=Load()),
                                    args=[
                                        Name(id='node', ctx=Load())],
                                    keywords=[]),
                                ops=[
                                    NotIn()],
                                comparators=[
                                    Name(id='allowed_nodes', ctx=Load())]),
                            body=[
                                Raise(
                                    exc=Call(
                                        func=Name(id='ValueError', ctx=Load()),
                                        args=[
                                            Constant(value='Unsafe expression')],
                                        keywords=[]))],
                            orelse=[])],
                    orelse=[]),
                Return(
                    value=Call(
                        func=Name(id='eval', ctx=Load()),
                        args=[
                            Call(
                                func=Name(id='compile', ctx=Load()),
                                args=[
                                    Name(id='tree', ctx=Load())],
                                keywords=[
                                    keyword(
                                        arg='filename',
                                        value=Constant(value='')),
                                    keyword(
                                        arg='mode',
                                        value=Constant(value='eval'))])],
                        keywords=[]))],
            decorator_list=[]),
        Try(
            body=[
                Assign(
                    targets=[
                        Name(id='result', ctx=Store())],
                    value=Call(
                        func=Name(id='safe_eval', ctx=Load()),
                        args=[
                            Constant(value='2 + 2')],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Name(id='result', ctx=Load())],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Name(id='ValueError', ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    Name(id='e', ctx=Load())],
                                keywords=[]))])],
            orelse=[],
            finalbody=[]),
        Try(
            body=[
                Assign(
                    targets=[
                        Name(id='result', ctx=Store())],
                    value=Call(
                        func=Name(id='safe_eval', ctx=Load()),
                        args=[
                            Constant(value="__import__('os').system('ls')")],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Name(id='result', ctx=Load())],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Name(id='ValueError', ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    Name(id='e', ctx=Load())],
                                keywords=[]))])],
            orelse=[],
            finalbody=[])],
    type_ignores=[])