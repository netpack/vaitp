Module(
    body=[
        Import(
            names=[
                alias(name='cjson')]),
        FunctionDef(
            name='safe_function',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='data')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                If(
                    test=UnaryOp(
                        op=Not(),
                        operand=Call(
                            func=Name(id='isinstance', ctx=Load()),
                            args=[
                                Name(id='data', ctx=Load()),
                                Name(id='str', ctx=Load())],
                            keywords=[])),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Input must be a string.')],
                                keywords=[]))],
                    orelse=[]),
                Assign(
                    targets=[
                        Name(id='max_length', ctx=Store())],
                    value=Constant(value=10000)),
                If(
                    test=Compare(
                        left=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='data', ctx=Load())],
                            keywords=[]),
                        ops=[
                            Gt()],
                        comparators=[
                            Name(id='max_length', ctx=Load())]),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Input exceeds maximum allowed length.')],
                                keywords=[]))],
                    orelse=[]),
                Assign(
                    targets=[
                        Name(id='encoded_data', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='cjson', ctx=Load()),
                            attr='encode',
                            ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load())],
                        keywords=[])),
                Return(
                    value=Name(id='encoded_data', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='user_input', ctx=Store())],
            value=BinOp(
                left=Constant(value='\uffff', kind='u'),
                op=Mult(),
                right=Constant(value=100000))),
        Assign(
            targets=[
                Name(id='result', ctx=Store())],
            value=Call(
                func=Name(id='safe_function', ctx=Load()),
                args=[
                    Name(id='user_input', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='result', ctx=Load())],
                keywords=[]))],
    type_ignores=[])