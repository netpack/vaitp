Module(
    body=[
        Import(
            names=[
                alias(name='re')]),
        Import(
            names=[
                alias(name='markdown2')]),
        FunctionDef(
            name='vulnerable_markdown_processing',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='input_string')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='regex', ctx=Store())],
                    value=Constant(value='(\\*\\*|__)(.*?)\\1')),
                If(
                    test=Call(
                        func=Attribute(
                            value=Name(id='re', ctx=Load()),
                            attr='search',
                            ctx=Load()),
                        args=[
                            Name(id='regex', ctx=Load()),
                            Name(id='input_string', ctx=Load())],
                        keywords=[]),
                    body=[
                        Return(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='markdown2', ctx=Load()),
                                    attr='markdown',
                                    ctx=Load()),
                                args=[
                                    Name(id='input_string', ctx=Load())],
                                keywords=[]))],
                    orelse=[]),
                Return(
                    value=Name(id='input_string', ctx=Load()))],
            decorator_list=[]),
        FunctionDef(
            name='safe_markdown_processing',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='input_string')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='regex', ctx=Store())],
                    value=Constant(value='(\\*\\*|__)([^*]*)\\1')),
                If(
                    test=Call(
                        func=Attribute(
                            value=Name(id='re', ctx=Load()),
                            attr='search',
                            ctx=Load()),
                        args=[
                            Name(id='regex', ctx=Load()),
                            Name(id='input_string', ctx=Load())],
                        keywords=[]),
                    body=[
                        Try(
                            body=[
                                Return(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='markdown2', ctx=Load()),
                                            attr='markdown',
                                            ctx=Load()),
                                        args=[
                                            Name(id='input_string', ctx=Load())],
                                        keywords=[]))],
                            handlers=[
                                ExceptHandler(
                                    type=Name(id='Exception', ctx=Load()),
                                    name='e',
                                    body=[
                                        Return(
                                            value=JoinedStr(
                                                values=[
                                                    Constant(value='Error processing markdown: '),
                                                    FormattedValue(
                                                        value=Name(id='e', ctx=Load()),
                                                        conversion=-1)]))])],
                            orelse=[],
                            finalbody=[])],
                    orelse=[]),
                Return(
                    value=Name(id='input_string', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='malicious_string', ctx=Store())],
            value=BinOp(
                left=BinOp(
                    left=Constant(value='**'),
                    op=Add(),
                    right=BinOp(
                        left=Constant(value='a'),
                        op=Mult(),
                        right=Constant(value=10000))),
                op=Add(),
                right=Constant(value='**'))),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='safe_markdown_processing', ctx=Load()),
                        args=[
                            Name(id='malicious_string', ctx=Load())],
                        keywords=[])],
                keywords=[]))],
    type_ignores=[])