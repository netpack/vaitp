Module(
    body=[
        ImportFrom(
            module='jose',
            names=[
                alias(name='jwe')],
            level=0),
        FunctionDef(
            name='safe_decode',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='token')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='max_size', ctx=Store())],
                    value=BinOp(
                        left=Constant(value=1024),
                        op=Mult(),
                        right=Constant(value=1024))),
                If(
                    test=Compare(
                        left=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Call(
                                    func=Attribute(
                                        value=Name(id='token', ctx=Load()),
                                        attr='encode',
                                        ctx=Load()),
                                    args=[
                                        Constant(value='utf-8')],
                                    keywords=[])],
                            keywords=[]),
                        ops=[
                            Gt()],
                        comparators=[
                            Name(id='max_size', ctx=Load())]),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Token size exceeds the maximum allowed limit.')],
                                keywords=[]))],
                    orelse=[]),
                Return(
                    value=Call(
                        func=Attribute(
                            value=Name(id='jwe', ctx=Load()),
                            attr='decode',
                            ctx=Load()),
                        args=[
                            Name(id='token', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='key',
                                value=Constant(value='your-256-bit-secret'))]))],
            decorator_list=[]),
        Try(
            body=[
                Assign(
                    targets=[
                        Name(id='token', ctx=Store())],
                    value=Constant(value='your_jwe_token_here')),
                Assign(
                    targets=[
                        Name(id='decoded', ctx=Store())],
                    value=Call(
                        func=Name(id='safe_decode', ctx=Load()),
                        args=[
                            Name(id='token', ctx=Load())],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Name(id='decoded', ctx=Load())],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Name(id='Exception', ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    JoinedStr(
                                        values=[
                                            Constant(value='Error: '),
                                            FormattedValue(
                                                value=Name(id='e', ctx=Load()),
                                                conversion=-1)])],
                                keywords=[]))])],
            orelse=[],
            finalbody=[])],
    type_ignores=[])