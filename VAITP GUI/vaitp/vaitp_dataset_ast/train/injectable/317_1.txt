Module(
    body=[
        ImportFrom(
            module='celery',
            names=[
                alias(name='Celery')],
            level=0),
        Assign(
            targets=[
                Name(id='app', ctx=Store())],
            value=Call(
                func=Name(id='Celery', ctx=Load()),
                args=[
                    Constant(value='tasks')],
                keywords=[
                    keyword(
                        arg='broker',
                        value=Constant(value='pyamqp://guest@localhost//'))])),
        FunctionDef(
            name='example_task',
            args=arguments(
                posonlyargs=[],
                args=[],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Return(
                    value=Constant(value='This is a task.'))],
            decorator_list=[
                Attribute(
                    value=Name(id='app', ctx=Load()),
                    attr='task',
                    ctx=Load())]),
        Assign(
            targets=[
                Name(id='malicious_data', ctx=Store())],
            value=Dict(
                keys=[
                    Constant(value='result'),
                    Constant(value='exc_module'),
                    Constant(value='exc_type'),
                    Constant(value='exc_message')],
                values=[
                    Constant(value='malicious_command'),
                    Constant(value='os'),
                    Constant(value='system'),
                    Constant(value='id')])),
        Try(
            body=[
                Assign(
                    targets=[
                        Name(id='result', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Attribute(
                                value=Name(id='app', ctx=Load()),
                                attr='backend',
                                ctx=Load()),
                            attr='exception_to_python',
                            ctx=Load()),
                        args=[
                            Name(id='malicious_data', ctx=Load())],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Name(id='result', ctx=Load())],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Name(id='Exception', ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    Constant(value='Caught an error:'),
                                    Name(id='e', ctx=Load())],
                                keywords=[]))])],
            orelse=[],
            finalbody=[])],
    type_ignores=[])