Module(
    body=[
        ImportFrom(
            module='Crypto.Cipher',
            names=[
                alias(name='AES')],
            level=0),
        ImportFrom(
            module='Crypto.Util.Padding',
            names=[
                alias(name='pad'),
                alias(name='unpad')],
            level=0),
        Import(
            names=[
                alias(name='os')]),
        FunctionDef(
            name='secure_aes_encrypt',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='key'),
                    arg(arg='iv'),
                    arg(arg='plaintext')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                If(
                    test=Compare(
                        left=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='key', ctx=Load())],
                            keywords=[]),
                        ops=[
                            NotIn()],
                        comparators=[
                            Tuple(
                                elts=[
                                    Constant(value=16),
                                    Constant(value=24),
                                    Constant(value=32)],
                                ctx=Load())]),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Key must be either 16, 24, or 32 bytes long.')],
                                keywords=[]))],
                    orelse=[]),
                If(
                    test=Compare(
                        left=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='iv', ctx=Load())],
                            keywords=[]),
                        ops=[
                            NotEq()],
                        comparators=[
                            Constant(value=16)]),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='IV must be 16 bytes long.')],
                                keywords=[]))],
                    orelse=[]),
                Assign(
                    targets=[
                        Name(id='cipher', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='AES', ctx=Load()),
                            attr='new',
                            ctx=Load()),
                        args=[
                            Name(id='key', ctx=Load()),
                            Attribute(
                                value=Name(id='AES', ctx=Load()),
                                attr='MODE_CBC',
                                ctx=Load()),
                            Name(id='iv', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ciphertext', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='cipher', ctx=Load()),
                            attr='encrypt',
                            ctx=Load()),
                        args=[
                            Call(
                                func=Name(id='pad', ctx=Load()),
                                args=[
                                    Call(
                                        func=Attribute(
                                            value=Name(id='plaintext', ctx=Load()),
                                            attr='encode',
                                            ctx=Load()),
                                        args=[],
                                        keywords=[]),
                                    Attribute(
                                        value=Name(id='AES', ctx=Load()),
                                        attr='block_size',
                                        ctx=Load())],
                                keywords=[])],
                        keywords=[])),
                Return(
                    value=Name(id='ciphertext', ctx=Load()))],
            decorator_list=[]),
        FunctionDef(
            name='secure_aes_decrypt',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='key'),
                    arg(arg='iv'),
                    arg(arg='ciphertext')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                If(
                    test=Compare(
                        left=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='key', ctx=Load())],
                            keywords=[]),
                        ops=[
                            NotIn()],
                        comparators=[
                            Tuple(
                                elts=[
                                    Constant(value=16),
                                    Constant(value=24),
                                    Constant(value=32)],
                                ctx=Load())]),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Key must be either 16, 24, or 32 bytes long.')],
                                keywords=[]))],
                    orelse=[]),
                If(
                    test=Compare(
                        left=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='iv', ctx=Load())],
                            keywords=[]),
                        ops=[
                            NotEq()],
                        comparators=[
                            Constant(value=16)]),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='IV must be 16 bytes long.')],
                                keywords=[]))],
                    orelse=[]),
                Assign(
                    targets=[
                        Name(id='cipher', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='AES', ctx=Load()),
                            attr='new',
                            ctx=Load()),
                        args=[
                            Name(id='key', ctx=Load()),
                            Attribute(
                                value=Name(id='AES', ctx=Load()),
                                attr='MODE_CBC',
                                ctx=Load()),
                            Name(id='iv', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='plaintext', ctx=Store())],
                    value=Call(
                        func=Name(id='unpad', ctx=Load()),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Name(id='cipher', ctx=Load()),
                                    attr='decrypt',
                                    ctx=Load()),
                                args=[
                                    Name(id='ciphertext', ctx=Load())],
                                keywords=[]),
                            Attribute(
                                value=Name(id='AES', ctx=Load()),
                                attr='block_size',
                                ctx=Load())],
                        keywords=[])),
                Return(
                    value=Call(
                        func=Attribute(
                            value=Name(id='plaintext', ctx=Load()),
                            attr='decode',
                            ctx=Load()),
                        args=[],
                        keywords=[]))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='key', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='os', ctx=Load()),
                    attr='urandom',
                    ctx=Load()),
                args=[
                    Constant(value=16)],
                keywords=[])),
        Assign(
            targets=[
                Name(id='iv', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='os', ctx=Load()),
                    attr='urandom',
                    ctx=Load()),
                args=[
                    Constant(value=16)],
                keywords=[])),
        Assign(
            targets=[
                Name(id='plaintext', ctx=Store())],
            value=Constant(value='This is a secret message.')),
        Assign(
            targets=[
                Name(id='ciphertext', ctx=Store())],
            value=Name(id='secure_aes_encrypt', ctx=Load()))],
    type_ignores=[])