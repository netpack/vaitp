Module(
    body=[
        FunctionDef(
            name='safe_strncpy',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='dest'),
                    arg(arg='src'),
                    arg(arg='dest_size')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                If(
                    test=Compare(
                        left=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='src', ctx=Load())],
                            keywords=[]),
                        ops=[
                            GtE()],
                        comparators=[
                            Name(id='dest_size', ctx=Load())]),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Source string is too long for the destination buffer.')],
                                keywords=[]))],
                    orelse=[]),
                Assign(
                    targets=[
                        Subscript(
                            value=Name(id='dest', ctx=Load()),
                            slice=Slice(
                                upper=Call(
                                    func=Name(id='len', ctx=Load()),
                                    args=[
                                        Name(id='src', ctx=Load())],
                                    keywords=[])),
                            ctx=Store())],
                    value=Name(id='src', ctx=Load()))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='destination_buffer', ctx=Store())],
            value=BinOp(
                left=List(
                    elts=[
                        Constant(value='')],
                    ctx=Load()),
                op=Mult(),
                right=Constant(value=10))),
        Assign(
            targets=[
                Name(id='source_string', ctx=Store())],
            value=Constant(value='HelloWorld')),
        Try(
            body=[
                Expr(
                    value=Call(
                        func=Name(id='safe_strncpy', ctx=Load()),
                        args=[
                            Name(id='destination_buffer', ctx=Load()),
                            Name(id='source_string', ctx=Load()),
                            Call(
                                func=Name(id='len', ctx=Load()),
                                args=[
                                    Name(id='destination_buffer', ctx=Load())],
                                keywords=[])],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Constant(value='Buffer after copy:'),
                            Call(
                                func=Attribute(
                                    value=Constant(value=''),
                                    attr='join',
                                    ctx=Load()),
                                args=[
                                    Name(id='destination_buffer', ctx=Load())],
                                keywords=[])],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Name(id='ValueError', ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    Constant(value='Error:'),
                                    Name(id='e', ctx=Load())],
                                keywords=[]))])],
            orelse=[],
            finalbody=[])],
    type_ignores=[])