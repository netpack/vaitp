Module(
    body=[
        Import(
            names=[
                alias(name='plistlib')]),
        FunctionDef(
            name='parse_plist',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='data')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Try(
                    body=[
                        Return(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='plistlib', ctx=Load()),
                                    attr='loads',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load())],
                                keywords=[
                                    keyword(
                                        arg='fmt',
                                        value=Attribute(
                                            value=Name(id='plistlib', ctx=Load()),
                                            attr='FMT_XML',
                                            ctx=Load()))]))],
                    handlers=[
                        ExceptHandler(
                            type=Attribute(
                                value=Name(id='plistlib', ctx=Load()),
                                attr='InvalidFileException',
                                ctx=Load()),
                            body=[
                                Expr(
                                    value=Call(
                                        func=Name(id='print', ctx=Load()),
                                        args=[
                                            Constant(value='Invalid PropertyList file')],
                                        keywords=[]))]),
                        ExceptHandler(
                            type=Name(id='Exception', ctx=Load()),
                            name='e',
                            body=[
                                Expr(
                                    value=Call(
                                        func=Name(id='print', ctx=Load()),
                                        args=[
                                            JoinedStr(
                                                values=[
                                                    Constant(value='Error parsing plist: '),
                                                    FormattedValue(
                                                        value=Name(id='e', ctx=Load()),
                                                        conversion=-1)])],
                                        keywords=[]))])],
                    orelse=[],
                    finalbody=[])],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='valid_data', ctx=Store())],
            value=Constant(value=b'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n    <dict>\n        <key>key1</key>\n        <string>value1</string>\n        <key>key2</key>\n        <string>value2</string>\n    </dict>\n</plist>\n')),
        Try(
            body=[
                Assign(
                    targets=[
                        Name(id='result', ctx=Store())],
                    value=Call(
                        func=Name(id='parse_plist', ctx=Load()),
                        args=[
                            Name(id='valid_data', ctx=Load())],
                        keywords=[])),
                Expr(
                    value=Call(
                        func=Name(id='print', ctx=Load()),
                        args=[
                            Constant(value='Parsed plist:'),
                            Name(id='result', ctx=Load())],
                        keywords=[]))],
            handlers=[
                ExceptHandler(
                    type=Name(id='Exception', ctx=Load()),
                    name='e',
                    body=[
                        Expr(
                            value=Call(
                                func=Name(id='print', ctx=Load()),
                                args=[
                                    JoinedStr(
                                        values=[
                                            Constant(value='Error parsing plist: '),
                                            FormattedValue(
                                                value=Name(id='e', ctx=Load()),
                                                conversion=-1)])],
                                keywords=[]))])],
            orelse=[],
            finalbody=[])],
    type_ignores=[])