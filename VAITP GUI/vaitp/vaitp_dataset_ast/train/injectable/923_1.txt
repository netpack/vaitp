Module(
    body=[
        Import(
            names=[
                alias(name='os')]),
        ClassDef(
            name='Snippets',
            bases=[],
            keywords=[],
            body=[
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(arg='base_path')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='self', ctx=Load()),
                                    attr='base_path',
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='os', ctx=Load()),
                                        attr='path',
                                        ctx=Load()),
                                    attr='abspath',
                                    ctx=Load()),
                                args=[
                                    Name(id='base_path', ctx=Load())],
                                keywords=[]))],
                    decorator_list=[]),
                FunctionDef(
                    name='get_snippet_path',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(arg='path')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='normalized_path', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='os', ctx=Load()),
                                        attr='path',
                                        ctx=Load()),
                                    attr='normpath',
                                    ctx=Load()),
                                args=[
                                    Name(id='path', ctx=Load())],
                                keywords=[])),
                        If(
                            test=UnaryOp(
                                op=Not(),
                                operand=Call(
                                    func=Attribute(
                                        value=Name(id='normalized_path', ctx=Load()),
                                        attr='startswith',
                                        ctx=Load()),
                                    args=[
                                        Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='base_path',
                                            ctx=Load())],
                                    keywords=[])),
                            body=[
                                Raise(
                                    exc=Call(
                                        func=Name(id='ValueError', ctx=Load()),
                                        args=[
                                            Constant(value='Access to the specified path is not allowed.')],
                                        keywords=[]))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='full_path', ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Attribute(
                                        value=Name(id='os', ctx=Load()),
                                        attr='path',
                                        ctx=Load()),
                                    attr='join',
                                    ctx=Load()),
                                args=[
                                    Attribute(
                                        value=Name(id='self', ctx=Load()),
                                        attr='base_path',
                                        ctx=Load()),
                                    Name(id='normalized_path', ctx=Load())],
                                keywords=[])),
                        If(
                            test=UnaryOp(
                                op=Not(),
                                operand=Call(
                                    func=Attribute(
                                        value=Attribute(
                                            value=Name(id='os', ctx=Load()),
                                            attr='path',
                                            ctx=Load()),
                                        attr='isfile',
                                        ctx=Load()),
                                    args=[
                                        Name(id='full_path', ctx=Load())],
                                    keywords=[])),
                            body=[
                                Raise(
                                    exc=Call(
                                        func=Name(id='FileNotFoundError', ctx=Load()),
                                        args=[
                                            Constant(value='The specified file does not exist.')],
                                        keywords=[]))],
                            orelse=[]),
                        Return(
                            value=Name(id='full_path', ctx=Load()))],
                    decorator_list=[])],
            decorator_list=[])],
    type_ignores=[])