Module(
    body=[
        Import(
            names=[
                alias(name='ujson')]),
        FunctionDef(
            name='safe_encode',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='data'),
                    arg(arg='indent')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[
                    Constant(value=None)]),
            body=[
                If(
                    test=BoolOp(
                        op=And(),
                        values=[
                            Compare(
                                left=Name(id='indent', ctx=Load()),
                                ops=[
                                    IsNot()],
                                comparators=[
                                    Constant(value=None)]),
                            BoolOp(
                                op=Or(),
                                values=[
                                    Compare(
                                        left=Name(id='indent', ctx=Load()),
                                        ops=[
                                            Lt()],
                                        comparators=[
                                            Constant(value=0)]),
                                    Compare(
                                        left=Name(id='indent', ctx=Load()),
                                        ops=[
                                            Gt()],
                                        comparators=[
                                            Constant(value=100)])])]),
                    body=[
                        Raise(
                            exc=Call(
                                func=Name(id='ValueError', ctx=Load()),
                                args=[
                                    Constant(value='Indentation level must be between 0 and 100.')],
                                keywords=[]))],
                    orelse=[]),
                Return(
                    value=Call(
                        func=Attribute(
                            value=Name(id='ujson', ctx=Load()),
                            attr='dumps',
                            ctx=Load()),
                        args=[
                            Name(id='data', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='indent',
                                value=Name(id='indent', ctx=Load()))]))],
            decorator_list=[]),
        Assign(
            targets=[
                Name(id='data', ctx=Store())],
            value=Dict(
                keys=[
                    Constant(value='key')],
                values=[
                    Constant(value='value')])),
        Assign(
            targets=[
                Name(id='encoded_data', ctx=Store())],
            value=Call(
                func=Name(id='safe_encode', ctx=Load()),
                args=[
                    Name(id='data', ctx=Load())],
                keywords=[
                    keyword(
                        arg='indent',
                        value=Constant(value=4))])),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='encoded_data', ctx=Load())],
                keywords=[]))],
    type_ignores=[])