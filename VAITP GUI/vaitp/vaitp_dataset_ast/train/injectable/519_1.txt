Module(
    body=[
        ImportFrom(
            module='flask',
            names=[
                alias(name='Flask'),
                alias(name='request'),
                alias(name='abort')],
            level=0),
        Assign(
            targets=[
                Name(id='app', ctx=Store())],
            value=Call(
                func=Name(id='Flask', ctx=Load()),
                args=[
                    Name(id='__name__', ctx=Load())],
                keywords=[])),
        Assign(
            targets=[
                Subscript(
                    value=Attribute(
                        value=Name(id='app', ctx=Load()),
                        attr='config',
                        ctx=Load()),
                    slice=Constant(value='MAX_CONTENT_LENGTH'),
                    ctx=Store())],
            value=BinOp(
                left=Constant(value=16),
                op=Mult(),
                right=Constant(value=1024))),
        FunctionDef(
            name='your_endpoint',
            args=arguments(
                posonlyargs=[],
                args=[],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='data', ctx=Store())],
                    value=Attribute(
                        value=Name(id='request', ctx=Load()),
                        attr='json',
                        ctx=Load())),
                Return(
                    value=Tuple(
                        elts=[
                            Constant(value='Data processed successfully'),
                            Constant(value=200)],
                        ctx=Load()))],
            decorator_list=[
                Call(
                    func=Attribute(
                        value=Name(id='app', ctx=Load()),
                        attr='route',
                        ctx=Load()),
                    args=[
                        Constant(value='/your_endpoint')],
                    keywords=[
                        keyword(
                            arg='methods',
                            value=List(
                                elts=[
                                    Constant(value='POST')],
                                ctx=Load()))])]),
        FunctionDef(
            name='request_entity_too_large',
            args=arguments(
                posonlyargs=[],
                args=[
                    arg(arg='error')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Return(
                    value=Tuple(
                        elts=[
                            Constant(value='Request entity too large'),
                            Constant(value=413)],
                        ctx=Load()))],
            decorator_list=[
                Call(
                    func=Attribute(
                        value=Name(id='app', ctx=Load()),
                        attr='errorhandler',
                        ctx=Load()),
                    args=[
                        Constant(value=413)],
                    keywords=[])]),
        If(
            test=Compare(
                left=Name(id='__name__', ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Constant(value='__main__')]),
            body=[
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Name(id='app', ctx=Load()),
                            attr='run',
                            ctx=Load()),
                        args=[],
                        keywords=[]))],
            orelse=[])],
    type_ignores=[])