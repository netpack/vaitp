import ecdsa

def verify(signature, message, public_key):
    vk = ecdsa.VerifyingKey.from_string(public_key[1:], curve=ecdsa.SECP256k1)
    if not signature:  # Check for zero-filled signature
        return False
    try:
        vk.verify(signature, message)
        return True
    except ecdsa.BadSignatureError:
        return False

# Example usage:
public_key = b'\x04\x97\x93\x61\x34\x12\x34\x56\x78\x90\x12\x34\x56\x78\x90\x12\x34\x56\x78\x90\x12\x34\x56\x78\x90\x12\x34\x56\x78\x90\x12\x34\x56\x78\x90\x12\x34\x56\x78\x90\x12\x34\x56\x78\x90\x12\x34\x56\x78\x90'
message = b'Hello, World!'
signature = b'\x30D\x02 \x06\x86\xf8\xcc\x12\xc6@\xa7\xc8\x1d\xcf\x0bQ\xcaY\x97\x00>\x19\xb3\x921\x81f\xbb\x05\xf5\x02 \xbb\xb0\xf0\xaf.\xd0\xd7\xae\xf6\xda\xda\x02/\xfd\xe8\xa3\xf0"\xbb\xb5\x06Y\xd7\xc0*\x03\x8b' # valid signature

if verify(signature, message, public_key):
    print("Signature is valid")
else:
    print("Signature is invalid")