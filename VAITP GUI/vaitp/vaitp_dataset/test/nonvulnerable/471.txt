"    def test_property_from_data_enum(self, mocker):        name = mocker.MagicMock()        required = mocker.MagicMock()        data = mocker.MagicMock(title=None)        EnumProperty = mocker.patch(f"{MODULE_NAME}.EnumProperty")        mocker.patch("openapi_python_client.utils.remove_string_escapes", return_value=name)        from openapi_python_client.parser.properties import property_from_data        p = property_from_data(name=name, required=required, data=data)        EnumProperty.values_from_list.assert_called_once_with(data.enum)        EnumProperty.assert_called_once_with(            name=name, required=required, values=EnumProperty.values_from_list(), default=data.default, title=name        )        assert p == EnumProperty()        EnumProperty.reset_mock()        data.title = mocker.MagicMock()        property_from_data(            name=name, required=required, data=data,        )        EnumProperty.assert_called_once_with(            name=name, required=required, values=EnumProperty.values_from_list(), default=data.default, title=data.title        )"