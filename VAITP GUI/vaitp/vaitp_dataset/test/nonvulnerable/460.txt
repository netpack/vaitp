"    def test_property_from_data_simple_types(self, mocker, openapi_type, python_type):        name = mocker.MagicMock()        required = mocker.MagicMock()        data = oai.Schema.construct(type=openapi_type)        clazz = mocker.patch(f"{MODULE_NAME}.{python_type}")        mocker.patch("openapi_python_client.utils.remove_string_escapes", return_value=name)        from openapi_python_client.parser.properties import property_from_data        p = property_from_data(name=name, required=required, data=data)        clazz.assert_called_once_with(name=name, required=required, default=None)        assert p == clazz()        # Test optional values        clazz.reset_mock()        data.default = mocker.MagicMock()        property_from_data(            name=name, required=required, data=data,        )        clazz.assert_called_once_with(name=name, required=required, default=data.default)"