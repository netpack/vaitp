"    def test_federation_client_allowed_ip(self, resolver):        self.sydent.run()        request, channel = make_request(            self.sydent.reactor,            "POST",            "/_matrix/identity/v2/account/register",            {                "access_token": "foo",                "expires_in": 300,                "matrix_server_name": "example.com",                "token_type": "Bearer",            },        )        resolver.return_value = defer.succeed(            [                Server(                    host=self.allowed_domain,                    port=443,                    priority=1,                    weight=1,                    expires=100,                )            ]        )        request.render(self.sydent.servlets.registerServlet)        transport, protocol = self._get_http_request(            self.allowed_ip.decode("ascii"), 443        )        self.assertRegex(            transport.value(), b"^GET /_matrix/federation/v1/openid/userinfo"        )        self.assertRegex(transport.value(), b"Host: example.com")        # Send it the HTTP response        res_json = '{ "sub": "@test:example.com" }'.encode("ascii")        protocol.dataReceived(            b"HTTP/1.1 200 OK\r\n"            b"Server: Fake\r\n"            b"Content-Type: application/json\r\n"            b"Content-Length: %i\r\n"            b"\r\n"            b"%s" % (len(res_json), res_json)        )        self.assertEqual(channel.code, 200)"