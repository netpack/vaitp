"    def object_to_entity(self, o, link_label=None, link_direction=LinkDirection.InputToOutput):        # find a nice icon for it        try:            icon_url = mapping_object_icon[o['name']]        except KeyError:            # it's not in our mapping, just ignore and leave the default icon            icon_url = None        # Generate a human readable display-name:        # - find the first RequiredOneOf that exists        # - if none, use the first RequiredField        # LATER further finetune the human readable version of this object        o_template = self.misp.get_object_template(o['template_uuid'])        human_readable = None        try:            found = False            while not found:  # the while loop is broken once something is found, or the requiredOneOf has no elements left                required_ote_type = o_template['ObjectTemplate']['requirements']['requiredOneOf'].pop(0)                for ote in o_template['ObjectTemplateElement']:                    if ote['object_relation'] == required_ote_type:                        required_a_type = ote['type']                        break                for a in o['Attribute']:                    if a['type'] == required_a_type:                        human_readable = '{}:\n{}'.format(o['name'], a['value'])                        found = True                        break        except Exception:            pass        if not human_readable:            try:                found = False                parts = []                for required_ote_type in o_template['ObjectTemplate']['requirements']['required']:                    for ote in o_template['ObjectTemplateElement']:                        if ote['object_relation'] == required_ote_type:                            required_a_type = ote['type']                            break                    for a in o['Attribute']:                        if a['type'] == required_a_type:                            parts.append(a['value'])                            break                human_readable = '{}:\n{}'.format(o['name'], '|'.join(parts))            except Exception:                human_readable = o['name']        return MISPObject(            human_readable,            uuid=o['uuid'],            event_id=int(o['event_id']),            meta_category=o.get('meta_category'),            description=o.get('description'),            comment=o.get('comment'),            icon_url=icon_url,            link_label=link_label,            link_direction=link_direction,            bookmark=Bookmark.Green        )"