"    def login_user(self, username, password, context, **kwargs):        user = authenticate(request=context.get('request'),                            username=username, password=password)        if not user:            login_reject.send(sender=self.__class__, username=username, reason='creds')            raise FormattedException(m='incorrect_username_or_password', d={'reason': 'incorrect_username_or_password'},                                     status_code=HTTP_401_UNAUTHORIZED)        if not user.email_verified and not user.is_superuser:            login_reject.send(sender=self.__class__, username=username, reason='email')            raise FormattedException(m='email_verification_required', d={'reason': 'email_verification_required'},                                     status_code=HTTP_401_UNAUTHORIZED)        if not user.can_login():            login_reject.send(sender=self.__class__, username=username, reason='closed')            raise FormattedException(m='login_not_open', d={'reason': 'login_not_open'},                                     status_code=HTTP_401_UNAUTHORIZED)        login.send(sender=self.__class__, user=user)        return user"