"def stream_exists_backend(request, user_profile, stream_id, autosubscribe):    # type: (HttpRequest, UserProfile, int, bool) -> HttpResponse    try:        stream = get_and_validate_stream_by_id(stream_id, user_profile.realm)    except JsonableError:        stream = None    result = {"exists": bool(stream)}    if stream is not None:        recipient = get_recipient(Recipient.STREAM, stream.id)        if not stream.invite_only and autosubscribe:            bulk_add_subscriptions([stream], [user_profile])        result["subscribed"] = is_active_subscriber(            user_profile=user_profile,            recipient=recipient)        return json_success(result) # results are ignored for HEAD requests    return json_response(data=result, status=404)"