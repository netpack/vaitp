"def kickban(bot, trigger):    """Kick and ban a user from the channel. The bot must be a channel operator for this command to work."""    chanops = get_chanops(str(trigger.sender), bot.memory['channelmgnt']['jdcache'])    dodeop = False    if chanops:        if bot.channels[trigger.sender].privileges[bot.nick] < OP and trigger.account in chanops:            bot.say('Please wait...')            bot.say('op ' + trigger.sender, 'ChanServ')            time.sleep(1)            dodeop = True        text = trigger.group().split()        argc = len(text)        if argc < 3:            bot.reply('Syntax is: .kickban <nick> <reason>')            if dodeop:                deopbot(trigger.sender, bot)            return        nick = Identifier(text[1])        if ',' in str(nick):            return bot.reply('Unable to kickban. Kickbanning multiple users is not allowed.')        if '#' in str(nick):            return bot.reply('Unable to kickban. Use of # when kickbanning is not expected.')        mask = text[2] if any(s in text[2] for s in '!@*') else ''        reasonidx = 3 if mask != '' else 2        reason = ' '.join(text[reasonidx:])        mask = parse_host_mask(trigger.group().split())        if mask == '':            mask = nick + '!*@*'        if trigger.account in chanops:            bot.write(['MODE', trigger.sender, '+b', mask])            bot.write(['KICK', trigger.sender, nick, ':' + reason])            if dodeop:                deopbot(trigger.sender, bot)        else:            bot.reply('Access Denied. If in error, please contact the channel founder.')    else:        bot.reply(f'No ChanOps Found. Please ask for assistance in {bot.settings.channelmgnt.support_channel}')"