"def render_to_html(eq):    '''    Render a chemical equation string to html.    Renders each molecule separately, and returns invalid input wrapped in a <span>.    '''    def err(s):        "Render as an error span"        return HTML('<span class="inline-error inline">{0}</span>').format(s)    def render_arrow(arrow):        """Turn text arrows into pretty ones"""        if arrow == '->':            return HTML(u'\u2192')        if arrow == '<->':            return HTML(u'\u2194')        # this won't be reached unless we add more arrow types, but keep it to avoid explosions when        # that happens. HTML-escape this unknown arrow just in case.        return Text(arrow)    def render_expression(ex):        """        Render a chemical expression--no arrows.        """        try:            return _render_to_html(_get_final_tree(ex))        except ParseException:            return err(ex)    def spanify(s):        return HTML(u'<span class="math">{0}</span>').format(s)    left, arrow, right = split_on_arrow(eq)    if arrow == '':        # only one side        return spanify(render_expression(left))    return spanify(render_expression(left) + render_arrow(arrow) + render_expression(right))"