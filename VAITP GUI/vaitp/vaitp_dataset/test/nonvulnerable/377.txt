"    def connect(self):        """Connect to the host and port specified in __init__."""        if self.proxy_info and socks is None:            raise ProxiesUnavailableError("Proxy support missing but proxy use was requested!")        if self.proxy_info and self.proxy_info.isgood() and self.proxy_info.applies_to(self.host):            use_proxy = True            (                proxy_type,                proxy_host,                proxy_port,                proxy_rdns,                proxy_user,                proxy_pass,                proxy_headers,            ) = self.proxy_info.astuple()            host = proxy_host            port = proxy_port        else:            use_proxy = False            host = self.host            port = self.port            proxy_type = None        socket_err = None        for res in socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM):            af, socktype, proto, canonname, sa = res            try:                if use_proxy:                    self.sock = socks.socksocket(af, socktype, proto)                    self.sock.setproxy(                        proxy_type, proxy_host, proxy_port, proxy_rdns, proxy_user, proxy_pass,                    )                else:                    self.sock = socket.socket(af, socktype, proto)                    self.sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)                if has_timeout(self.timeout):                    self.sock.settimeout(self.timeout)                if self.debuglevel > 0:                    print("connect: ({0}, {1}) ************".format(self.host, self.port))                    if use_proxy:                        print(                            "proxy: {0} ************".format(                                str((proxy_host, proxy_port, proxy_rdns, proxy_user, proxy_pass, proxy_headers,))                            )                        )                self.sock.connect((self.host, self.port) + sa[2:])            except socket.error as e:                socket_err = e                if self.debuglevel > 0:                    print("connect fail: ({0}, {1})".format(self.host, self.port))                    if use_proxy:                        print(                            "proxy: {0}".format(                                str((proxy_host, proxy_port, proxy_rdns, proxy_user, proxy_pass, proxy_headers,))                            )                        )                if self.sock:                    self.sock.close()                self.sock = None                continue            break        if not self.sock:            raise socket_err"