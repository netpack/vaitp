"    def test_short_body(self):        # check to see if server closes connection when body is too short        # for cl header        to_send = tobytes(            "GET /short_body HTTP/1.0\r\n"            "Connection: Keep-Alive\r\n"            "Content-Length: 0\r\n"            "\r\n"        )        self.connect()        self.sock.send(to_send)        fp = self.sock.makefile("rb", 0)        line = fp.readline()  # status line        version, status, reason = (x.strip() for x in line.split(None, 2))        headers = parse_headers(fp)        content_length = int(headers.get("content-length"))        response_body = fp.read(content_length)        self.assertEqual(int(status), 200)        self.assertNotEqual(content_length, len(response_body))        self.assertEqual(len(response_body), content_length - 1)        self.assertEqual(response_body, tobytes("abcdefghi"))        # remote closed connection (despite keepalive header); not sure why        # first send succeeds        self.send_check_error(to_send)        self.assertRaises(ConnectionClosed, read_http, fp)"