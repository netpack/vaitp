"def default_dir_posix(tmp_dir=None):    """    Create or find default catalog store for posix systems    purpose of 'tmp_dir' is to enable way how to test this function easily    """    path_candidates = []    python_name = "python%d%d_compiled" % tuple(sys.version_info[:2])    if tmp_dir:        home_dir = tmp_dir    else:        home_dir = os.path.expanduser('~')    tmp_dir = tmp_dir or tempfile.gettempdir()    home_temp_dir_name = '.' + python_name    home_temp_dir = os.path.join(home_dir, home_temp_dir_name)    path_candidates.append(home_temp_dir)    temp_dir_name = repr(os.getuid()) + '_' + python_name    temp_dir_path = os.path.join(tmp_dir, temp_dir_name)    path_candidates.append(temp_dir_path)    for path in path_candidates:        _create_dirs(path)        if check_dir(path):            return path    # since we got here, both dirs are not useful    tmp_dir_path = find_valid_temp_dir(temp_dir_name, tmp_dir)    if not tmp_dir_path:        tmp_dir_path = create_temp_dir(temp_dir_name, tmp_dir=tmp_dir)    return tmp_dir_path"