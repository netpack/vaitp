"def job_log(request, client_id, project_name, spider_name, job_id):    """    get log of jog    :param request: request object    :param client_id: client id    :param project_name: project name    :param spider_name: spider name    :param job_id: job id    :return: log of job    """    if request.method == 'GET':        client = Client.objects.get(id=client_id)        # get log url        url = log_url(client.ip, client.port, project_name, spider_name, job_id)        # get last 1000 bytes of log        response = requests.get(url, timeout=5, headers={            'Range': 'bytes=-1000'        }, auth=(client.username, client.password) if client.auth else None)        # Get encoding        encoding = response.apparent_encoding        # log not found        if response.status_code == 404:            return JsonResponse({'message': 'Log Not Found'}, status=404)        # bytes to string        text = response.content.decode(encoding, errors='replace')        return HttpResponse(text)"