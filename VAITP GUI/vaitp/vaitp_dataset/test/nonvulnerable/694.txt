"def test_nan():    class Model(BaseModel):        dt: datetime        d: date    with pytest.raises(ValidationError) as exc_info:        Model(dt='nan', d='nan')    assert exc_info.value.errors() == [        {            'loc': ('dt',),            'msg': 'cannot convert float NaN to integer',            'type': 'value_error',        },        {            'loc': ('d',),            'msg': 'cannot convert float NaN to integer',            'type': 'value_error',        },    ]"