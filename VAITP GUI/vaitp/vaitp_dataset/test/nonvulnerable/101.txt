"        def _callback() -> None:            has_bad_ip = False            for address in addresses:                # We only expect IPv4 and IPv6 addresses since only A/AAAA lookups                # should go through this path.                if not isinstance(address, (IPv4Address, IPv6Address)):                    continue                ip_address = IPAddress(address.host)                if check_against_blacklist(                    ip_address, self._ip_whitelist, self._ip_blacklist                ):                    logger.info(                        "Dropped %s from DNS resolution to %s due to blacklist"                        % (ip_address, hostname)                    )                    has_bad_ip = True            # if we have a blacklisted IP, we'd like to raise an error to block the            # request, but all we can really do from here is claim that there were no            # valid results.            if not has_bad_ip:                for address in addresses:                    recv.addressResolved(address)            recv.resolutionComplete()"