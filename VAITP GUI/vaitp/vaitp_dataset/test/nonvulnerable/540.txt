"    def GenerateHostKeys(self, client):        """Generate new host keys for client."""        keylist = [keytmpl % client for keytmpl in self.hostkeys]        for hostkey in keylist:            if 'ssh_host_rsa_key.H_' == hostkey[:19]:                keytype = 'rsa'            elif 'ssh_host_dsa_key.H_' == hostkey[:19]:                keytype = 'dsa'            else:                keytype = 'rsa1'            if hostkey not in self.entries.keys():                fileloc = "%s/%s" % (self.data, hostkey)                publoc = self.data + '/' + ".".join([hostkey.split('.')[0],                                                     'pub',                                                     "H_%s" % client])                tempdir = tempfile.mkdtemp()                temploc = "%s/%s" % (tempdir, hostkey)                cmd = ["ssh-keygen", "-q", "-f", temploc, "-N", "",                       "-t", keytype, "-C", "root@%s" % client]                proc = Popen(cmd, stdout=PIPE, stdin=PIPE)                proc.communicate()                proc.wait()                try:                    shutil.copy(temploc, fileloc)                    shutil.copy("%s.pub" % temploc, publoc)                except IOError:                    err = sys.exc_info()[1]                    self.logger.error("Temporary SSH keys not found: %s" % err)                try:                    os.unlink(temploc)                    os.unlink("%s.pub" % temploc)                    os.rmdir(tempdir)                except OSError:                    err = sys.exc_info()[1]                    self.logger.error("Failed to unlink temporary ssh keys: %s"                                      % err)"