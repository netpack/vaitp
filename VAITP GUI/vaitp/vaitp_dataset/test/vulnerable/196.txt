"    def icalc(self, irc, msg, args, text):        """<math expression>        This is the same as the calc command except that it allows integer        math, and can thus cause the bot to suck up CPU.  Hence it requires        the 'trusted' capability to use.        """        if self._calc_match_forbidden_chars.match(text):            # Note: this is important to keep this to forbid usage of            # __builtins__            irc.error(_('There\'s really no reason why you should have '                           'underscores or brackets in your mathematical '                           'expression.  Please remove them.'))            return        # This removes spaces, too, but we'll leave the removal of _[] for        # safety's sake.        text = self._calc_remover(text)        if 'lambda' in text:            irc.error(_('You can\'t use lambda in this command.'))            return        text = text.replace('lambda', '')        try:            self.log.info('evaluating %q from %s', text, msg.prefix)            irc.reply(str(eval(text, self._mathEnv, self._mathEnv)))        except OverflowError:            maxFloat = math.ldexp(0.9999999999999999, 1024)            irc.error(_('The answer exceeded %s or so.') % maxFloat)        except TypeError:            irc.error(_('Something in there wasn\'t a valid number.'))        except NameError as e:            irc.error(_('%s is not a defined function.') % str(e).split()[1])        except Exception as e:            irc.error(utils.exnToString(e))"