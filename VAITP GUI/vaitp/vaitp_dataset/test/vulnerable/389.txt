"    def load(self):        if len(self.tile) != 1 or self.tile[0][0] != "iptc":            return ImageFile.ImageFile.load(self)        type, tile, box = self.tile[0]        encoding, offset = tile        self.fp.seek(offset)        # Copy image data to temporary file        outfile = tempfile.mktemp()        o = open(outfile, "wb")        if encoding == "raw":            # To simplify access to the extracted file,            # prepend a PPM header            o.write("P5\n%d %d\n255\n" % self.size)        while True:            type, size = self.field()            if type != (8, 10):                break            while size > 0:                s = self.fp.read(min(size, 8192))                if not s:                    break                o.write(s)                size = size - len(s)        o.close()        try:            try:                # fast                self.im = Image.core.open_ppm(outfile)            except:                # slightly slower                im = Image.open(outfile)                im.load()                self.im = im.im        finally:            try: os.unlink(outfile)            except: pass"