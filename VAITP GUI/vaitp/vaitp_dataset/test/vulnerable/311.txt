"    def __post_init__(self, title: str) -> None:  # type: ignore        super().__post_init__()        reference = Reference.from_ref(title)        dedup_counter = 0        while reference.class_name in _existing_enums:            existing = _existing_enums[reference.class_name]            if self.values == existing.values:                break  # This is the same Enum, we're good            dedup_counter += 1            reference = Reference.from_ref(f"{reference.class_name}{dedup_counter}")        self.reference = reference        inverse_values = {v: k for k, v in self.values.items()}        if self.default is not None:            self.default = f"{self.reference.class_name}.{inverse_values[self.default]}"        _existing_enums[self.reference.class_name] = self"