"def test_digest_next_nonce_nc():    # Test that if the server sets nextnonce that we reset    # the nonce count back to 1    http = httplib2.Http()    password = tests.gen_password()    grenew_nonce = [None]    handler = tests.http_reflect_with_auth(        allow_scheme="digest",        allow_credentials=(("joe", password),),        out_renew_nonce=grenew_nonce,    )    with tests.server_request(handler, request_count=5) as uri:        http.add_credentials("joe", password)        response1, _ = http.request(uri, "GET")        info = httplib2._parse_www_authenticate(response1, "authentication-info")        assert response1.status == 200        assert info.get("digest", {}).get("nc") == "00000001", info        assert not info.get("digest", {}).get("nextnonce"), info        response2, _ = http.request(uri, "GET")        info2 = httplib2._parse_www_authenticate(response2, "authentication-info")        assert info2.get("digest", {}).get("nc") == "00000002", info2        grenew_nonce[0]()        response3, content = http.request(uri, "GET")        info3 = httplib2._parse_www_authenticate(response3, "authentication-info")        assert response3.status == 200        assert info3.get("digest", {}).get("nc") == "00000001", info3"