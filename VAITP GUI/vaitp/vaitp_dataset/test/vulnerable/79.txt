"    def _writeHeaders(self, transport, TEorCL):        hosts = self.headers.getRawHeaders(b'host', ())        if len(hosts) != 1:            raise BadHeaders(u"Exactly one Host header required")        # In the future, having the protocol version be a parameter to this        # method would probably be good.  It would be nice if this method        # weren't limited to issuing HTTP/1.1 requests.        requestLines = []        requestLines.append(b' '.join([self.method, self.uri,            b'HTTP/1.1\r\n']))        if not self.persistent:            requestLines.append(b'Connection: close\r\n')        if TEorCL is not None:            requestLines.append(TEorCL)        for name, values in self.headers.getAllRawHeaders():            requestLines.extend([name + b': ' + v + b'\r\n' for v in values])        requestLines.append(b'\r\n')        transport.writeSequence(requestLines)"