"    def test_broken_chunked_encoding(self):        control_line = "20;\r\n"  # 20 hex = 32 dec        s = "This string has 32 characters.\r\n"        to_send = "GET / HTTP/1.1\nTransfer-Encoding: chunked\n\n"        to_send += control_line + s        # garbage in input        to_send += "GET / HTTP/1.1\nTransfer-Encoding: chunked\n\n"        to_send += control_line + s        to_send = tobytes(to_send)        self.connect()        self.sock.send(to_send)        fp = self.sock.makefile("rb", 0)        line, headers, response_body = read_http(fp)        # receiver caught garbage and turned it into a 400        self.assertline(line, "400", "Bad Request", "HTTP/1.1")        cl = int(headers["content-length"])        self.assertEqual(cl, len(response_body))        self.assertEqual(            sorted(headers.keys()), ["connection", "content-length", "content-type", "date", "server"]        )        self.assertEqual(headers["content-type"], "text/plain")        # connection has been closed        self.send_check_error(to_send)        self.assertRaises(ConnectionClosed, read_http, fp)"