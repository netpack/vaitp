"def read_http(fp):  # pragma: no cover    try:        response_line = fp.readline()    except socket.error as exc:        fp.close()        # errno 104 is ENOTRECOVERABLE, In WinSock 10054 is ECONNRESET        if get_errno(exc) in (errno.ECONNABORTED, errno.ECONNRESET, 104, 10054):            raise ConnectionClosed        raise    if not response_line:        raise ConnectionClosed    header_lines = []    while True:        line = fp.readline()        if line in (b"\r\n", b"\n", b""):            break        else:            header_lines.append(line)    headers = dict()    for x in header_lines:        x = x.strip()        if not x:            continue        key, value = x.split(b": ", 1)        key = key.decode("iso-8859-1").lower()        value = value.decode("iso-8859-1")        assert key not in headers, "%s header duplicated" % key        headers[key] = value    if "content-length" in headers:        num = int(headers["content-length"])        body = b""        left = num        while left > 0:            data = fp.read(left)            if not data:                break            body += data            left -= len(data)    else:        # read until EOF        body = fp.read()    return response_line, headers, body"