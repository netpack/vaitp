"    def makeTrustRoot(self):        # If this option is specified, use a specific root CA cert. This is useful for testing when it's not        # practical to get the client cert signed by a real root CA but should never be used on a production server.        caCertFilename = self.sydent.cfg.get('http', 'replication.https.cacert')        if len(caCertFilename) > 0:            try:                fp = open(caCertFilename)                caCert = twisted.internet.ssl.Certificate.loadPEM(fp.read())                fp.close()            except:                logger.warn("Failed to open CA cert file %s", caCertFilename)                raise            logger.warn("Using custom CA cert file: %s", caCertFilename)            return twisted.internet._sslverify.OpenSSLCertificateAuthorities([caCert.original])        else:            return twisted.internet.ssl.OpenSSLDefaultPaths()"