"    def test_runAllImportStepsFromProfile_unicode_id_creates_reports(self):        TITLE = 'original title'        PROFILE_ID = u'snapshot-testing'        site = self._makeSite(TITLE)        tool = self._makeOne('setup_tool').__of__(site)        registry = tool.getImportStepRegistry()        registry.registerStep(            'dependable', '1', _underscoreSiteTitle, ('purging', ))        registry.registerStep(            'dependent', '1', _uppercaseSiteTitle, ('dependable', ))        registry.registerStep('purging', '1', _purgeIfRequired)        tool.runAllImportStepsFromProfile(PROFILE_ID)        prefix = str('import-all-%s' % PROFILE_ID)        logged = [x for x in tool.objectIds('File') if x.startswith(prefix)]        self.assertEqual(len(logged), 1)        # Check acess restriction on log files        logged = [x for x in tool.objectIds('File')]        for file_id in logged:            file_ob = tool._getOb(file_id)            rop_info = file_ob.rolesOfPermission(view)            allowed_roles = sorted([x['name'] for x in rop_info                                    if x['selected']])            self.assertEqual(allowed_roles, ['Manager', 'Owner'])            self.assertFalse(file_ob.acquiredRolesAreUsedBy(view))"