def write_to_location(location, content):
Write content to a path. Ensures that the entire path exists, creating directories if necessary.
:param location: path that should exist
:type  location: str
:param content: bits to be written to file
:type  content: str
os.makedirs(os.path.dirname(location))
except OSError, e:
if e.errno != errno.EEXIST:
raise
try:
fp.write(content)
fp.close()
def update_server_key(command_inst):
Ensure that the server's public key stored on the consumer is up to date.
:param command_inst: instance of a CLI command
:type  command_inst: pulp.client.extensions.extensions.PulpCliCommand
key_reply = command_inst.context.server.static.get_server_key()
except Exception, e:
msg = _('Download server RSA key failed [%(e)s]' % {'e': e})
command_inst.prompt.render_failure_message(msg)
else:
key_location = command_inst.context.config['server']['rsa_pub']
write_to_location(key_location, key_reply.response_body)
update_server_key(self)
update_server_key(self)
