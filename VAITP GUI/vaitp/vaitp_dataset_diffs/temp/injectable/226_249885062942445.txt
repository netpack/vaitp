class DeprecatedPasswordAction(argparse.Action):
def __init__(self, option_strings, dest, nargs=None, **kwargs):
super(DeprecatedPasswordAction, self).__init__(option_strings, dest,
**kwargs)
def __call__(self, parser, namespace, values, option_string=None):
msg1 = ('%s Deprecated. Use --keycloak-admin-password-file instead '
'(which also accepts - to read ) '
'or the KEYCLOAK_ADMIN_PASSWORD environment variable. '
\'Using "-" to read the password \'
'will continue to work for the new few releases for backward '
'compatibility, then will be removed. '
'See the man page.' % self.option_strings)
msg2 = ('Deprecated. It is insecure to pass a password on the '
'command line. Use --keycloak-admin-password-file or the '
'KEYCLOAK_ADMIN_PASSWORD environment variable instead. '
'See the man page.')
if values == '-':
print(msg1, file=sys.stderr)
setattr(namespace, self.dest, values)
else:
raise argparse.ArgumentError(self, msg2)
group.add_argument('-P', '--keycloak-admin-password-file',
type=argparse.FileType('rb'),
help=('file containing admin password '
\'(or use a hyphen "-" to read the password \'
')'))
action=DeprecatedPasswordAction,
dest='deprecated_keycloak_admin_password',
help=('Deprecated. Use  --keycloak-admin-password-file '
'instead. During transition perion this argument '
'will continue to accept a hyphen to indicate '
'the password will be read read )'))
options.keycloak_admin_password = None
if options.keycloak_admin_password_file is not None:
options.keycloak_admin_password = options.keycloak_admin_password_file.readline().strip()
options.keycloak_admin_password_file.close()
try:
if options.deprecated_keycloak_admin_password == '-':
options.keycloak_admin_password = sys.stdin.readline().strip()
except AttributeError:
pass
if options.keycloak_admin_password is None:
options.keycloak_admin_password = getpass.getpass(
'enter %s password: ' % (options.keycloak_admin_username))
