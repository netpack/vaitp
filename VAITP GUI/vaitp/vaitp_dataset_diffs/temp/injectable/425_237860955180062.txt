import re
_VALID_METHOD = re.compile(
br"\\A[%s]+\\Z" % (
bytes().join(
(
b"!", b"
b"+", b"-", b".", b"^", b"_", b"`", b"|", b"~",
b"\\x30-\\x39",
b"\\x41-\\x5a",
b"\\x61-\\x7A",
),
),
),
)
def _ensureValidMethod(method):
"""
An HTTP method is an HTTP token, which consists of any visible
ASCII character that is not a delimiter (i.e. one of
C{"(),/:;<=>?@[\\\\]{}}.)
@param method: the method to check
@type method: L{bytes}
@return: the method if it is valid
@rtype: L{bytes}
@raise ValueError: if the method is not valid
@see: U{https://tools.ietf.org/html/rfc7230
U{https://tools.ietf.org/html/rfc7230
U{https://tools.ietf.org/html/rfc5234
"""
if _VALID_METHOD.match(method):
return method
raise ValueError("Invalid method {!r}".format(method))
_VALID_URI = re.compile(br'\\A[\\x21-\\x7e]+\\Z')
def _ensureValidURI(uri):
"""
A valid URI cannot contain control characters (i.e., characters
between 0-32, inclusive and 127) or non-ASCII characters (i.e.,
characters with values between 128-255, inclusive).
@param uri: the URI to check
@type uri: L{bytes}
@return: the URI if it is valid
@rtype: L{bytes}
@raise ValueError: if the URI is not valid
@see: U{https://tools.ietf.org/html/rfc3986
U{https://tools.ietf.org/html/rfc3986
U{https://tools.ietf.org/html/rfc5234
"""
if _VALID_URI.match(uri):
return uri
raise ValueError("Invalid URI {!r}".format(uri))
self.method = _ensureValidMethod(method)
self.uri = _ensureValidURI(uri)
requestLines.append(
b' '.join(
[
_ensureValidMethod(self.method),
_ensureValidURI(self.uri),
b'HTTP/1.1\\r\\n',
]
),
)
