import subprocess, importlib.util, sys, re
from time import sleep
from rich.console import Console

console = Console()

console.log(f"[bold red]Starting VAITP Vulnerability Monitor!\n")
console.log(f"[bold red] ██▒   █▓ ▄▄▄       ██▓▄▄▄█████▓ ██▓███  \n▓██░   █▒▒████▄    ▓██▒▓  ██▒ ▓▒▓██░  ██▒\n ▓██  █▒░▒██  ▀█▄  ▒██▒▒ ▓██░ ▒░▓██░ ██▓▒\n  ▒██ █░░░██▄▄▄▄██ ░██░░ ▓██▓ ░ ▒██▄█▓▒ ▒\n   ▒▀█░   ▓█   ▓██▒░██░  ▒██▒ ░ ▒██▒ ░  ░\n   ░ ▐░   ▒▒   ▓▒█░░▓    ▒ ░░   ▒▓▒░ ░  ░\n   ░ ░░    ▒   ▒▒ ░ ▒ ░    ░    ░▒ ░     \n     ░░    ░   ▒    ▒ ░  ░      ░░       \n      ░        ░  ░ ░                    \n     ░                                   \nVulnerability Attack and Injection Tool for Python\nVulnerability Monitor by Frédéric Bogaerts")

#print("Starting VAITP Vulnerability Monitor!")

def load_external_module(module_path, module_name):
    """
    Dynamically load a module from the given path.
    """
    spec = importlib.util.spec_from_file_location(module_name, module_path)
    module = importlib.util.module_from_spec(spec)
    sys.modules[module_name] = module
    spec.loader.exec_module(module)
    return module

vaitp_db = load_external_module("0_vaitp_db.py","vaitp_db")

query = f"SELECT COUNT(id) FROM python_vulnerabilities;"
results = vaitp_db.execute_query(query)

if results:
    console.log(f"[bold blue]Total known vulnerabilities in VAITP dataset: {results[0][0]}")
else:
    console.log(f"[bold red]Failed to connect to the VAITP dataset.")
    sys.exit(1)

scripts = ['1_vaitp_cvedetails_web_scrapper.py', '2_vaitp_cve_org_web_scraper.py', '3_vaitp_cve_nvd_gov_web_scraper.py']

def run_script(script_name):
    try:
        process = subprocess.Popen(['python3', script_name], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        
        console.log(f"[bold blue]\nRunning {script_name}:")

        # Read output from the process line by line
        for line in iter(process.stdout.readline, ''):
            print(line.strip())

        # Wait for the process to finish
        process.wait()
            
    except subprocess.CalledProcessError as e:
        console.log(f"[bold red]Error occurred while running {script_name}:[/bold red]")
        print(e.stderr)
        

# Run each script and print its output
for script in scripts:
    run_script(script)

query = f"SELECT COUNT(id) FROM python_vulnerabilities;"
results = vaitp_db.execute_query(query)

if results:
    console.log(f"[bold blue]Total known vulnerabilities in VAITP dataset: {results[0][0]}")

console.log("[bold blue]VAITP Vulnerability Monitor executed correctly.")