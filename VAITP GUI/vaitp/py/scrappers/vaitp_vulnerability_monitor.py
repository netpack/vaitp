import subprocess, importlib.util, sys, re
from rich.console import Console
from time import sleep

console = Console()

console.log(f"[bold blue]Starting VAITP Vulnerability Monitor!\n")

console.log(f"[bold red] ██▒   █▓ ▄▄▄       ██▓▄▄▄█████▓ ██▓███  \n▓██░   █▒▒████▄    ▓██▒▓  ██▒ ▓▒▓██░  ██▒\n ▓██  █▒░▒██  ▀█▄  ▒██▒▒ ▓██░ ▒░▓██░ ██▓▒\n  ▒██ █░░░██▄▄▄▄██ ░██░░ ▓██▓ ░ ▒██▄█▓▒ ▒\n   ▒▀█░   ▓█   ▓██▒░██░  ▒██▒ ░ ▒██▒ ░  ░\n   ░ ▐░   ▒▒   ▓▒█░░▓    ▒ ░░   ▒▓▒░ ░  ░\n   ░ ░░    ▒   ▒▒ ░ ▒ ░    ░    ░▒ ░     \n     ░░    ░   ▒    ▒ ░  ░      ░░       \n      ░        ░  ░ ░                    \n     ░                                   \nVulnerability Attack and Injection Tool for Python\nVulnerability Monitor by Frédéric Bogaerts")


#print("Starting VAITP Vulnerability Monitor!")

def load_external_module(module_path, module_name):
    """
    Dynamically load a module from the given path.
    """
    spec = importlib.util.spec_from_file_location(module_name, module_path)
    module = importlib.util.module_from_spec(spec)
    sys.modules[module_name] = module
    spec.loader.exec_module(module)
    return module

vaitp_db = load_external_module("0_vaitp_db.py","vaitp_db")
    
scripts = ['1_vaitp_cvedetails_web_scrapper.py', '2_vaitp_cve_org_web_scraper.py', '3_vaitp_cve_nvd_gov_web_scraper.py']

def run_script(script_name):
    try:
        result = subprocess.run(['python', script_name], capture_output=True, text=True, check=True)
        
        console.log(f"[bold blue]\nRunning {script_name}:")
        console.log(result.stdout)
        
        if result.stderr:
            console.log(f"[bold red]Error in {script_name}:")
            console.log(result.stderr)
        
    except subprocess.CalledProcessError as e:
        console.log(f"[bold red]Execution of {script_name} failed with return code {e.returncode}")
        console.log(e.output)

# Run each script and print its output
for script in scripts:
    run_script(script)

query = f"SELECT COUNT(id) FROM python_vulnerabilities;"
results = vaitp_db.execute_query(query)

if results:
    console.log(f"[bold blue]Total known vulnerabilities in VAITP dataset: {results[0][0]}")

console.log("[bold blue]VAITP Vulnerability Monitor executed correctly.")